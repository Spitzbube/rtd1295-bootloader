/**************************************************************
// Spec Version                  : 0.12
// Parser Version                : DVR_Parser_6.8(110516)
// CModelGen Version             : 5.0 2009.04.09
// Naming Rule                   :  Register_Name
// Naming Rule                   : Module_Register_Name_reg
// Parse Option                  : Only Parse _op1
// Parse Address Region          : All Address Region 
// Decode bit number             : 12 bits
// Firmware Header Generate Date : 2012/8/15 15:47:52
***************************************************************/


#ifndef _MIS_REG_H_INCLUDED_
#define _MIS_REG_H_INCLUDED_
#ifdef  _MIS_USE_STRUCT
typedef struct 
{
unsigned int     reserved_0:4;
unsigned int     reserved_1:1;
unsigned int     reserved_2:6;
unsigned int     GPIODA_INT:1;
unsigned int     GPIOA_INT:1;
unsigned int     DDC4_INT:1;
unsigned int     DDC3_INT:1;
unsigned int     DDC2_INT:1;
unsigned int     DDC1_INT:1;
unsigned int     TC7_INT:1;
unsigned int     TC6_INT:1;
unsigned int     TC5_INT:1;
unsigned int     TC4_INT:1;
unsigned int     TC3_INT:1;
unsigned int     TC2_INT:1;
unsigned int     TC1_INT:1;
unsigned int     TC0_INT:1;
unsigned int     UR3_INT:1;
unsigned int     UR2_INT:1;
unsigned int     UR1_INT:1;
unsigned int     UR3_TO_INT:1;
unsigned int     WDOG_NMI_INT:1;
unsigned int     reserved_3:1;
unsigned int     write_data:1;
}UMSK_ISR;

typedef struct 
{
unsigned int     reserved_0:4;
unsigned int     I2C1_INT:1;
unsigned int     I2C2_INT:1;
unsigned int     reserved_1:1;
unsigned int     sc0_int:1;
unsigned int     reserved_2:2;
unsigned int     PCMCIA_INT:1;
unsigned int     GPIODA_INT:1;
unsigned int     GPIOA_INT:1;
unsigned int     DDC4_INT:1;
unsigned int     DDC3_INT:1;
unsigned int     DDC2_INT:1;
unsigned int     DDC1_INT:1;
unsigned int     TC7_INT:1;
unsigned int     TC6_INT:1;
unsigned int     TC5_INT:1;
unsigned int     TC4_INT:1;
unsigned int     TC3_INT:1;
unsigned int     TC2_INT:1;
unsigned int     TC1_INT:1;
unsigned int     TC0_INT:1;
unsigned int     UR3_INT:1;
unsigned int     UR2_INT:1;
unsigned int     UR1_INT:1;
unsigned int     UR3_TO_INT:1;
unsigned int     reserved_3:1;
unsigned int     reserved_4:1;
unsigned int     write_data:1;
}ISR;

typedef struct 
{
unsigned int     reserved_0:20;
unsigned int     write_enable3:1;
unsigned int     sel1:4;
unsigned int     write_enable2:1;
unsigned int     sel0:4;
unsigned int     write_enable1:1;
unsigned int     enable:1;
}DBG;

typedef struct 
{
unsigned int     write_enable4:1;
unsigned int     Rvd4:7;
unsigned int     write_enable3:1;
unsigned int     Rvd3:7;
unsigned int     write_enable2:1;
unsigned int     Rvd2:1;
unsigned int     pwm7_od_mode:1;
unsigned int     pwm6_od_mode:1;
unsigned int     pwm5_od_mode:1;
unsigned int     pwm4_od_mode:1;
unsigned int     pwm3_od_mode:1;
unsigned int     pwm2_od_mode:1;
unsigned int     write_enable1:1;
unsigned int     pwm1_od_mode:1;
unsigned int     pwm0_od_mode:1;
unsigned int     sc_od_mode:1;
unsigned int     DDC4dataindetect:1;
unsigned int     DDC3dataindetect:1;
unsigned int     DDC2dataindetect:1;
unsigned int     DDC1dataindetect:1;
}DUMMY;

typedef struct 
{
unsigned int     reserved_0:12;
unsigned int     DDC5_SDA_DELAY:4;
unsigned int     DDC4_SDA_DELAY:4;
unsigned int     DDC3_SDA_DELAY:4;
unsigned int     DDC2_SDA_DELAY:4;
unsigned int     DDC1_SDA_DELAY:4;
}DDC_SDA_INPUT_DELAY_CTRL;

typedef struct 
{
unsigned int     INT30:1;
unsigned int     INT29:1;
unsigned int     INT28:1;
unsigned int     INT27:1;
unsigned int     INT26:1;
unsigned int     INT25:1;
unsigned int     INT24:1;
unsigned int     INT23:1;
unsigned int     INT22:1;
unsigned int     INT21:1;
unsigned int     INT20:1;
unsigned int     INT19:1;
unsigned int     INT18:1;
unsigned int     INT17:1;
unsigned int     INT16:1;
unsigned int     INT15:1;
unsigned int     INT14:1;
unsigned int     INT13:1;
unsigned int     INT12:1;
unsigned int     INT11:1;
unsigned int     INT10:1;
unsigned int     INT9:1;
unsigned int     INT8:1;
unsigned int     INT7:1;
unsigned int     INT6:1;
unsigned int     INT5:1;
unsigned int     INT4:1;
unsigned int     INT3:1;
unsigned int     INT2:1;
unsigned int     INT1:1;
unsigned int     INT0:1;
unsigned int     write_data:1;
}UMSK_ISR_GP0A;

typedef struct 
{
unsigned int     INT61:1;
unsigned int     INT60:1;
unsigned int     INT59:1;
unsigned int     INT58:1;
unsigned int     INT57:1;
unsigned int     INT56:1;
unsigned int     INT55:1;
unsigned int     INT54:1;
unsigned int     INT53:1;
unsigned int     INT52:1;
unsigned int     INT51:1;
unsigned int     INT50:1;
unsigned int     INT49:1;
unsigned int     INT48:1;
unsigned int     INT47:1;
unsigned int     INT46:1;
unsigned int     INT45:1;
unsigned int     INT44:1;
unsigned int     INT43:1;
unsigned int     INT42:1;
unsigned int     INT41:1;
unsigned int     INT40:1;
unsigned int     INT39:1;
unsigned int     INT38:1;
unsigned int     INT37:1;
unsigned int     INT36:1;
unsigned int     INT35:1;
unsigned int     INT34:1;
unsigned int     INT33:1;
unsigned int     INT32:1;
unsigned int     INT31:1;
unsigned int     write_data:1;
}UMSK_ISR_GP1A;

typedef struct 
{
unsigned int     INT92:1;
unsigned int     INT91:1;
unsigned int     INT90:1;
unsigned int     INT89:1;
unsigned int     INT88:1;
unsigned int     INT87:1;
unsigned int     INT86:1;
unsigned int     INT85:1;
unsigned int     INT84:1;
unsigned int     INT83:1;
unsigned int     INT82:1;
unsigned int     INT81:1;
unsigned int     INT80:1;
unsigned int     INT79:1;
unsigned int     INT78:1;
unsigned int     INT77:1;
unsigned int     INT76:1;
unsigned int     INT75:1;
unsigned int     INT74:1;
unsigned int     INT73:1;
unsigned int     INT72:1;
unsigned int     INT71:1;
unsigned int     INT70:1;
unsigned int     INT69:1;
unsigned int     INT68:1;
unsigned int     INT67:1;
unsigned int     INT66:1;
unsigned int     INT65:1;
unsigned int     INT64:1;
unsigned int     INT63:1;
unsigned int     INT62:1;
unsigned int     write_data:1;
}UMSK_ISR_GP2A;

typedef struct 
{
unsigned int     INT123:1;
unsigned int     INT122:1;
unsigned int     INT121:1;
unsigned int     INT120:1;
unsigned int     INT119:1;
unsigned int     INT118:1;
unsigned int     INT117:1;
unsigned int     INT116:1;
unsigned int     INT115:1;
unsigned int     INT114:1;
unsigned int     INT113:1;
unsigned int     INT112:1;
unsigned int     INT111:1;
unsigned int     INT110:1;
unsigned int     INT109:1;
unsigned int     INT108:1;
unsigned int     INT107:1;
unsigned int     INT106:1;
unsigned int     INT105:1;
unsigned int     INT104:1;
unsigned int     INT103:1;
unsigned int     INT102:1;
unsigned int     INT101:1;
unsigned int     INT100:1;
unsigned int     INT99:1;
unsigned int     INT98:1;
unsigned int     INT97:1;
unsigned int     INT96:1;
unsigned int     INT95:1;
unsigned int     INT94:1;
unsigned int     INT93:1;
unsigned int     write_data:1;
}UMSK_ISR_GP3A;

typedef struct 
{
unsigned int     INT154:1;
unsigned int     INT153:1;
unsigned int     INT152:1;
unsigned int     INT151:1;
unsigned int     INT150:1;
unsigned int     INT149:1;
unsigned int     INT148:1;
unsigned int     INT147:1;
unsigned int     INT146:1;
unsigned int     INT145:1;
unsigned int     INT144:1;
unsigned int     INT143:1;
unsigned int     INT142:1;
unsigned int     INT141:1;
unsigned int     INT140:1;
unsigned int     INT139:1;
unsigned int     INT138:1;
unsigned int     INT137:1;
unsigned int     INT136:1;
unsigned int     INT135:1;
unsigned int     INT134:1;
unsigned int     INT133:1;
unsigned int     INT132:1;
unsigned int     INT131:1;
unsigned int     INT130:1;
unsigned int     INT129:1;
unsigned int     INT128:1;
unsigned int     INT127:1;
unsigned int     INT126:1;
unsigned int     INT125:1;
unsigned int     INT124:1;
unsigned int     write_data:1;
}UMSK_ISR_GP4A;

typedef struct 
{
unsigned int     reserved_0:16;
unsigned int     INT169:1;
unsigned int     INT168:1;
unsigned int     INT167:1;
unsigned int     INT166:1;
unsigned int     INT165:1;
unsigned int     INT164:1;
unsigned int     INT163:1;
unsigned int     INT162:1;
unsigned int     INT161:1;
unsigned int     INT160:1;
unsigned int     INT159:1;
unsigned int     INT158:1;
unsigned int     INT157:1;
unsigned int     INT156:1;
unsigned int     INT155:1;
unsigned int     write_data:1;
}UMSK_ISR_GP5A;

typedef struct 
{
unsigned int     INT30:1;
unsigned int     INT29:1;
unsigned int     INT28:1;
unsigned int     INT27:1;
unsigned int     INT26:1;
unsigned int     INT25:1;
unsigned int     INT24:1;
unsigned int     INT23:1;
unsigned int     INT22:1;
unsigned int     INT21:1;
unsigned int     INT20:1;
unsigned int     INT19:1;
unsigned int     INT18:1;
unsigned int     INT17:1;
unsigned int     INT16:1;
unsigned int     INT15:1;
unsigned int     INT14:1;
unsigned int     INT13:1;
unsigned int     INT12:1;
unsigned int     INT11:1;
unsigned int     INT10:1;
unsigned int     INT9:1;
unsigned int     INT8:1;
unsigned int     INT7:1;
unsigned int     INT6:1;
unsigned int     INT5:1;
unsigned int     INT4:1;
unsigned int     INT3:1;
unsigned int     INT2:1;
unsigned int     INT1:1;
unsigned int     INT0:1;
unsigned int     write_data:1;
}UMSK_ISR_GP0DA;

typedef struct 
{
unsigned int     INT61:1;
unsigned int     INT60:1;
unsigned int     INT59:1;
unsigned int     INT58:1;
unsigned int     INT57:1;
unsigned int     INT56:1;
unsigned int     INT55:1;
unsigned int     INT54:1;
unsigned int     INT53:1;
unsigned int     INT52:1;
unsigned int     INT51:1;
unsigned int     INT50:1;
unsigned int     INT49:1;
unsigned int     INT48:1;
unsigned int     INT47:1;
unsigned int     INT46:1;
unsigned int     INT45:1;
unsigned int     INT44:1;
unsigned int     INT43:1;
unsigned int     INT42:1;
unsigned int     INT41:1;
unsigned int     INT40:1;
unsigned int     INT39:1;
unsigned int     INT38:1;
unsigned int     INT37:1;
unsigned int     INT36:1;
unsigned int     INT35:1;
unsigned int     INT34:1;
unsigned int     INT33:1;
unsigned int     INT32:1;
unsigned int     INT31:1;
unsigned int     write_data:1;
}UMSK_ISR_GP1DA;

typedef struct 
{
unsigned int     INT92:1;
unsigned int     INT91:1;
unsigned int     INT90:1;
unsigned int     INT89:1;
unsigned int     INT88:1;
unsigned int     INT87:1;
unsigned int     INT86:1;
unsigned int     INT85:1;
unsigned int     INT84:1;
unsigned int     INT83:1;
unsigned int     INT82:1;
unsigned int     INT81:1;
unsigned int     INT80:1;
unsigned int     INT79:1;
unsigned int     INT78:1;
unsigned int     INT77:1;
unsigned int     INT76:1;
unsigned int     INT75:1;
unsigned int     INT74:1;
unsigned int     INT73:1;
unsigned int     INT72:1;
unsigned int     INT71:1;
unsigned int     INT70:1;
unsigned int     INT69:1;
unsigned int     INT68:1;
unsigned int     INT67:1;
unsigned int     INT66:1;
unsigned int     INT65:1;
unsigned int     INT64:1;
unsigned int     INT63:1;
unsigned int     INT62:1;
unsigned int     write_data:1;
}UMSK_ISR_GP2DA;

typedef struct 
{
unsigned int     INT123:1;
unsigned int     INT122:1;
unsigned int     INT121:1;
unsigned int     INT120:1;
unsigned int     INT119:1;
unsigned int     INT118:1;
unsigned int     INT117:1;
unsigned int     INT116:1;
unsigned int     INT115:1;
unsigned int     INT114:1;
unsigned int     INT113:1;
unsigned int     INT112:1;
unsigned int     INT111:1;
unsigned int     INT110:1;
unsigned int     INT109:1;
unsigned int     INT108:1;
unsigned int     INT107:1;
unsigned int     INT106:1;
unsigned int     INT105:1;
unsigned int     INT104:1;
unsigned int     INT103:1;
unsigned int     INT102:1;
unsigned int     INT101:1;
unsigned int     INT100:1;
unsigned int     INT99:1;
unsigned int     INT98:1;
unsigned int     INT97:1;
unsigned int     INT96:1;
unsigned int     INT95:1;
unsigned int     INT94:1;
unsigned int     INT93:1;
unsigned int     write_data:1;
}UMSK_ISR_GP3DA;

typedef struct 
{
unsigned int     INT154:1;
unsigned int     INT153:1;
unsigned int     INT152:1;
unsigned int     INT151:1;
unsigned int     INT150:1;
unsigned int     INT149:1;
unsigned int     INT148:1;
unsigned int     INT147:1;
unsigned int     INT146:1;
unsigned int     INT145:1;
unsigned int     INT144:1;
unsigned int     INT143:1;
unsigned int     INT142:1;
unsigned int     INT141:1;
unsigned int     INT140:1;
unsigned int     INT139:1;
unsigned int     INT138:1;
unsigned int     INT137:1;
unsigned int     INT136:1;
unsigned int     INT135:1;
unsigned int     INT134:1;
unsigned int     INT133:1;
unsigned int     INT132:1;
unsigned int     INT131:1;
unsigned int     INT130:1;
unsigned int     INT129:1;
unsigned int     INT128:1;
unsigned int     INT127:1;
unsigned int     INT126:1;
unsigned int     INT125:1;
unsigned int     INT124:1;
unsigned int     write_data:1;
}UMSK_ISR_GP4DA;

typedef struct 
{
unsigned int     reserved_0:16;
unsigned int     INT169:1;
unsigned int     INT168:1;
unsigned int     INT167:1;
unsigned int     INT166:1;
unsigned int     INT165:1;
unsigned int     INT164:1;
unsigned int     INT163:1;
unsigned int     INT162:1;
unsigned int     INT161:1;
unsigned int     INT160:1;
unsigned int     INT159:1;
unsigned int     INT158:1;
unsigned int     INT157:1;
unsigned int     INT156:1;
unsigned int     INT155:1;
unsigned int     write_data:1;
}UMSK_ISR_GP5DA;

typedef struct 
{
unsigned int     write_enable2:1;
unsigned int     Rvd2:15;
unsigned int     write_enable1:1;
unsigned int     Rvd1:15;
}DUMMY1;

typedef struct 
{
unsigned int     Startbitdelayenable:1;
unsigned int     reserved_0:7;
unsigned int     Start_bit_delay_sel:8;
unsigned int     Databitdelayenable:1;
unsigned int     reserved_1:7;
unsigned int     Databitdelaysel:8;
}I2C1_SDA_OUTPUT_DELAY_CTRL;

typedef struct 
{
unsigned int     Startbitdelayenable:1;
unsigned int     reserved_0:7;
unsigned int     Start_bit_delay_sel:8;
unsigned int     Databitdelayenable:1;
unsigned int     reserved_1:7;
unsigned int     Databitdelaysel:8;
}I2C2_SDA_OUTPUT_DELAY_CTRL;

typedef struct 
{
unsigned int     reserved_0:4;
unsigned int     I2C1:1;
unsigned int     I2C2:1;
unsigned int     reserved_1:1;
unsigned int     sc0:1;
unsigned int     reserved_2:2;
unsigned int     PCMCIA:1;
unsigned int     GPIODA:1;
unsigned int     GPIOA:1;
unsigned int     reserved_3:5;
unsigned int     TC7:1;
unsigned int     TC6:1;
unsigned int     TC5:1;
unsigned int     TC4:1;
unsigned int     DDC1:1;
unsigned int     DDC2:1;
unsigned int     DDC3:1;
unsigned int     DDC4:1;
unsigned int     UR3:1;
unsigned int     UR2:1;
unsigned int     UR1:1;
unsigned int     UR3_TO:1;
unsigned int     reserved_4:1;
unsigned int     reserved_5:1;
}SCPU_INT_EN;

typedef struct 
{
unsigned int     Rvd3:4;
unsigned int     to_len:8;
unsigned int     to_int_en:1;
unsigned int     TOAUAREQ:1;
unsigned int     Rvd1:1;
unsigned int     MDIFEN:1;
unsigned int     reserved_0:2;
unsigned int     TXEMPTHR:6;
unsigned int     reserved_1:2;
unsigned int     RXFULTHR:6;
}UR_CTRL;

typedef struct 
{
unsigned int     reserved_0:19;
unsigned int     rx_wrd_count:5;
unsigned int     reserved_1:3;
unsigned int     tx_wrd_count:5;
}UR_STS;

typedef struct 
{
unsigned int     GPDIR:32;
}GP0DIR;

typedef struct 
{
unsigned int     GPDIR:32;
}GP1DIR;

typedef struct 
{
unsigned int     GPDIR:32;
}GP2DIR;

typedef struct 
{
unsigned int     GPDIR:32;
}GP3DIR;

typedef struct 
{
unsigned int     GPDIR:32;
}GP4DIR;

typedef struct 
{
unsigned int     reserved_0:22;
unsigned int     GPDIR:10;
}GP5DIR;

typedef struct 
{
unsigned int     GPDATO:32;
}GP0DATO;

typedef struct 
{
unsigned int     GPDATO:32;
}GP1DATO;

typedef struct 
{
unsigned int     GPDATO:32;
}GP2DATO;

typedef struct 
{
unsigned int     GPDATO:32;
}GP3DATO;

typedef struct 
{
unsigned int     GPDATO:32;
}GP4DATO;

typedef struct 
{
unsigned int     reserved_0:22;
unsigned int     GPDATO:10;
}GP5DATO;

typedef struct 
{
unsigned int     GPDATI:32;
}GP0DATI;

typedef struct 
{
unsigned int     GPDATI:32;
}GP1DATI;

typedef struct 
{
unsigned int     GPDATI:32;
}GP2DATI;

typedef struct 
{
unsigned int     GPDATI:32;
}GP3DATI;

typedef struct 
{
unsigned int     GPDATI:32;
}GP4DATI;

typedef struct 
{
unsigned int     reserved_0:22;
unsigned int     GPDATI:10;
}GP5DATI;

typedef struct 
{
unsigned int     GP:32;
}GP0IE;

typedef struct 
{
unsigned int     GP:32;
}GP1IE;

typedef struct 
{
unsigned int     GP:32;
}GP2IE;

typedef struct 
{
unsigned int     GP:32;
}GP3IE;

typedef struct 
{
unsigned int     GP:32;
}GP4IE;

typedef struct 
{
unsigned int     reserved_0:22;
unsigned int     GP:10;
}GP5IE;

typedef struct 
{
unsigned int     GPHA:32;
}GP0DP;

typedef struct 
{
unsigned int     GPHA:32;
}GP1DP;

typedef struct 
{
unsigned int     GPHA:32;
}GP2DP;

typedef struct 
{
unsigned int     GPHA:32;
}GP3DP;

typedef struct 
{
unsigned int     GPHA:32;
}GP4DP;

typedef struct 
{
unsigned int     reserved_0:22;
unsigned int     GPHA:10;
}GP5DP;

typedef struct 
{
unsigned int     write_enable8:1;
unsigned int     CLK8:3;
unsigned int     write_enable7:1;
unsigned int     CLK7:3;
unsigned int     write_enable6:1;
unsigned int     CLK6:3;
unsigned int     write_enable5:1;
unsigned int     CLK5:3;
unsigned int     write_enable4:1;
unsigned int     CLK4:3;
unsigned int     write_enable3:1;
unsigned int     CLK3:3;
unsigned int     write_enable2:1;
unsigned int     CLK2:3;
unsigned int     write_enable1:1;
unsigned int     CLK1:3;
}GPDEB;

typedef struct 
{
unsigned int     reserved_0:20;
unsigned int     write_enable3:1;
unsigned int     CLK3:3;
unsigned int     write_enable2:1;
unsigned int     CLK2:3;
unsigned int     write_enable1:1;
unsigned int     CLK1:3;
}GPDEB_1;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     DLL:8;
}U1RBR_THR_DLL;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     DLH:8;
}U1IER_DLH;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     FIFO16:2;
unsigned int     reserved_1:2;
unsigned int     IID:4;
}U1IIR_FCR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     DLAB:1;
unsigned int     BRK:1;
unsigned int     EPS:2;
unsigned int     PEN:1;
unsigned int     STB:1;
unsigned int     WLS:2;
}U1LCR;

typedef struct 
{
unsigned int     reserved_0:27;
unsigned int     LOOP:1;
unsigned int     reserved_1:2;
unsigned int     RTS:1;
unsigned int     DTR:1;
}U1MCR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     RFE:1;
unsigned int     TEMT:1;
unsigned int     THRE:1;
unsigned int     BI:1;
unsigned int     FE:1;
unsigned int     PE:1;
unsigned int     OE:1;
unsigned int     DR:1;
}U1LSR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     DCD:1;
unsigned int     RI:1;
unsigned int     DSR:1;
unsigned int     CTS:1;
unsigned int     DDCD:1;
unsigned int     TERI:1;
unsigned int     DDSR:1;
unsigned int     DCTS:1;
}U1MSR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     SCR:8;
}U1SCR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     DLL:8;
}U2RBR_THR_DLL;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     DLH:8;
}U2IER_DLH;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     FIFO16:2;
unsigned int     reserved_1:2;
unsigned int     IID:4;
}U2IIR_FCR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     DLAB:1;
unsigned int     BRK:1;
unsigned int     EPS:2;
unsigned int     PEN:1;
unsigned int     STB:1;
unsigned int     WLS:2;
}U2LCR;

typedef struct 
{
unsigned int     reserved_0:27;
unsigned int     LOOP:1;
unsigned int     reserved_1:2;
unsigned int     RTS:1;
unsigned int     DTR:1;
}U2MCR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     RFE:1;
unsigned int     TEMT:1;
unsigned int     THRE:1;
unsigned int     BI:1;
unsigned int     FE:1;
unsigned int     PE:1;
unsigned int     OE:1;
unsigned int     DR:1;
}U2LSR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     DCD:1;
unsigned int     RI:1;
unsigned int     DSR:1;
unsigned int     CTS:1;
unsigned int     DDCD:1;
unsigned int     TERI:1;
unsigned int     DDSR:1;
unsigned int     DCTS:1;
}U2MSR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     SCR:8;
}U2SCR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     DLL:8;
}U3RBR_THR_DLL;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     DLH:8;
}U3IER_DLH;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     FIFO16:2;
unsigned int     reserved_1:2;
unsigned int     IID:4;
}U3IIR_FCR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     DLAB:1;
unsigned int     BRK:1;
unsigned int     reserved_1:1;
unsigned int     EPS:1;
unsigned int     PEN:1;
unsigned int     STB:1;
unsigned int     WLS:2;
}U3LCR;

typedef struct 
{
unsigned int     reserved_0:26;
unsigned int     AFCE:1;
unsigned int     LOOP:1;
unsigned int     reserved_1:2;
unsigned int     RTS:1;
unsigned int     DTR:1;
}U3MCR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     RFE:1;
unsigned int     TEMT:1;
unsigned int     THRE:1;
unsigned int     BI:1;
unsigned int     FE:1;
unsigned int     PE:1;
unsigned int     OE:1;
unsigned int     DR:1;
}U3LSR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     DCD:1;
unsigned int     RI:1;
unsigned int     DSR:1;
unsigned int     CTS:1;
unsigned int     DDCD:1;
unsigned int     TERI:1;
unsigned int     DDSR:1;
unsigned int     DCTS:1;
}U3MSR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     SCR:8;
}U3SCR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     RBD:8;
}U3SRBR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     FAR:8;
}U3FAR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     FAR:8;
}U3TFR;

typedef struct 
{
unsigned int     reserved_0:22;
unsigned int     RFFE:1;
unsigned int     RFPF:1;
unsigned int     RFWD:8;
}U3RFW;

typedef struct 
{
unsigned int     reserved_0:27;
unsigned int     RFF:1;
unsigned int     RFNE:1;
unsigned int     TFE:1;
unsigned int     TFNF:1;
unsigned int     BUSY:1;
}U3USR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     TFL:8;
}U3TFL;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     RFL:8;
}U3RFL;

typedef struct 
{
unsigned int     reserved_0:29;
unsigned int     XFR:1;
unsigned int     RFR:1;
unsigned int     UR:1;
}U3SRR;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     SBCR:1;
}U3SBCR;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     SDMAM:1;
}U3SDMAM;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     SFE:1;
}U3SFE;

typedef struct 
{
unsigned int     reserved_0:30;
unsigned int     SRT:2;
}U3SRT;

typedef struct 
{
unsigned int     reserved_0:30;
unsigned int     STET:2;
}U3STET;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     HTX:1;
}U3HTX;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     DMASA:1;
}U3DMASA;

typedef struct 
{
unsigned int     reserved_0:8;
unsigned int     FIFO_MODE:8;
unsigned int     reserved_1:2;
unsigned int     DMA_EXTRA:1;
unsigned int     UART_ADD_ENCODED_PARAMS:1;
unsigned int     SHADOW:1;
unsigned int     FIFO_STAT:1;
unsigned int     FIFO_ACCESS:1;
unsigned int     ADDITIONAL_FEAT:1;
unsigned int     SIR_LP_MODE:1;
unsigned int     SIR_MODE:1;
unsigned int     THRE_MODE:1;
unsigned int     AFCE_MODE:1;
unsigned int     reserved_2:2;
unsigned int     APB_DATA_WIDTH:2;
}U3CPR;

typedef struct 
{
unsigned int     UCV:32;
}U3UCV;

typedef struct 
{
unsigned int     CTR:32;
}U3CTR;

typedef struct 
{
unsigned int     reserved_0:25;
unsigned int     IC_SLAVE_DISABLE:1;
unsigned int     IC_RESTART_EN:1;
unsigned int     IC_10BITADDR_MASTER:1;
unsigned int     IC_10BITADDR_SLAVE:1;
unsigned int     SPEED:2;
unsigned int     MASTER_MODE:1;
}IC1_CON;

typedef struct 
{
unsigned int     reserved_0:19;
unsigned int     IC_10BITADDR_MASTER:1;
unsigned int     SPECIAL:1;
unsigned int     GC_OR_START:1;
unsigned int     IC_TAR:10;
}IC1_TAR;

typedef struct 
{
unsigned int     reserved_0:22;
unsigned int     IC_SAR:10;
}IC1_SAR;

typedef struct 
{
unsigned int     reserved_0:29;
unsigned int     IC_HS_MAR:3;
}IC1_HS_MADDR;

typedef struct 
{
unsigned int     reserved_0:23;
unsigned int     CMD:1;
unsigned int     DAT:8;
}IC1_DATA_CMD;

typedef struct 
{
unsigned int     reserved_0:16;
unsigned int     IC_SS_SCL_HCNT:16;
}IC1_SS_SCL_HCNT;

typedef struct 
{
unsigned int     reserved_0:16;
unsigned int     IC_SS_SCL_LCNT:16;
}IC1_SS_SCL_LCNT;

typedef struct 
{
unsigned int     reserved_0:16;
unsigned int     IC_FS_SCL_HCNT:16;
}IC1_FS_SCL_HCNT;

typedef struct 
{
unsigned int     reserved_0:16;
unsigned int     IC_FS_SCL_LCNT:16;
}IC1_FS_SCL_LCNT;

typedef struct 
{
unsigned int     reserved_0:20;
unsigned int     R_GEN_CALL:1;
unsigned int     R_START_DET:1;
unsigned int     R_STOP_DET:1;
unsigned int     R_ACTIVITY:1;
unsigned int     R_RX_DONE:1;
unsigned int     R_TX_ABRT:1;
unsigned int     R_RD_REQ:1;
unsigned int     R_TX_EMPTY:1;
unsigned int     R_TX_OVER:1;
unsigned int     R_RX_FULL:1;
unsigned int     R_RX_OVER:1;
unsigned int     R_RX_UNDER:1;
}IC1_INTR_STAT;

typedef struct 
{
unsigned int     reserved_0:20;
unsigned int     M_GEN_CALL:1;
unsigned int     M_START_DET:1;
unsigned int     M_STOP_DET:1;
unsigned int     M_ACTIVITY:1;
unsigned int     M_RX_DONE:1;
unsigned int     M_TX_ABRT:1;
unsigned int     M_RD_REQ:1;
unsigned int     M_TX_EMPTY:1;
unsigned int     M_TX_OVER:1;
unsigned int     M_RX_FULL:1;
unsigned int     M_RX_OVER:1;
unsigned int     M_RX_UNDER:1;
}IC1_INTR_MASK;

typedef struct 
{
unsigned int     reserved_0:20;
unsigned int     GEN_CALL:1;
unsigned int     START_DET:1;
unsigned int     STOP_DET:1;
unsigned int     ACTIVITY:1;
unsigned int     RX_DONE:1;
unsigned int     TX_ABRT:1;
unsigned int     RD_REQ:1;
unsigned int     TX_EMPTY:1;
unsigned int     TX_OVER:1;
unsigned int     RX_FULL:1;
unsigned int     RX_OVER:1;
unsigned int     RX_UNDER:1;
}IC1_RAW_INTR_STAT;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     RX_TL:8;
}IC1_RX_TL;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     TX_TL:8;
}IC1_TX_TL;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     CLR_INTR:1;
}IC1_CLR_INTR;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     CLR_RX_UNDER:1;
}IC1_CLR_RX_UNDER;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     CLR_RX_OVER:1;
}IC1_CLR_RX_OVER;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     CLR_TX_OVER:1;
}IC1_CLR_TX_OVER;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     CLR_RD_REQ:1;
}IC1_CLR_RD_REQ;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     CLR_TX_ABRT:1;
}IC1_CLR_TX_ABRT;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     CLR_RX_DONE:1;
}IC1_CLR_RX_DONE;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     CLR_ACTIVITY:1;
}IC1_CLR_ACTIVITY;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     CLR_STOP_DET:1;
}IC1_CLR_STOP_DET;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     CLR_START_DET:1;
}IC1_CLR_START_DET;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     CLR_GEN_CALL:1;
}IC1_CLR_GEN_CALL;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     ENABLE:1;
}IC1_ENABLE;

typedef struct 
{
unsigned int     reserved_0:25;
unsigned int     SLV_ACTIVITY:1;
unsigned int     MST_ACTIVITY:1;
unsigned int     RFF:1;
unsigned int     RFNE:1;
unsigned int     TFE:1;
unsigned int     TFNF:1;
unsigned int     ACTIVITY:1;
}IC1_STATUS;

typedef struct 
{
unsigned int     reserved_0:28;
unsigned int     TXFLR:4;
}IC1_TXFLR;

typedef struct 
{
unsigned int     reserved_0:28;
unsigned int     RXFLR:4;
}IC1_RXFLR;

typedef struct 
{
unsigned int     reserved_0:16;
unsigned int     ABRT_SLVRD_INTX:1;
unsigned int     ABRT_SLV_ARBLOST:1;
unsigned int     ABRT_SLVFLUSH_TXFIFO:1;
unsigned int     ARB_LOST:1;
unsigned int     ARB_MASTER_DIS:1;
unsigned int     ABRT_10B_RD_NORSTRT:1;
unsigned int     ABRT_SBYTE_NORSTRT:1;
unsigned int     ABRT_HS_NORSTRT:1;
unsigned int     ABRT_SBYTE_ACKDET:1;
unsigned int     ABRT_HS_ACKDET:1;
unsigned int     ABRT_GCALL_READ:1;
unsigned int     ABRT_GCALL_NOACK:1;
unsigned int     ABRT_TXDATA_NOACK:1;
unsigned int     ABRT_10ADDR2_NOACK:1;
unsigned int     ABRT_10ADDR1_NOACK:1;
unsigned int     ABRT_7B_ADDR_NOACK:1;
}IC1_TX_ABRT_SOURCE;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     NACK:1;
}IC1_SLV_DATA_NACK_ONLY;

typedef struct 
{
unsigned int     reserved_0:30;
unsigned int     TDMAE:1;
unsigned int     RDMAE:1;
}IC1_DMA_CR;

typedef struct 
{
unsigned int     reserved_0:29;
unsigned int     DMATDL:3;
}IC1_DMA_TDLR;

typedef struct 
{
unsigned int     reserved_0:28;
unsigned int     DMARDL:4;
}IC1_DMA_RDLR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     SDA_SETUP:8;
}IC1_SDA_SETUP;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     ACK_GEN_CALL:1;
}IC1_ACK_GENERAL_CALL;

typedef struct 
{
unsigned int     reserved_0:29;
unsigned int     SLV_RX_DATA_LOST:1;
unsigned int     SLV_DISABLED_WHI:1;
unsigned int     IC_EN:1;
}IC1_ENABLE_STATUS;

typedef struct 
{
unsigned int     reserved_0:12;
unsigned int     Prefifoenable:1;
unsigned int     Prefifowritedatastart:1;
unsigned int     Prefifodoneinterruptenable:1;
unsigned int     reserved_1:8;
unsigned int     reserved_2:1;
unsigned int     Write_data:8;
}IC1_PRE_FIFO;

typedef struct 
{
unsigned int     reserved_0:8;
unsigned int     TX_BUFFER_DEPTH:8;
unsigned int     RX_BUFFER_DEPTH:8;
unsigned int     ADD_ENCODED_PARAMS:1;
unsigned int     HAS_DMA:1;
unsigned int     INTR_IO:1;
unsigned int     HC_COUNT_VALUES:1;
unsigned int     MAX_SPEED_MODE:2;
unsigned int     APB_DATA_WIDTH:2;
}IC1_COMP_PARAM_1;

typedef struct 
{
unsigned int     IC_COMP_VERSION:32;
}IC1_COMP_VERSION;

typedef struct 
{
unsigned int     IC_COMP_TYPE:32;
}IC1_COMP_TYPE;

typedef struct 
{
unsigned int     reserved_0:25;
unsigned int     IC_SLAVE_DISABLE:1;
unsigned int     IC_RESTART_EN:1;
unsigned int     IC_10BITADDR_MASTER:1;
unsigned int     IC_10BITADDR_SLAVE:1;
unsigned int     SPEED:2;
unsigned int     MASTER_MODE:1;
}IC2_CON;

typedef struct 
{
unsigned int     reserved_0:20;
unsigned int     SPECIAL:1;
unsigned int     GC_OR_START:1;
unsigned int     IC_TAR:10;
}IC2_TAR;

typedef struct 
{
unsigned int     reserved_0:22;
unsigned int     IC_SAR:10;
}IC2_SAR;

typedef struct 
{
unsigned int     reserved_0:29;
unsigned int     IC_HS_MAR:3;
}IC2_HS_MADDR;

typedef struct 
{
unsigned int     reserved_0:23;
unsigned int     CMD:1;
unsigned int     DAT:8;
}IC2_DATA_CMD;

typedef struct 
{
unsigned int     reserved_0:16;
unsigned int     IC_SS_SCL_HCNT:16;
}IC2_SS_SCL_HCNT;

typedef struct 
{
unsigned int     reserved_0:16;
unsigned int     IC_SS_SCL_LCNT:16;
}IC2_SS_SCL_LCNT;

typedef struct 
{
unsigned int     reserved_0:16;
unsigned int     IC_FS_SCL_HCNT:16;
}IC2_FS_SCL_HCNT;

typedef struct 
{
unsigned int     reserved_0:16;
unsigned int     IC_FS_SCL_LCNT:16;
}IC2_FS_SCL_LCNT;

typedef struct 
{
unsigned int     reserved_0:20;
unsigned int     GEN_CALL:1;
unsigned int     START_DET:1;
unsigned int     STOP_DET:1;
unsigned int     ACTIVITY:1;
unsigned int     RX_DONE:1;
unsigned int     TX_ABRT:1;
unsigned int     RD_REQ:1;
unsigned int     TX_EMPTY:1;
unsigned int     TX_OVER:1;
unsigned int     RX_FULL:1;
unsigned int     RX_OVER:1;
unsigned int     RX_UNDER:1;
}IC2_RAW_INTR_STAT;

typedef struct 
{
unsigned int     reserved_0:20;
unsigned int     M_GEN_CALL:1;
unsigned int     M_START_DET:1;
unsigned int     M_STOP_DET:1;
unsigned int     M_ACTIVITY:1;
unsigned int     M_RX_DONE:1;
unsigned int     M_TX_ABRT:1;
unsigned int     M_RD_REQ:1;
unsigned int     M_TX_EMPTY:1;
unsigned int     M_TX_OVER:1;
unsigned int     M_RX_FULL:1;
unsigned int     M_RX_OVER:1;
unsigned int     M_RX_UNDER:1;
}IC2_INTR_MASK;

typedef struct 
{
unsigned int     reserved_0:20;
unsigned int     R_GEN_CALL:1;
unsigned int     R_START_DET:1;
unsigned int     R_STOP_DET:1;
unsigned int     R_ACTIVITY:1;
unsigned int     R_RX_DONE:1;
unsigned int     R_TX_ABRT:1;
unsigned int     R_RD_REQ:1;
unsigned int     R_TX_EMPTY:1;
unsigned int     R_TX_OVER:1;
unsigned int     R_RX_FULL:1;
unsigned int     R_RX_OVER:1;
unsigned int     R_RX_UNDER:1;
}IC2_INTR_STAT;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     RX_TL:8;
}IC2_RX_TL;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     TX_TL:8;
}IC2_TX_TL;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     CLR_INTR:1;
}IC2_CLR_INTR;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     CLR_RX_UNDER:1;
}IC2_CLR_RX_UNDER;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     CLR_RX_OVER:1;
}IC2_CLR_RX_OVER;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     CLR_TX_OVER:1;
}IC2_CLR_TX_OVER;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     CLR_RD_REQ:1;
}IC2_CLR_RD_REQ;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     CLR_TX_ABRT:1;
}IC2_CLR_TX_ABRT;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     CLR_RX_DONE:1;
}IC2_CLR_RX_DONE;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     CLR_ACTIVITY:1;
}IC2_CLR_ACTIVITY;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     CLR_STOP_DET:1;
}IC2_CLR_STOP_DET;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     CLR_START_DET:1;
}IC2_CLR_START_DET;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     CLR_GEN_CALL:1;
}IC2_CLR_GEN_CALL;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     ENABLE:1;
}IC2_ENABLE;

typedef struct 
{
unsigned int     reserved_0:27;
unsigned int     RFF:1;
unsigned int     RFNE:1;
unsigned int     TFE:1;
unsigned int     TFNF:1;
unsigned int     ACTIVITY:1;
}IC2_STATUS;

typedef struct 
{
unsigned int     reserved_0:28;
unsigned int     TXFLR:4;
}IC2_TXFLR;

typedef struct 
{
unsigned int     reserved_0:28;
unsigned int     RXFLR:4;
}IC2_RXFLR;

typedef struct 
{
unsigned int     reserved_0:16;
unsigned int     ABRT_SLVRD_INTX:1;
unsigned int     ABRT_SLV_ARBLOST:1;
unsigned int     ABRT_SLVFLUSH_TXFIFO:1;
unsigned int     ARB_LOST:1;
unsigned int     ARB_MASTER_DIS:1;
unsigned int     ABRT_10B_RD_NORSTRT:1;
unsigned int     ABRT_SBYTE_NORSTRT:1;
unsigned int     ABRT_HS_NORSTRT:1;
unsigned int     ABRT_SBYTE_ACKDET:1;
unsigned int     ABRT_HS_ACKDET:1;
unsigned int     ABRT_GCALL_READ:1;
unsigned int     ABRT_GCALL_NOACK:1;
unsigned int     ABRT_TXDATA_NOACK:1;
unsigned int     ABRT_10ADDR2_NOACK:1;
unsigned int     ABRT_10ADDR1_NOACK:1;
unsigned int     ABRT_7B_ADDR_NOACK:1;
}IC2_TX_ABRT_SOURCE;

typedef struct 
{
unsigned int     reserved_0:30;
unsigned int     TDMAE:1;
unsigned int     RDMAE:1;
}IC2_DMA_CR;

typedef struct 
{
unsigned int     reserved_0:29;
unsigned int     DMATDL:3;
}IC2_DMA_TDLR;

typedef struct 
{
unsigned int     reserved_0:28;
unsigned int     DMARDL:4;
}IC2_DMA_RDLR;

typedef struct 
{
unsigned int     reserved_0:12;
unsigned int     Prefifoenable:1;
unsigned int     Prefifowritedatastart:1;
unsigned int     Prefifodoneinterruptenable:1;
unsigned int     reserved_1:8;
unsigned int     reserved_2:1;
unsigned int     Write_data:8;
}IC2_PRE_FIFO;

typedef struct 
{
unsigned int     reserved_0:8;
unsigned int     TX_BUFFER_DEPTH:8;
unsigned int     RX_BUFFER_DEPTH:8;
unsigned int     ADD_ENCODED_PARAMS:1;
unsigned int     HAS_DMA:1;
unsigned int     INTR_IO:1;
unsigned int     HC_COUNT_VALUES:1;
unsigned int     MAX_SPEED_MODE:2;
unsigned int     APB_DATA_WIDTH:2;
}IC2_COMP_PARAM_1;

typedef struct 
{
unsigned int     IC_COMP_VERSION:32;
}IC2_COMP_VERSION;

typedef struct 
{
unsigned int     IC_COMP_TYPE:32;
}IC2_COMP_TYPE;

typedef struct 
{
unsigned int     PWM_W_DB_EN:1;
unsigned int     PWM_DB_RSEL:1;
unsigned int     PWM_W_DB_WR:1;
unsigned int     PWM_W_DB_MODE:1;
unsigned int     reserved_0:28;
}PWM_DB_CTRL;

typedef struct 
{
unsigned int     PWM0L:1;
unsigned int     PWM0_CK:1;
unsigned int     PWM0_EN:1;
unsigned int     PWM0_VS_RST_EN:1;
unsigned int     PWM0_DUT_8B:1;
unsigned int     reserved_0:22;
unsigned int     reserved_1:4;
unsigned int     PWM_WIDTH_SEL:1;
}PWM0_CTRL;

typedef struct 
{
unsigned int     PWM0_CNT_MODE:1;
unsigned int     PWM0_CK_SEL_HS:1;
unsigned int     PWM0_CK_SEL:1;
unsigned int     reserved_0:1;
unsigned int     PWM0_CYCLE_MAX:4;
unsigned int     reserved_1:10;
unsigned int     PWM0_M:2;
unsigned int     PWM0_N:12;
}PWM0_TIMING_CTRL;

typedef struct 
{
unsigned int     reserved_0:4;
unsigned int     PWM0_DUT:12;
unsigned int     reserved_1:4;
unsigned int     PWM0_TOTALCNT:12;
}PWM0_DUTY_SET;

typedef struct 
{
unsigned int     PWM1L:1;
unsigned int     PWM1_CK:1;
unsigned int     PWM1_EN:1;
unsigned int     PWM1_VS_RST_EN:1;
unsigned int     PWM1_DUT_8B:1;
unsigned int     reserved_0:22;
unsigned int     reserved_1:5;
}PWM1_CTRL;

typedef struct 
{
unsigned int     PWM1_CNT_MODE:1;
unsigned int     PWM1_CK_SEL_HS:1;
unsigned int     PWM1_CK_SEL:1;
unsigned int     reserved_0:1;
unsigned int     PWM1_CYCLE_MAX:4;
unsigned int     reserved_1:10;
unsigned int     PWM1_M:2;
unsigned int     PWM1_N:12;
}PWM1_TIMING_CTRL;

typedef struct 
{
unsigned int     reserved_0:4;
unsigned int     PWM1_DUT:12;
unsigned int     reserved_1:4;
unsigned int     PWM1_TOTALCNT:12;
}PWM1_DUTY_SET;

typedef struct 
{
unsigned int     PWM2L:1;
unsigned int     PWM2_CK:1;
unsigned int     PWM2_EN:1;
unsigned int     PWM2_VS_RST_EN:1;
unsigned int     PWM2_DUT_8B:1;
unsigned int     reserved_0:22;
unsigned int     reserved_1:5;
}PWM2_CTRL;

typedef struct 
{
unsigned int     PWM2_CNT_MODE:1;
unsigned int     PWM2_CK_SEL_HS:1;
unsigned int     PWM2_CK_SEL:1;
unsigned int     reserved_0:1;
unsigned int     PWM2_CYCLE_MAX:4;
unsigned int     reserved_1:10;
unsigned int     PWM2_M:2;
unsigned int     PWM2_N:12;
}PWM2_TIMING_CTRL;

typedef struct 
{
unsigned int     reserved_0:4;
unsigned int     PWM2_DUT:12;
unsigned int     reserved_1:4;
unsigned int     PWM2_TOTALCNT:12;
}PWM2_DUTY_SET;

typedef struct 
{
unsigned int     PWM3L:1;
unsigned int     PWM3_CK:1;
unsigned int     PWM3_EN:1;
unsigned int     PWM3_VS_RST_EN:1;
unsigned int     PWM3_DUT_8B:1;
unsigned int     reserved_0:22;
unsigned int     reserved_1:5;
}PWM3_CTRL;

typedef struct 
{
unsigned int     PWM3_CNT_MODE:1;
unsigned int     PWM3_CK_SEL_HS:1;
unsigned int     PWM3_CK_SEL:1;
unsigned int     reserved_0:1;
unsigned int     PWM3_CYCLE_MAX:4;
unsigned int     reserved_1:10;
unsigned int     PWM3_M:2;
unsigned int     PWM3_N:12;
}PWM3_TIMING_CTRL;

typedef struct 
{
unsigned int     reserved_0:4;
unsigned int     PWM3_DUT:12;
unsigned int     reserved_1:4;
unsigned int     PWM3_TOTALCNT:12;
}PWM3_DUTY_SET;

typedef struct 
{
unsigned int     PWM4L:1;
unsigned int     PWM4_CK:1;
unsigned int     PWM4_EN:1;
unsigned int     PWM4_VS_RST_EN:1;
unsigned int     PWM4_DUT_8B:1;
unsigned int     reserved_0:22;
unsigned int     reserved_1:5;
}PWM4_CTRL;

typedef struct 
{
unsigned int     PWM4_CNT_MODE:1;
unsigned int     PWM4_CK_SEL_HS:1;
unsigned int     PWM4_CK_SEL:1;
unsigned int     reserved_0:1;
unsigned int     PWM4_CYCLE_MAX:4;
unsigned int     reserved_1:10;
unsigned int     PWM4_M:2;
unsigned int     PWM4_N:12;
}PWM4_TIMING_CTRL;

typedef struct 
{
unsigned int     reserved_0:4;
unsigned int     PWM4_DUT:12;
unsigned int     reserved_1:4;
unsigned int     PWM4_TOTALCNT:12;
}PWM4_DUTY_SET;

typedef struct 
{
unsigned int     PWM5L:1;
unsigned int     PWM5_CK:1;
unsigned int     PWM5_EN:1;
unsigned int     PWM5_VS_RST_EN:1;
unsigned int     PWM5_DUT_8B:1;
unsigned int     reserved_0:22;
unsigned int     reserved_1:5;
}PWM5_CTRL;

typedef struct 
{
unsigned int     PWM5_CNT_MODE:1;
unsigned int     PWM5_CK_SEL_HS:1;
unsigned int     PWM5_CK_SEL:1;
unsigned int     reserved_0:1;
unsigned int     PWM5_CYCLE_MAX:4;
unsigned int     reserved_1:10;
unsigned int     PWM5_M:2;
unsigned int     PWM5_N:12;
}PWM5_TIMING_CTRL;

typedef struct 
{
unsigned int     reserved_0:4;
unsigned int     PWM5_DUT:12;
unsigned int     reserved_1:4;
unsigned int     PWM5_TOTALCNT:12;
}PWM5_DUTY_SET;

typedef struct 
{
unsigned int     PWM6L:1;
unsigned int     PWM6_CK:1;
unsigned int     PWM6_EN:1;
unsigned int     PWM6_VS_RST_EN:1;
unsigned int     PWM6_DUT_8B:1;
unsigned int     reserved_0:22;
unsigned int     reserved_1:5;
}PWM6_CTRL;

typedef struct 
{
unsigned int     PWM6_CNT_MODE:1;
unsigned int     PWM6_CK_SEL_HS:1;
unsigned int     PWM6_CK_SEL:1;
unsigned int     reserved_0:1;
unsigned int     PWM6_CYCLE_MAX:4;
unsigned int     reserved_1:10;
unsigned int     PWM6_M:2;
unsigned int     PWM6_N:12;
}PWM6_TIMING_CTRL;

typedef struct 
{
unsigned int     reserved_0:4;
unsigned int     PWM6_DUT:12;
unsigned int     reserved_1:4;
unsigned int     PWM6_TOTALCNT:12;
}PWM6_DUTY_SET;

typedef struct 
{
unsigned int     PWM7L:1;
unsigned int     PWM7_CK:1;
unsigned int     PWM7_EN:1;
unsigned int     PWM7_VS_RST_EN:1;
unsigned int     PWM7_DUT_8B:1;
unsigned int     reserved_0:22;
unsigned int     reserved_1:5;
}PWM7_CTRL;

typedef struct 
{
unsigned int     PWM7_CNT_MODE:1;
unsigned int     PWM7_CK_SEL_HS:1;
unsigned int     PWM7_CK_SEL:1;
unsigned int     reserved_0:1;
unsigned int     PWM7_CYCLE_MAX:4;
unsigned int     reserved_1:10;
unsigned int     PWM7_M:2;
unsigned int     PWM7_N:12;
}PWM7_TIMING_CTRL;

typedef struct 
{
unsigned int     reserved_0:4;
unsigned int     PWM7_DUT:12;
unsigned int     reserved_1:4;
unsigned int     PWM7_TOTALCNT:12;
}PWM7_DUTY_SET;

typedef struct 
{
unsigned int     TC0TVR:32;
}TC0TVR;

typedef struct 
{
unsigned int     TC1TVR:32;
}TC1TVR;

typedef struct 
{
unsigned int     TC2TVR:32;
}TC2TVR;

typedef struct 
{
unsigned int     TC3TVR:32;
}TC3TVR;

typedef struct 
{
unsigned int     TC4TVR:32;
}TC4TVR;

typedef struct 
{
unsigned int     TC5TVR:32;
}TC5TVR;

typedef struct 
{
unsigned int     TC6TVR:32;
}TC6TVR;

typedef struct 
{
unsigned int     TC7TVR:32;
}TC7TVR;

typedef struct 
{
unsigned int     TC0CVR:32;
}TC0CVR;

typedef struct 
{
unsigned int     TC1CVR:32;
}TC1CVR;

typedef struct 
{
unsigned int     TC2VR:32;
}TC2CVR;

typedef struct 
{
unsigned int     TC3CVR:32;
}TC3CVR;

typedef struct 
{
unsigned int     TC4CVR:32;
}TC4CVR;

typedef struct 
{
unsigned int     TC5VR:32;
}TC5CVR;

typedef struct 
{
unsigned int     TC6CVR:32;
}TC6CVR;

typedef struct 
{
unsigned int     TC7CVR:32;
}TC71CVR;

typedef struct 
{
unsigned int     TC0En:1;
unsigned int     TC0Mode:1;
unsigned int     TC0Pause:1;
unsigned int     RvdA:5;
unsigned int     reserved_0:24;
}TC0CR;

typedef struct 
{
unsigned int     TC1En:1;
unsigned int     TC1Mode:1;
unsigned int     TC1Pause:1;
unsigned int     RvdA:5;
unsigned int     reserved_0:24;
}TC1CR;

typedef struct 
{
unsigned int     TC2En:1;
unsigned int     TC2Mode:1;
unsigned int     TC2Pause:1;
unsigned int     RvdA:5;
unsigned int     reserved_0:24;
}TC2CR;

typedef struct 
{
unsigned int     TC3En:1;
unsigned int     TC3Mode:1;
unsigned int     TC3Pause:1;
unsigned int     RvdA:5;
unsigned int     reserved_0:24;
}TC3CR;

typedef struct 
{
unsigned int     TC4En:1;
unsigned int     TC4Mode:1;
unsigned int     TC4Pause:1;
unsigned int     RvdA:5;
unsigned int     reserved_0:24;
}TC4CR;

typedef struct 
{
unsigned int     TC5En:1;
unsigned int     TC5Mode:1;
unsigned int     TC5Pause:1;
unsigned int     RvdA:5;
unsigned int     reserved_0:24;
}TC5CR;

typedef struct 
{
unsigned int     TC6En:1;
unsigned int     TC6Mode:1;
unsigned int     TC6Pause:1;
unsigned int     RvdA:5;
unsigned int     reserved_0:24;
}TC6CR;

typedef struct 
{
unsigned int     TC7En:1;
unsigned int     TC7Mode:1;
unsigned int     TC7Pause:1;
unsigned int     RvdA:5;
unsigned int     reserved_0:24;
}TC7CR;

typedef struct 
{
unsigned int     TC0IE:1;
unsigned int     reserved_0:31;
}TC0ICR;

typedef struct 
{
unsigned int     TC1IE:1;
unsigned int     reserved_0:31;
}TC1ICR;

typedef struct 
{
unsigned int     TC2IE:1;
unsigned int     reserved_0:31;
}TC2ICR;

typedef struct 
{
unsigned int     TC3IE:1;
unsigned int     reserved_0:31;
}TC3ICR;

typedef struct 
{
unsigned int     TC4IE:1;
unsigned int     reserved_0:31;
}TC4ICR;

typedef struct 
{
unsigned int     TC5IE:1;
unsigned int     reserved_0:31;
}TC5ICR;

typedef struct 
{
unsigned int     TC6IE:1;
unsigned int     reserved_0:31;
}TC6ICR;

typedef struct 
{
unsigned int     TC7IE:1;
unsigned int     reserved_0:31;
}TC7ICR;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     EN:1;
}CLK90K_CTRL;

typedef struct 
{
unsigned int     reserved_0:23;
unsigned int     CNT:9;
}SCPU_CLK27M_90K;

typedef struct 
{
unsigned int     VAL:32;
}SCPU_CLK90K_LO;

typedef struct 
{
unsigned int     reserved_0:16;
unsigned int     VAL:16;
}SCPU_CLK90K_HI;

typedef struct 
{
unsigned int     reserved_0:23;
unsigned int     CNT:9;
}ACPU_CLK27M_90K;

typedef struct 
{
unsigned int     VAL:32;
}ACPU_CLK90K_LO;

typedef struct 
{
unsigned int     reserved_0:16;
unsigned int     VAL:16;
}ACPU_CLK90K_HI;

typedef struct 
{
unsigned int     reserved_0:23;
unsigned int     CNT:9;
}VCPU_CLK27M_90K;

typedef struct 
{
unsigned int     VAL:32;
}VCPU_CLK90K_LO;

typedef struct 
{
unsigned int     reserved_0:16;
unsigned int     VAL:16;
}VCPU_CLK90K_HI;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     EN:1;
}PCR_CLK90K_CTRL;

typedef struct 
{
unsigned int     reserved_0:23;
unsigned int     CNT:9;
}PCR_SCPU_CLK27M_90K;

typedef struct 
{
unsigned int     VAL:32;
}PCR_SCPU_CLK90K_LO;

typedef struct 
{
unsigned int     reserved_0:16;
unsigned int     VAL:16;
}PCR_SCPU_CLK90K_HI;

typedef struct 
{
unsigned int     reserved_0:23;
unsigned int     CNT:9;
}PCR_ACPU_CLK27M_90K;

typedef struct 
{
unsigned int     VAL:32;
}PCR_ACPU_CLK90K_LO;

typedef struct 
{
unsigned int     reserved_0:16;
unsigned int     VAL:16;
}PCR_ACPU_CLK90K_HI;

typedef struct 
{
unsigned int     reserved_0:23;
unsigned int     CNT:9;
}PCR_VCPU_CLK27M_90K;

typedef struct 
{
unsigned int     VAL:32;
}PCR_VCPU_CLK90K_LO;

typedef struct 
{
unsigned int     reserved_0:16;
unsigned int     VAL:16;
}PCR_VCPU_CLK90K_HI;

typedef struct 
{
unsigned int     Im_wdog_rst:1;
unsigned int     reserved_0:15;
unsigned int     NMIC:4;
unsigned int     WDC:4;
unsigned int     WDEN:8;
}TCWCR;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     WDCLR:1;
}TCWTR;

typedef struct 
{
unsigned int     SEL:32;
}TCWNMI;

typedef struct 
{
unsigned int     SEL:32;
}TCWOV;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     CMDERR_IE:1;
unsigned int     TIMEOUT_EN:1;
unsigned int     DEBOUNCE_MODE:2;
unsigned int     TIMEOUT_IE:1;
unsigned int     RETIME_M:3;
}DDC1_I2C_CR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     CMDERR:1;
unsigned int     reserved_1:2;
unsigned int     Finish:1;
unsigned int     timeout:1;
unsigned int     reserved_2:3;
}DDC1_I2C_SR1;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     timeout_val:8;
}DDC1_I2C_TR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     EDID_ADDRESS:3;
unsigned int     FINISH_INT_EN:1;
unsigned int     DDC1_FORCE:1;
unsigned int     DDC2B_FORCE:1;
unsigned int     EDID_SRWEN:1;
unsigned int     EDID_EN:1;
}DDC1_EDID_CR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     DDC1_VCount:8;
}DDC1_DDC_VCR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     EDID_SADR:8;
}DDC1_EDID_IMSWSAR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     EDID_EADR:8;
}DDC1_EDID_IMSWEAR;

typedef struct 
{
unsigned int     reserved_0:25;
unsigned int     EDIDMODE:1;
unsigned int     EDIDSUBADDRESS:1;
unsigned int     EDIDSTOP:1;
unsigned int     I2C_M_RD_ST_IE:1;
unsigned int     I2C_M_RD_SP_IE:1;
unsigned int     EDIDSUBADDRESS_IE:1;
unsigned int     EDIDSTOP_IE:1;
}DDC1_EDID_IR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     EDIDAP:8;
}DDC1_DDC_SIR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     EDIDDP:8;
}DDC1_DDC_SAP;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     reserved_1:3;
unsigned int     DDC_BIST_RME:1;
unsigned int     DDC_BIST_RM:4;
}DDC1_DDC_BISTCR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     SEGPT_LATIE:1;
unsigned int     Dataoutputdelay_sel:3;
unsigned int     reserved_1:1;
unsigned int     I2C_M_RD_ST_STS:1;
unsigned int     I2C_M_RD_SP_STS:1;
unsigned int     SGID_EN:1;
}DDC1_DDC_SCR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     SGID_ADDRESS:7;
unsigned int     SGID_DTRDEN:1;
}DDC1_DDC_SSAR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     SEGPT_LATCHED:1;
unsigned int     SEG_PT:7;
}DDC1_DDC_SPR;

typedef struct 
{
unsigned int     reserved_0:28;
unsigned int     SPECIAL_MODE:1;
unsigned int     DOFFPT_RESET:1;
unsigned int     DIFFPT_RESET:1;
unsigned int     CIID_EN:1;
}DDC1_DDC_SFCR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     CIID_ADDRESS:7;
unsigned int     CIRWS_CURRENT:1;
}DDC1_DDC_SFSAR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     CIIDDP:8;
}DDC1_DDC_SFDR;

typedef struct 
{
unsigned int     reserved_0:26;
unsigned int     CIRWS_2ND:1;
unsigned int     CIRWS_1ST:1;
unsigned int     CIPPT_2ND:1;
unsigned int     CISPT_2ND:1;
unsigned int     CIPPT_1ST:1;
unsigned int     CISPT_1ST:1;
}DDC1_DDC_SFBSR;

typedef struct 
{
unsigned int     reserved_0:27;
unsigned int     FFDI_DLEN:5;
}DDC1_DDC_SFIBLR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     DIFF_WPT:4;
unsigned int     DIFF_RPT:4;
}DDC1_DDC_SFIBRWPR;

typedef struct 
{
unsigned int     reserved_0:28;
unsigned int     DIFFSTOP_PT:4;
}DDC1_DDC_SFIBSWPR;

typedef struct 
{
unsigned int     reserved_0:27;
unsigned int     FFDO_DLEN:5;
}DDC1_DDC_SFOBSR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     DOFF_WPT:4;
unsigned int     DOFF_RPT:4;
}DDC1_DDC_SFOBRWPR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     FFDOUF_ST:1;
unsigned int     FFDIOF_ST:1;
unsigned int     FFDONF_ST:1;
unsigned int     FFDOET_ST:1;
unsigned int     FFDIFU_ST:1;
unsigned int     FFDINE_ST:1;
unsigned int     reserved_1:2;
}DDC1_DDC_SFSR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     FFDOUF_IE:1;
unsigned int     FFDIOF_IE:1;
unsigned int     FFDONF_IE:1;
unsigned int     FFDOET_IE:1;
unsigned int     FFDIFU_IE:1;
unsigned int     FFDINE_IE:1;
unsigned int     CIPPT_IE:1;
unsigned int     CISPT_IE:1;
}DDC1_DDC_SFIR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     CMDFSM_ST:8;
}DDC1_DDC_FSMS;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     Dummy:8;
}DDC1_DDC_DUMMY;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     reserved_1:2;
unsigned int     reserved_2:1;
unsigned int     reserved_3:1;
unsigned int     reserved_4:2;
unsigned int     START_IRQ_EN:1;
unsigned int     STOP_IRQ_EN:1;
}DDC1_DDC_EDID_SRAM_READ_IRQ_EN;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     reserved_1:2;
unsigned int     reserved_2:1;
unsigned int     reserved_3:1;
unsigned int     reserved_4:2;
unsigned int     START:1;
unsigned int     STOP:1;
}DDC1_DDC_EDID_SRAM_READ_AUX;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     DDC_BIST_MODE:1;
}DDC1_DDC_BIST_MODE;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     DDC_BIST_DONE:1;
}DDC1_DDC_BIST_DONE;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     DDC_BIST_FAIL:1;
}DDC1_DDC_BIST_FAIL;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     DDC_DRF_MODE:1;
}DDC1_DDC_DRF_MODE;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     DDC_DRF_RESUME:1;
}DDC1_DDC_DRF_RESUME;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     DDC_DRF_DONE:1;
}DDC1_DDC_DRF_DONE;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     DDC_DRF_PAUSE:1;
}DDC1_DDC_DRF_PAUSE;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     DDC_DRF_FAIL:1;
}DDC1_DDC_DRF_FAIL;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     CMDERR_IE:1;
unsigned int     TIMEOUT_EN:1;
unsigned int     DEBOUNCE_MODE:2;
unsigned int     TIMEOUT_IE:1;
unsigned int     RETIME_M:3;
}DDC2_I2C_CR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     CMDERR:1;
unsigned int     reserved_1:2;
unsigned int     Finish:1;
unsigned int     timeout:1;
unsigned int     reserved_2:3;
}DDC2_I2C_SR1;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     timeout_val:8;
}DDC2_I2C_TR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     EDID_ADDRESS:3;
unsigned int     FINISH_INT_EN:1;
unsigned int     DDC1_FORCE:1;
unsigned int     DDC2B_FORCE:1;
unsigned int     EDID_SRWEN:1;
unsigned int     EDID_EN:1;
}DDC2_EDID_CR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     DDC1_VCount:8;
}DDC2_DDC_VCR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     EDID_SADR:8;
}DDC2_EDID_IMSWSAR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     EDID_EADR:8;
}DDC2_EDID_IMSWEAR;

typedef struct 
{
unsigned int     reserved_0:25;
unsigned int     EDIDMODE:1;
unsigned int     EDIDSUBADDRESS:1;
unsigned int     EDIDSTOP:1;
unsigned int     I2C_M_RD_ST_IE:1;
unsigned int     I2C_M_RD_SP_IE:1;
unsigned int     EDIDSUBADDRESS_IE:1;
unsigned int     EDIDSTOP_IE:1;
}DDC2_EDID_IR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     EDIDAP:8;
}DDC2_DDC_SIR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     EDIDDP:8;
}DDC2_DDC_SAP;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     reserved_1:3;
unsigned int     DDC_BIST_RME:1;
unsigned int     DDC_BIST_RM:4;
}DDC2_DDC_BISTCR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     SEGPT_LATIE:1;
unsigned int     Dataoutputdelay_sel:3;
unsigned int     reserved_1:1;
unsigned int     I2C_M_RD_ST_STS:1;
unsigned int     I2C_M_RD_SP_STS:1;
unsigned int     SGID_EN:1;
}DDC2_DDC_SCR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     SGID_ADDRESS:7;
unsigned int     SGID_DTRDEN:1;
}DDC2_DDC_SSAR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     SEGPT_LATCHED:1;
unsigned int     SEG_PT:7;
}DDC2_DDC_SPR;

typedef struct 
{
unsigned int     reserved_0:28;
unsigned int     SPECIAL_MODE:1;
unsigned int     DOFFPT_RESET:1;
unsigned int     DIFFPT_RESET:1;
unsigned int     CIID_EN:1;
}DDC2_DDC_SFCR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     CIID_ADDRESS:7;
unsigned int     CIRWS_CURRENT:1;
}DDC2_DDC_SFSAR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     CIIDDP:8;
}DDC2_DDC_SFDR;

typedef struct 
{
unsigned int     reserved_0:26;
unsigned int     CIRWS_2ND:1;
unsigned int     CIRWS_1ST:1;
unsigned int     CIPPT_2ND:1;
unsigned int     CISPT_2ND:1;
unsigned int     CIPPT_1ST:1;
unsigned int     CISPT_1ST:1;
}DDC2_DDC_SFBSR;

typedef struct 
{
unsigned int     reserved_0:27;
unsigned int     FFDI_DLEN:5;
}DDC2_DDC_SFIBLR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     DIFF_WPT:4;
unsigned int     DIFF_RPT:4;
}DDC2_DDC_SFIBRWPR;

typedef struct 
{
unsigned int     reserved_0:28;
unsigned int     DIFFSTOP_PT:4;
}DDC2_DDC_SFIBSWPR;

typedef struct 
{
unsigned int     reserved_0:27;
unsigned int     FFDO_DLEN:5;
}DDC2_DDC_SFOBSR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     DOFF_WPT:4;
unsigned int     DOFF_RPT:4;
}DDC2_DDC_SFOBRWPR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     FFDOUF_ST:1;
unsigned int     FFDIOF_ST:1;
unsigned int     FFDONF_ST:1;
unsigned int     FFDOET_ST:1;
unsigned int     FFDIFU_ST:1;
unsigned int     FFDINE_ST:1;
unsigned int     reserved_1:2;
}DDC2_DDC_SFSR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     FFDOUF_IE:1;
unsigned int     FFDIOF_IE:1;
unsigned int     FFDONF_IE:1;
unsigned int     FFDOET_IE:1;
unsigned int     FFDIFU_IE:1;
unsigned int     FFDINE_IE:1;
unsigned int     CIPPT_IE:1;
unsigned int     CISPT_IE:1;
}DDC2_DDC_SFIR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     CMDFSM_ST:8;
}DDC2_DDC_FSMS;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     Dummy:8;
}DDC2_DDC_DUMMY;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     reserved_1:2;
unsigned int     reserved_2:1;
unsigned int     reserved_3:1;
unsigned int     reserved_4:2;
unsigned int     START_IRQ_EN:1;
unsigned int     STOP_IRQ_EN:1;
}DDC2_DDC_EDID_SRAM_READ_IRQ_EN;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     reserved_1:2;
unsigned int     reserved_2:1;
unsigned int     reserved_3:1;
unsigned int     reserved_4:2;
unsigned int     START:1;
unsigned int     STOP:1;
}DDC2_DDC_EDID_SRAM_READ_AUX;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     DDC_BIST_MODE:1;
}DDC2_DDC_BIST_MODE;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     DDC_BIST_DONE:1;
}DDC2_DDC_BIST_DONE;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     DDC_BIST_FAIL:1;
}DDC2_DDC_BIST_FAIL;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     DDC_DRF_MODE:1;
}DDC2_DDC_DRF_MODE;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     DDC_DRF_RESUME:1;
}DDC2_DDC_DRF_RESUME;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     DDC_DRF_DONE:1;
}DDC2_DDC_DRF_DONE;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     DDC_DRF_PAUSE:1;
}DDC2_DDC_DRF_PAUSE;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     DDC_DRF_FAIL:1;
}DDC2_DDC_DRF_FAIL;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     CMDERR_IE:1;
unsigned int     TIMEOUT_EN:1;
unsigned int     DEBOUNCE_MODE:2;
unsigned int     TIMEOUT_IE:1;
unsigned int     RETIME_M:3;
}DDC3_I2C_CR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     CMDERR:1;
unsigned int     reserved_1:2;
unsigned int     Finish:1;
unsigned int     timeout:1;
unsigned int     reserved_2:3;
}DDC3_I2C_SR1;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     timeout_val:8;
}DDC3_I2C_TR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     EDID_ADDRESS:3;
unsigned int     FINISH_INT_EN:1;
unsigned int     DDC1_FORCE:1;
unsigned int     DDC2B_FORCE:1;
unsigned int     EDID_SRWEN:1;
unsigned int     EDID_EN:1;
}DDC3_EDID_CR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     DDC1_VCount:8;
}DDC3_DDC_VCR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     EDID_SADR:8;
}DDC3_EDID_IMSWSAR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     EDID_EADR:8;
}DDC3_EDID_IMSWEAR;

typedef struct 
{
unsigned int     reserved_0:25;
unsigned int     EDIDMODE:1;
unsigned int     EDIDSUBADDRESS:1;
unsigned int     EDIDSTOP:1;
unsigned int     I2C_M_RD_ST_IE:1;
unsigned int     I2C_M_RD_SP_IE:1;
unsigned int     EDIDSUBADDRESS_IE:1;
unsigned int     EDIDSTOP_IE:1;
}DDC3_EDID_IR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     EDIDAP:8;
}DDC3_DDC_SIR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     EDIDDP:8;
}DDC3_DDC_SAP;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     reserved_1:3;
unsigned int     DDC_BIST_RME:1;
unsigned int     DDC_BIST_RM:4;
}DDC3_DDC_BISTCR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     SEGPT_LATIE:1;
unsigned int     Dataoutputdelay_sel:3;
unsigned int     reserved_1:1;
unsigned int     I2C_M_RD_ST_STS:1;
unsigned int     I2C_M_RD_SP_STS:1;
unsigned int     SGID_EN:1;
}DDC3_DDC_SCR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     SGID_ADDRESS:7;
unsigned int     SGID_DTRDEN:1;
}DDC3_DDC_SSAR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     SEGPT_LATCHED:1;
unsigned int     SEG_PT:7;
}DDC3_DDC_SPR;

typedef struct 
{
unsigned int     reserved_0:28;
unsigned int     SPECIAL_MODE:1;
unsigned int     DOFFPT_RESET:1;
unsigned int     DIFFPT_RESET:1;
unsigned int     CIID_EN:1;
}DDC3_DDC_SFCR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     CIID_ADDRESS:7;
unsigned int     CIRWS_CURRENT:1;
}DDC3_DDC_SFSAR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     CIIDDP:8;
}DDC3_DDC_SFDR;

typedef struct 
{
unsigned int     reserved_0:26;
unsigned int     CIRWS_2ND:1;
unsigned int     CIRWS_1ST:1;
unsigned int     CIPPT_2ND:1;
unsigned int     CISPT_2ND:1;
unsigned int     CIPPT_1ST:1;
unsigned int     CISPT_1ST:1;
}DDC3_DDC_SFBSR;

typedef struct 
{
unsigned int     reserved_0:27;
unsigned int     FFDI_DLEN:5;
}DDC3_DDC_SFIBLR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     DIFF_WPT:4;
unsigned int     DIFF_RPT:4;
}DDC3_DDC_SFIBRWPR;

typedef struct 
{
unsigned int     reserved_0:28;
unsigned int     DIFFSTOP_PT:4;
}DDC3_DDC_SFIBSWPR;

typedef struct 
{
unsigned int     reserved_0:27;
unsigned int     FFDO_DLEN:5;
}DDC3_DDC_SFOBSR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     DOFF_WPT:4;
unsigned int     DOFF_RPT:4;
}DDC3_DDC_SFOBRWPR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     FFDOUF_ST:1;
unsigned int     FFDIOF_ST:1;
unsigned int     FFDONF_ST:1;
unsigned int     FFDOET_ST:1;
unsigned int     FFDIFU_ST:1;
unsigned int     FFDINE_ST:1;
unsigned int     reserved_1:2;
}DDC3_DDC_SFSR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     FFDOUF_IE:1;
unsigned int     FFDIOF_IE:1;
unsigned int     FFDONF_IE:1;
unsigned int     FFDOET_IE:1;
unsigned int     FFDIFU_IE:1;
unsigned int     FFDINE_IE:1;
unsigned int     CIPPT_IE:1;
unsigned int     CISPT_IE:1;
}DDC3_DDC_SFIR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     CMDFSM_ST:8;
}DDC3_DDC_FSMS;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     Dummy:8;
}DDC3_DDC_DUMMY;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     reserved_1:2;
unsigned int     reserved_2:1;
unsigned int     reserved_3:1;
unsigned int     reserved_4:2;
unsigned int     START_IRQ_EN:1;
unsigned int     STOP_IRQ_EN:1;
}DDC3_DDC_EDID_SRAM_READ_IRQ_EN;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     reserved_1:2;
unsigned int     reserved_2:1;
unsigned int     reserved_3:1;
unsigned int     reserved_4:2;
unsigned int     START:1;
unsigned int     STOP:1;
}DDC3_DDC_EDID_SRAM_READ_AUX;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     DDC_BIST_MODE:1;
}DDC3_DDC_BIST_MODE;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     DDC_BIST_DONE:1;
}DDC3_DDC_BIST_DONE;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     DDC_BIST_FAIL:1;
}DDC3_DDC_BIST_FAIL;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     DDC_DRF_MODE:1;
}DDC3_DDC_DRF_MODE;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     DDC_DRF_RESUME:1;
}DDC3_DDC_DRF_RESUME;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     DDC_DRF_DONE:1;
}DDC3_DDC_DRF_DONE;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     DDC_DRF_PAUSE:1;
}DDC3_DDC_DRF_PAUSE;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     DDC_DRF_FAIL:1;
}DDC3_DDC_DRF_FAIL;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     CMDERR_IE:1;
unsigned int     TIMEOUT_EN:1;
unsigned int     DEBOUNCE_MODE:2;
unsigned int     TIMEOUT_IE:1;
unsigned int     RETIME_M:3;
}DDC4_I2C_CR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     CMDERR:1;
unsigned int     reserved_1:2;
unsigned int     Finish:1;
unsigned int     timeout:1;
unsigned int     reserved_2:3;
}DDC4_I2C_SR1;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     timeout_val:8;
}DDC4_I2C_TR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     EDID_ADDRESS:3;
unsigned int     FINISH_INT_EN:1;
unsigned int     DDC1_FORCE:1;
unsigned int     DDC2B_FORCE:1;
unsigned int     EDID_SRWEN:1;
unsigned int     EDID_EN:1;
}DDC4_EDID_CR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     DDC1_VCount:8;
}DDC4_DDC_VCR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     EDID_SADR:8;
}DDC4_EDID_IMSWSAR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     EDID_EADR:8;
}DDC4_EDID_IMSWEAR;

typedef struct 
{
unsigned int     reserved_0:25;
unsigned int     EDIDMODE:1;
unsigned int     EDIDSUBADDRESS:1;
unsigned int     EDIDSTOP:1;
unsigned int     I2C_M_RD_ST_IE:1;
unsigned int     I2C_M_RD_SP_IE:1;
unsigned int     EDIDSUBADDRESS_IE:1;
unsigned int     EDIDSTOP_IE:1;
}DDC4_EDID_IR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     EDIDAP:8;
}DDC4_DDC_SIR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     EDIDDP:8;
}DDC4_DDC_SAP;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     reserved_1:3;
unsigned int     DDC_BIST_RME:1;
unsigned int     DDC_BIST_RM:4;
}DDC4_DDC_BISTCR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     SEGPT_LATIE:1;
unsigned int     Dataoutputdelay_sel:3;
unsigned int     reserved_1:1;
unsigned int     I2C_M_RD_ST_STS:1;
unsigned int     I2C_M_RD_SP_STS:1;
unsigned int     SGID_EN:1;
}DDC4_DDC_SCR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     SGID_ADDRESS:7;
unsigned int     SGID_DTRDEN:1;
}DDC4_DDC_SSAR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     SEGPT_LATCHED:1;
unsigned int     SEG_PT:7;
}DDC4_DDC_SPR;

typedef struct 
{
unsigned int     reserved_0:28;
unsigned int     SPECIAL_MODE:1;
unsigned int     DOFFPT_RESET:1;
unsigned int     DIFFPT_RESET:1;
unsigned int     CIID_EN:1;
}DDC4_DDC_SFCR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     CIID_ADDRESS:7;
unsigned int     CIRWS_CURRENT:1;
}DDC4_DDC_SFSAR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     CIIDDP:8;
}DDC4_DDC_SFDR;

typedef struct 
{
unsigned int     reserved_0:26;
unsigned int     CIRWS_2ND:1;
unsigned int     CIRWS_1ST:1;
unsigned int     CIPPT_2ND:1;
unsigned int     CISPT_2ND:1;
unsigned int     CIPPT_1ST:1;
unsigned int     CISPT_1ST:1;
}DDC4_DDC_SFBSR;

typedef struct 
{
unsigned int     reserved_0:27;
unsigned int     FFDI_DLEN:5;
}DDC4_DDC_SFIBLR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     DIFF_WPT:4;
unsigned int     DIFF_RPT:4;
}DDC4_DDC_SFIBRWPR;

typedef struct 
{
unsigned int     reserved_0:28;
unsigned int     DIFFSTOP_PT:4;
}DDC4_DDC_SFIBSWPR;

typedef struct 
{
unsigned int     reserved_0:27;
unsigned int     FFDO_DLEN:5;
}DDC4_DDC_SFOBSR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     DOFF_WPT:4;
unsigned int     DOFF_RPT:4;
}DDC4_DDC_SFOBRWPR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     FFDOUF_ST:1;
unsigned int     FFDIOF_ST:1;
unsigned int     FFDONF_ST:1;
unsigned int     FFDOET_ST:1;
unsigned int     FFDIFU_ST:1;
unsigned int     FFDINE_ST:1;
unsigned int     reserved_1:2;
}DDC4_DDC_SFSR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     FFDOUF_IE:1;
unsigned int     FFDIOF_IE:1;
unsigned int     FFDONF_IE:1;
unsigned int     FFDOET_IE:1;
unsigned int     FFDIFU_IE:1;
unsigned int     FFDINE_IE:1;
unsigned int     CIPPT_IE:1;
unsigned int     CISPT_IE:1;
}DDC4_DDC_SFIR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     CMDFSM_ST:8;
}DDC4_DDC_FSMS;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     Dummy:8;
}DDC4_DDC_DUMMY;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     reserved_1:2;
unsigned int     reserved_2:1;
unsigned int     reserved_3:1;
unsigned int     reserved_4:2;
unsigned int     START_IRQ_EN:1;
unsigned int     STOP_IRQ_EN:1;
}DDC4_DDC_EDID_SRAM_READ_IRQ_EN;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     reserved_1:2;
unsigned int     reserved_2:1;
unsigned int     reserved_3:1;
unsigned int     reserved_4:2;
unsigned int     START:1;
unsigned int     STOP:1;
}DDC4_DDC_EDID_SRAM_READ_AUX;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     DDC_BIST_MODE:1;
}DDC4_DDC_BIST_MODE;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     DDC_BIST_DONE:1;
}DDC4_DDC_BIST_DONE;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     DDC_BIST_FAIL:1;
}DDC4_DDC_BIST_FAIL;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     DDC_DRF_MODE:1;
}DDC4_DDC_DRF_MODE;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     DDC_DRF_RESUME:1;
}DDC4_DDC_DRF_RESUME;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     DDC_DRF_DONE:1;
}DDC4_DDC_DRF_DONE;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     DDC_DRF_PAUSE:1;
}DDC4_DDC_DRF_PAUSE;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     DDC_DRF_FAIL:1;
}DDC4_DDC_DRF_FAIL;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     CMDERR_IE:1;
unsigned int     TIMEOUT_EN:1;
unsigned int     DEBOUNCE_MODE:2;
unsigned int     TIMEOUT_IE:1;
unsigned int     RETIME_M:3;
}DDC5_I2C_CR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     CMDERR:1;
unsigned int     reserved_1:2;
unsigned int     Finish:1;
unsigned int     timeout:1;
unsigned int     reserved_2:3;
}DDC5_I2C_SR1;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     timeout_val:8;
}DDC5_I2C_TR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     EDID_ADDRESS:3;
unsigned int     FINISH_INT_EN:1;
unsigned int     DDC1_FORCE:1;
unsigned int     DDC2B_FORCE:1;
unsigned int     EDID_SRWEN:1;
unsigned int     EDID_EN:1;
}DDC5_EDID_CR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     DDC1_VCount:8;
}DDC5_DDC_VCR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     EDID_SADR:8;
}DDC5_EDID_IMSWSAR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     EDID_EADR:8;
}DDC5_EDID_IMSWEAR;

typedef struct 
{
unsigned int     reserved_0:25;
unsigned int     EDIDMODE:1;
unsigned int     EDIDSUBADDRESS:1;
unsigned int     EDIDSTOP:1;
unsigned int     I2C_M_RD_ST_IE:1;
unsigned int     I2C_M_RD_SP_IE:1;
unsigned int     EDIDSUBADDRESS_IE:1;
unsigned int     EDIDSTOP_IE:1;
}DDC5_EDID_IR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     EDIDAP:8;
}DDC5_DDC_SIR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     EDIDDP:8;
}DDC5_DDC_SAP;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     reserved_1:3;
unsigned int     DDC_BIST_RME:1;
unsigned int     DDC_BIST_RM:4;
}DDC5_DDC_BISTCR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     SEGPT_LATIE:1;
unsigned int     Dataoutputdelay_sel:3;
unsigned int     reserved_1:1;
unsigned int     I2C_M_RD_ST_STS:1;
unsigned int     I2C_M_RD_SP_STS:1;
unsigned int     SGID_EN:1;
}DDC5_DDC_SCR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     SGID_ADDRESS:7;
unsigned int     SGID_DTRDEN:1;
}DDC5_DDC_SSAR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     SEGPT_LATCHED:1;
unsigned int     SEG_PT:7;
}DDC5_DDC_SPR;

typedef struct 
{
unsigned int     reserved_0:28;
unsigned int     SPECIAL_MODE:1;
unsigned int     DOFFPT_RESET:1;
unsigned int     DIFFPT_RESET:1;
unsigned int     CIID_EN:1;
}DDC5_DDC_SFCR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     CIID_ADDRESS:7;
unsigned int     CIRWS_CURRENT:1;
}DDC5_DDC_SFSAR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     CIIDDP:8;
}DDC5_DDC_SFDR;

typedef struct 
{
unsigned int     reserved_0:26;
unsigned int     CIRWS_2ND:1;
unsigned int     CIRWS_1ST:1;
unsigned int     CIPPT_2ND:1;
unsigned int     CISPT_2ND:1;
unsigned int     CIPPT_1ST:1;
unsigned int     CISPT_1ST:1;
}DDC5_DDC_SFBSR;

typedef struct 
{
unsigned int     reserved_0:27;
unsigned int     FFDI_DLEN:5;
}DDC5_DDC_SFIBLR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     DIFF_WPT:4;
unsigned int     DIFF_RPT:4;
}DDC5_DDC_SFIBRWPR;

typedef struct 
{
unsigned int     reserved_0:28;
unsigned int     DIFFSTOP_PT:4;
}DDC5_DDC_SFIBSWPR;

typedef struct 
{
unsigned int     reserved_0:27;
unsigned int     FFDO_DLEN:5;
}DDC5_DDC_SFOBSR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     DOFF_WPT:4;
unsigned int     DOFF_RPT:4;
}DDC5_DDC_SFOBRWPR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     FFDOUF_ST:1;
unsigned int     FFDIOF_ST:1;
unsigned int     FFDONF_ST:1;
unsigned int     FFDOET_ST:1;
unsigned int     FFDIFU_ST:1;
unsigned int     FFDINE_ST:1;
unsigned int     reserved_1:2;
}DDC5_DDC_SFSR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     FFDOUF_IE:1;
unsigned int     FFDIOF_IE:1;
unsigned int     FFDONF_IE:1;
unsigned int     FFDOET_IE:1;
unsigned int     FFDIFU_IE:1;
unsigned int     FFDINE_IE:1;
unsigned int     CIPPT_IE:1;
unsigned int     CISPT_IE:1;
}DDC5_DDC_SFIR;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     CMDFSM_ST:8;
}DDC5_DDC_FSMS;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     Dummy:8;
}DDC5_DDC_DUMMY;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     reserved_1:2;
unsigned int     reserved_2:1;
unsigned int     reserved_3:1;
unsigned int     reserved_4:2;
unsigned int     START_IRQ_EN:1;
unsigned int     STOP_IRQ_EN:1;
}DDC5_DDC_EDID_SRAM_READ_IRQ_EN;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     reserved_1:2;
unsigned int     reserved_2:1;
unsigned int     reserved_3:1;
unsigned int     reserved_4:2;
unsigned int     START:1;
unsigned int     STOP:1;
}DDC5_DDC_EDID_SRAM_READ_AUX;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     DDC_BIST_MODE:1;
}DDC5_DDC_BIST_MODE;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     DDC_BIST_DONE:1;
}DDC5_DDC_BIST_DONE;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     DDC_BIST_FAIL:1;
}DDC5_DDC_BIST_FAIL;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     DDC_DRF_MODE:1;
}DDC5_DDC_DRF_MODE;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     DDC_DRF_RESUME:1;
}DDC5_DDC_DRF_RESUME;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     DDC_DRF_DONE:1;
}DDC5_DDC_DRF_DONE;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     DDC_DRF_PAUSE:1;
}DDC5_DDC_DRF_PAUSE;

typedef struct 
{
unsigned int     reserved_0:31;
unsigned int     DDC_DRF_FAIL:1;
}DDC5_DDC_DRF_FAIL;

typedef struct 
{
unsigned int     reserved_0:7;
unsigned int     CT:1;
unsigned int     AT:1;
unsigned int     PA:15;
unsigned int     DF:8;
}PCMCIA_CMDFF;

typedef struct 
{
unsigned int     PSR:1;
unsigned int     CE1_card1:1;
unsigned int     CE1_card2:1;
unsigned int     CE2_card1:1;
unsigned int     CE2_card2:1;
unsigned int     PCR1:1;
unsigned int     PCR2:1;
unsigned int     PCR1_OE:1;
unsigned int     PCR2_OE:1;
unsigned int     reserved_0:15;
unsigned int     PIIE1:1;
unsigned int     PCIIE1:1;
unsigned int     PCRIE1:1;
unsigned int     PIIE2:1;
unsigned int     PCIIE2:1;
unsigned int     PCRIE2:1;
unsigned int     AFIE:1;
unsigned int     APFIE:1;
}PCMCIA_CR;

typedef struct 
{
unsigned int     reserved_0:22;
unsigned int     PRES1:1;
unsigned int     PRES2:1;
unsigned int     PII1:1;
unsigned int     PCII1:1;
unsigned int     PCRI1:1;
unsigned int     PII2:1;
unsigned int     PCII2:1;
unsigned int     PCRI2:1;
unsigned int     AFI:1;
unsigned int     APFI:1;
}PCMCIA_STS;

typedef struct 
{
unsigned int     TWE:6;
unsigned int     THD:4;
unsigned int     TAOE:5;
unsigned int     reserved_0:4;
unsigned int     THCE:5;
unsigned int     reserved_1:3;
unsigned int     TSU:5;
}PCMCIA_AMTC;

typedef struct 
{
unsigned int     reserved_0:11;
unsigned int     TDIORD:5;
unsigned int     reserved_1:3;
unsigned int     TSUIO:5;
unsigned int     TDINPACK:4;
unsigned int     TDWT:4;
}PCMCIA_IOMTC;

typedef struct 
{
unsigned int     TC:8;
unsigned int     THDIO:4;
unsigned int     reserved_0:3;
unsigned int     TCIO:9;
unsigned int     reserved_1:2;
unsigned int     TWIOWR:6;
}PCMCIA_MATC;

typedef struct 
{
unsigned int     reserved_0:17;
unsigned int     OE:15;
}PCMCIA_ACTRL;

typedef struct 
{
unsigned int     reserved_0:7;
unsigned int     CLK_EN:1;
unsigned int     SC_CLKDIV:6;
unsigned int     BAUDDIV2:2;
unsigned int     BAUDDIV1:8;
unsigned int     PRE_CLKDIV:8;
}SC0_FP;

typedef struct 
{
unsigned int     FIFO_RST:1;
unsigned int     RST:1;
unsigned int     SCEN:1;
unsigned int     TX_GO:1;
unsigned int     AUTO_ATR:1;
unsigned int     CONV:1;
unsigned int     CLK_STOP:1;
unsigned int     PS:1;
unsigned int     mask_sc_pres:1;
unsigned int     rst_waitmode:1;
unsigned int     reserved_0:2;
unsigned int     act_seq:1;
unsigned int     reserved_1:19;
}SC0_CR;

typedef struct 
{
unsigned int     TXGRDT:8;
unsigned int     CWI:4;
unsigned int     BWI:4;
unsigned int     WWI:4;
unsigned int     BGT:5;
unsigned int     EDC_EN:1;
unsigned int     CRC:1;
unsigned int     PROTOCOL_T:1;
unsigned int     T0RTY:1;
unsigned int     T0RTY_CNT:3;
}SC0_PCR;

typedef struct 
{
unsigned int     reserved_0:23;
unsigned int     tx_fifo_full:1;
unsigned int     DAT:8;
}SC0_TXFIFO;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     DAT:8;
}SC0_RXFIFO;

typedef struct 
{
unsigned int     reserved_0:24;
unsigned int     RXLEN:8;
}SC0_RXLENR;

typedef struct 
{
unsigned int     reserved_0:30;
unsigned int     RXFLOW:1;
unsigned int     FLOW_EN:1;
}SC0_FCR;

typedef struct 
{
unsigned int     reserved_0:15;
unsigned int     PRES:1;
unsigned int     CPRES_INT:1;
unsigned int     TX_FLOW_INT:1;
unsigned int     TXP_INT:1;
unsigned int     TXDONE_INT:1;
unsigned int     TXEMPTY_INT:1;
unsigned int     EDCERR_INT:1;
unsigned int     RX_FOVER:1;
unsigned int     RXP_INT:1;
unsigned int     ATRS_INT:1;
unsigned int     BGT_INT:1;
unsigned int     CWT_INT:1;
unsigned int     RLEN_INT:1;
unsigned int     WWT_INT:1;
unsigned int     BWT_INT:1;
unsigned int     RCV_INT:1;
unsigned int     DRDY_INT:1;
}SC0_IRSR;

typedef struct 
{
unsigned int     reserved_0:16;
unsigned int     CPRES_EN:1;
unsigned int     TXFLOW_INT_EN:1;
unsigned int     TXP_EN:1;
unsigned int     TXDONE_EN:1;
unsigned int     TXEMPTY_EN:1;
unsigned int     EDCERR_EN:1;
unsigned int     RX_FOVER_EN:1;
unsigned int     RXP_EN:1;
unsigned int     ATRS_EN:1;
unsigned int     BGT_EN:1;
unsigned int     CWT_EN:1;
unsigned int     RLEN_EN:1;
unsigned int     WWT_EN:1;
unsigned int     BWT_EN:1;
unsigned int     RCV_EN:1;
unsigned int     DRDY_EN:1;
}SC0_IRER;

#endif

#define UMSK_ISR                                                                     0x1801B008
#define UMSK_ISR_reg_addr                                                            "0xB801B008"
#define UMSK_ISR_reg                                                                 0xB801B008
#define set_UMSK_ISR_reg(data)   (*((volatile unsigned int*) UMSK_ISR_reg)=data)
#define get_UMSK_ISR_reg   (*((volatile unsigned int*) UMSK_ISR_reg))
#define UMSK_ISR_inst_adr                                                            "0x0002"
#define UMSK_ISR_inst                                                                0x0002
#define UMSK_ISR_GPIODA_INT_shift                                                    (20)
#define UMSK_ISR_GPIODA_INT_mask                                                     (0x00100000)
#define UMSK_ISR_GPIODA_INT(data)                                                    (0x00100000&((data)<<20))
#define UMSK_ISR_GPIODA_INT_src(data)                                                ((0x00100000&(data))>>20)
#define UMSK_ISR_get_GPIODA_INT(data)                                                ((0x00100000&(data))>>20)
#define UMSK_ISR_GPIOA_INT_shift                                                     (19)
#define UMSK_ISR_GPIOA_INT_mask                                                      (0x00080000)
#define UMSK_ISR_GPIOA_INT(data)                                                     (0x00080000&((data)<<19))
#define UMSK_ISR_GPIOA_INT_src(data)                                                 ((0x00080000&(data))>>19)
#define UMSK_ISR_get_GPIOA_INT(data)                                                 ((0x00080000&(data))>>19)
#define UMSK_ISR_DDC4_INT_shift                                                      (18)
#define UMSK_ISR_DDC4_INT_mask                                                       (0x00040000)
#define UMSK_ISR_DDC4_INT(data)                                                      (0x00040000&((data)<<18))
#define UMSK_ISR_DDC4_INT_src(data)                                                  ((0x00040000&(data))>>18)
#define UMSK_ISR_get_DDC4_INT(data)                                                  ((0x00040000&(data))>>18)
#define UMSK_ISR_DDC3_INT_shift                                                      (17)
#define UMSK_ISR_DDC3_INT_mask                                                       (0x00020000)
#define UMSK_ISR_DDC3_INT(data)                                                      (0x00020000&((data)<<17))
#define UMSK_ISR_DDC3_INT_src(data)                                                  ((0x00020000&(data))>>17)
#define UMSK_ISR_get_DDC3_INT(data)                                                  ((0x00020000&(data))>>17)
#define UMSK_ISR_DDC2_INT_shift                                                      (16)
#define UMSK_ISR_DDC2_INT_mask                                                       (0x00010000)
#define UMSK_ISR_DDC2_INT(data)                                                      (0x00010000&((data)<<16))
#define UMSK_ISR_DDC2_INT_src(data)                                                  ((0x00010000&(data))>>16)
#define UMSK_ISR_get_DDC2_INT(data)                                                  ((0x00010000&(data))>>16)
#define UMSK_ISR_DDC1_INT_shift                                                      (15)
#define UMSK_ISR_DDC1_INT_mask                                                       (0x00008000)
#define UMSK_ISR_DDC1_INT(data)                                                      (0x00008000&((data)<<15))
#define UMSK_ISR_DDC1_INT_src(data)                                                  ((0x00008000&(data))>>15)
#define UMSK_ISR_get_DDC1_INT(data)                                                  ((0x00008000&(data))>>15)
#define UMSK_ISR_TC7_INT_shift                                                       (14)
#define UMSK_ISR_TC7_INT_mask                                                        (0x00004000)
#define UMSK_ISR_TC7_INT(data)                                                       (0x00004000&((data)<<14))
#define UMSK_ISR_TC7_INT_src(data)                                                   ((0x00004000&(data))>>14)
#define UMSK_ISR_get_TC7_INT(data)                                                   ((0x00004000&(data))>>14)
#define UMSK_ISR_TC6_INT_shift                                                       (13)
#define UMSK_ISR_TC6_INT_mask                                                        (0x00002000)
#define UMSK_ISR_TC6_INT(data)                                                       (0x00002000&((data)<<13))
#define UMSK_ISR_TC6_INT_src(data)                                                   ((0x00002000&(data))>>13)
#define UMSK_ISR_get_TC6_INT(data)                                                   ((0x00002000&(data))>>13)
#define UMSK_ISR_TC5_INT_shift                                                       (12)
#define UMSK_ISR_TC5_INT_mask                                                        (0x00001000)
#define UMSK_ISR_TC5_INT(data)                                                       (0x00001000&((data)<<12))
#define UMSK_ISR_TC5_INT_src(data)                                                   ((0x00001000&(data))>>12)
#define UMSK_ISR_get_TC5_INT(data)                                                   ((0x00001000&(data))>>12)
#define UMSK_ISR_TC4_INT_shift                                                       (11)
#define UMSK_ISR_TC4_INT_mask                                                        (0x00000800)
#define UMSK_ISR_TC4_INT(data)                                                       (0x00000800&((data)<<11))
#define UMSK_ISR_TC4_INT_src(data)                                                   ((0x00000800&(data))>>11)
#define UMSK_ISR_get_TC4_INT(data)                                                   ((0x00000800&(data))>>11)
#define UMSK_ISR_TC3_INT_shift                                                       (10)
#define UMSK_ISR_TC3_INT_mask                                                        (0x00000400)
#define UMSK_ISR_TC3_INT(data)                                                       (0x00000400&((data)<<10))
#define UMSK_ISR_TC3_INT_src(data)                                                   ((0x00000400&(data))>>10)
#define UMSK_ISR_get_TC3_INT(data)                                                   ((0x00000400&(data))>>10)
#define UMSK_ISR_TC2_INT_shift                                                       (9)
#define UMSK_ISR_TC2_INT_mask                                                        (0x00000200)
#define UMSK_ISR_TC2_INT(data)                                                       (0x00000200&((data)<<9))
#define UMSK_ISR_TC2_INT_src(data)                                                   ((0x00000200&(data))>>9)
#define UMSK_ISR_get_TC2_INT(data)                                                   ((0x00000200&(data))>>9)
#define UMSK_ISR_TC1_INT_shift                                                       (8)
#define UMSK_ISR_TC1_INT_mask                                                        (0x00000100)
#define UMSK_ISR_TC1_INT(data)                                                       (0x00000100&((data)<<8))
#define UMSK_ISR_TC1_INT_src(data)                                                   ((0x00000100&(data))>>8)
#define UMSK_ISR_get_TC1_INT(data)                                                   ((0x00000100&(data))>>8)
#define UMSK_ISR_TC0_INT_shift                                                       (7)
#define UMSK_ISR_TC0_INT_mask                                                        (0x00000080)
#define UMSK_ISR_TC0_INT(data)                                                       (0x00000080&((data)<<7))
#define UMSK_ISR_TC0_INT_src(data)                                                   ((0x00000080&(data))>>7)
#define UMSK_ISR_get_TC0_INT(data)                                                   ((0x00000080&(data))>>7)
#define UMSK_ISR_UR3_INT_shift                                                       (6)
#define UMSK_ISR_UR3_INT_mask                                                        (0x00000040)
#define UMSK_ISR_UR3_INT(data)                                                       (0x00000040&((data)<<6))
#define UMSK_ISR_UR3_INT_src(data)                                                   ((0x00000040&(data))>>6)
#define UMSK_ISR_get_UR3_INT(data)                                                   ((0x00000040&(data))>>6)
#define UMSK_ISR_UR2_INT_shift                                                       (5)
#define UMSK_ISR_UR2_INT_mask                                                        (0x00000020)
#define UMSK_ISR_UR2_INT(data)                                                       (0x00000020&((data)<<5))
#define UMSK_ISR_UR2_INT_src(data)                                                   ((0x00000020&(data))>>5)
#define UMSK_ISR_get_UR2_INT(data)                                                   ((0x00000020&(data))>>5)
#define UMSK_ISR_UR1_INT_shift                                                       (4)
#define UMSK_ISR_UR1_INT_mask                                                        (0x00000010)
#define UMSK_ISR_UR1_INT(data)                                                       (0x00000010&((data)<<4))
#define UMSK_ISR_UR1_INT_src(data)                                                   ((0x00000010&(data))>>4)
#define UMSK_ISR_get_UR1_INT(data)                                                   ((0x00000010&(data))>>4)
#define UMSK_ISR_UR3_TO_INT_shift                                                    (3)
#define UMSK_ISR_UR3_TO_INT_mask                                                     (0x00000008)
#define UMSK_ISR_UR3_TO_INT(data)                                                    (0x00000008&((data)<<3))
#define UMSK_ISR_UR3_TO_INT_src(data)                                                ((0x00000008&(data))>>3)
#define UMSK_ISR_get_UR3_TO_INT(data)                                                ((0x00000008&(data))>>3)
#define UMSK_ISR_WDOG_NMI_INT_shift                                                  (2)
#define UMSK_ISR_WDOG_NMI_INT_mask                                                   (0x00000004)
#define UMSK_ISR_WDOG_NMI_INT(data)                                                  (0x00000004&((data)<<2))
#define UMSK_ISR_WDOG_NMI_INT_src(data)                                              ((0x00000004&(data))>>2)
#define UMSK_ISR_get_WDOG_NMI_INT(data)                                              ((0x00000004&(data))>>2)
#define UMSK_ISR_write_data_shift                                                    (0)
#define UMSK_ISR_write_data_mask                                                     (0x00000001)
#define UMSK_ISR_write_data(data)                                                    (0x00000001&((data)<<0))
#define UMSK_ISR_write_data_src(data)                                                ((0x00000001&(data))>>0)
#define UMSK_ISR_get_write_data(data)                                                ((0x00000001&(data))>>0)


#define ISR                                                                          0x1801B00C
#define ISR_reg_addr                                                                 "0xB801B00C"
#define ISR_reg                                                                      0xB801B00C
#define set_ISR_reg(data)   (*((volatile unsigned int*) ISR_reg)=data)
#define get_ISR_reg   (*((volatile unsigned int*) ISR_reg))
#define ISR_inst_adr                                                                 "0x0003"
#define ISR_inst                                                                     0x0003
#define ISR_I2C1_INT_shift                                                           (27)
#define ISR_I2C1_INT_mask                                                            (0x08000000)
#define ISR_I2C1_INT(data)                                                           (0x08000000&((data)<<27))
#define ISR_I2C1_INT_src(data)                                                       ((0x08000000&(data))>>27)
#define ISR_get_I2C1_INT(data)                                                       ((0x08000000&(data))>>27)
#define ISR_I2C2_INT_shift                                                           (26)
#define ISR_I2C2_INT_mask                                                            (0x04000000)
#define ISR_I2C2_INT(data)                                                           (0x04000000&((data)<<26))
#define ISR_I2C2_INT_src(data)                                                       ((0x04000000&(data))>>26)
#define ISR_get_I2C2_INT(data)                                                       ((0x04000000&(data))>>26)
#define ISR_sc0_int_shift                                                            (24)
#define ISR_sc0_int_mask                                                             (0x01000000)
#define ISR_sc0_int(data)                                                            (0x01000000&((data)<<24))
#define ISR_sc0_int_src(data)                                                        ((0x01000000&(data))>>24)
#define ISR_get_sc0_int(data)                                                        ((0x01000000&(data))>>24)
#define ISR_PCMCIA_INT_shift                                                         (21)
#define ISR_PCMCIA_INT_mask                                                          (0x00200000)
#define ISR_PCMCIA_INT(data)                                                         (0x00200000&((data)<<21))
#define ISR_PCMCIA_INT_src(data)                                                     ((0x00200000&(data))>>21)
#define ISR_get_PCMCIA_INT(data)                                                     ((0x00200000&(data))>>21)
#define ISR_GPIODA_INT_shift                                                         (20)
#define ISR_GPIODA_INT_mask                                                          (0x00100000)
#define ISR_GPIODA_INT(data)                                                         (0x00100000&((data)<<20))
#define ISR_GPIODA_INT_src(data)                                                     ((0x00100000&(data))>>20)
#define ISR_get_GPIODA_INT(data)                                                     ((0x00100000&(data))>>20)
#define ISR_GPIOA_INT_shift                                                          (19)
#define ISR_GPIOA_INT_mask                                                           (0x00080000)
#define ISR_GPIOA_INT(data)                                                          (0x00080000&((data)<<19))
#define ISR_GPIOA_INT_src(data)                                                      ((0x00080000&(data))>>19)
#define ISR_get_GPIOA_INT(data)                                                      ((0x00080000&(data))>>19)
#define ISR_DDC4_INT_shift                                                           (18)
#define ISR_DDC4_INT_mask                                                            (0x00040000)
#define ISR_DDC4_INT(data)                                                           (0x00040000&((data)<<18))
#define ISR_DDC4_INT_src(data)                                                       ((0x00040000&(data))>>18)
#define ISR_get_DDC4_INT(data)                                                       ((0x00040000&(data))>>18)
#define ISR_DDC3_INT_shift                                                           (17)
#define ISR_DDC3_INT_mask                                                            (0x00020000)
#define ISR_DDC3_INT(data)                                                           (0x00020000&((data)<<17))
#define ISR_DDC3_INT_src(data)                                                       ((0x00020000&(data))>>17)
#define ISR_get_DDC3_INT(data)                                                       ((0x00020000&(data))>>17)
#define ISR_DDC2_INT_shift                                                           (16)
#define ISR_DDC2_INT_mask                                                            (0x00010000)
#define ISR_DDC2_INT(data)                                                           (0x00010000&((data)<<16))
#define ISR_DDC2_INT_src(data)                                                       ((0x00010000&(data))>>16)
#define ISR_get_DDC2_INT(data)                                                       ((0x00010000&(data))>>16)
#define ISR_DDC1_INT_shift                                                           (15)
#define ISR_DDC1_INT_mask                                                            (0x00008000)
#define ISR_DDC1_INT(data)                                                           (0x00008000&((data)<<15))
#define ISR_DDC1_INT_src(data)                                                       ((0x00008000&(data))>>15)
#define ISR_get_DDC1_INT(data)                                                       ((0x00008000&(data))>>15)
#define ISR_TC7_INT_shift                                                            (14)
#define ISR_TC7_INT_mask                                                             (0x00004000)
#define ISR_TC7_INT(data)                                                            (0x00004000&((data)<<14))
#define ISR_TC7_INT_src(data)                                                        ((0x00004000&(data))>>14)
#define ISR_get_TC7_INT(data)                                                        ((0x00004000&(data))>>14)
#define ISR_TC6_INT_shift                                                            (13)
#define ISR_TC6_INT_mask                                                             (0x00002000)
#define ISR_TC6_INT(data)                                                            (0x00002000&((data)<<13))
#define ISR_TC6_INT_src(data)                                                        ((0x00002000&(data))>>13)
#define ISR_get_TC6_INT(data)                                                        ((0x00002000&(data))>>13)
#define ISR_TC5_INT_shift                                                            (12)
#define ISR_TC5_INT_mask                                                             (0x00001000)
#define ISR_TC5_INT(data)                                                            (0x00001000&((data)<<12))
#define ISR_TC5_INT_src(data)                                                        ((0x00001000&(data))>>12)
#define ISR_get_TC5_INT(data)                                                        ((0x00001000&(data))>>12)
#define ISR_TC4_INT_shift                                                            (11)
#define ISR_TC4_INT_mask                                                             (0x00000800)
#define ISR_TC4_INT(data)                                                            (0x00000800&((data)<<11))
#define ISR_TC4_INT_src(data)                                                        ((0x00000800&(data))>>11)
#define ISR_get_TC4_INT(data)                                                        ((0x00000800&(data))>>11)
#define ISR_TC3_INT_shift                                                            (10)
#define ISR_TC3_INT_mask                                                             (0x00000400)
#define ISR_TC3_INT(data)                                                            (0x00000400&((data)<<10))
#define ISR_TC3_INT_src(data)                                                        ((0x00000400&(data))>>10)
#define ISR_get_TC3_INT(data)                                                        ((0x00000400&(data))>>10)
#define ISR_TC2_INT_shift                                                            (9)
#define ISR_TC2_INT_mask                                                             (0x00000200)
#define ISR_TC2_INT(data)                                                            (0x00000200&((data)<<9))
#define ISR_TC2_INT_src(data)                                                        ((0x00000200&(data))>>9)
#define ISR_get_TC2_INT(data)                                                        ((0x00000200&(data))>>9)
#define ISR_TC1_INT_shift                                                            (8)
#define ISR_TC1_INT_mask                                                             (0x00000100)
#define ISR_TC1_INT(data)                                                            (0x00000100&((data)<<8))
#define ISR_TC1_INT_src(data)                                                        ((0x00000100&(data))>>8)
#define ISR_get_TC1_INT(data)                                                        ((0x00000100&(data))>>8)
#define ISR_TC0_INT_shift                                                            (7)
#define ISR_TC0_INT_mask                                                             (0x00000080)
#define ISR_TC0_INT(data)                                                            (0x00000080&((data)<<7))
#define ISR_TC0_INT_src(data)                                                        ((0x00000080&(data))>>7)
#define ISR_get_TC0_INT(data)                                                        ((0x00000080&(data))>>7)
#define ISR_UR3_INT_shift                                                            (6)
#define ISR_UR3_INT_mask                                                             (0x00000040)
#define ISR_UR3_INT(data)                                                            (0x00000040&((data)<<6))
#define ISR_UR3_INT_src(data)                                                        ((0x00000040&(data))>>6)
#define ISR_get_UR3_INT(data)                                                        ((0x00000040&(data))>>6)
#define ISR_UR2_INT_shift                                                            (5)
#define ISR_UR2_INT_mask                                                             (0x00000020)
#define ISR_UR2_INT(data)                                                            (0x00000020&((data)<<5))
#define ISR_UR2_INT_src(data)                                                        ((0x00000020&(data))>>5)
#define ISR_get_UR2_INT(data)                                                        ((0x00000020&(data))>>5)
#define ISR_UR1_INT_shift                                                            (4)
#define ISR_UR1_INT_mask                                                             (0x00000010)
#define ISR_UR1_INT(data)                                                            (0x00000010&((data)<<4))
#define ISR_UR1_INT_src(data)                                                        ((0x00000010&(data))>>4)
#define ISR_get_UR1_INT(data)                                                        ((0x00000010&(data))>>4)
#define ISR_UR3_TO_INT_shift                                                         (3)
#define ISR_UR3_TO_INT_mask                                                          (0x00000008)
#define ISR_UR3_TO_INT(data)                                                         (0x00000008&((data)<<3))
#define ISR_UR3_TO_INT_src(data)                                                     ((0x00000008&(data))>>3)
#define ISR_get_UR3_TO_INT(data)                                                     ((0x00000008&(data))>>3)
#define ISR_write_data_shift                                                         (0)
#define ISR_write_data_mask                                                          (0x00000001)
#define ISR_write_data(data)                                                         (0x00000001&((data)<<0))
#define ISR_write_data_src(data)                                                     ((0x00000001&(data))>>0)
#define ISR_get_write_data(data)                                                     ((0x00000001&(data))>>0)


#define DBG                                                                          0x1801B02C
#define DBG_reg_addr                                                                 "0xB801B02C"
#define DBG_reg                                                                      0xB801B02C
#define set_DBG_reg(data)   (*((volatile unsigned int*) DBG_reg)=data)
#define get_DBG_reg   (*((volatile unsigned int*) DBG_reg))
#define DBG_inst_adr                                                                 "0x000B"
#define DBG_inst                                                                     0x000B
#define DBG_write_enable3_shift                                                      (11)
#define DBG_write_enable3_mask                                                       (0x00000800)
#define DBG_write_enable3(data)                                                      (0x00000800&((data)<<11))
#define DBG_write_enable3_src(data)                                                  ((0x00000800&(data))>>11)
#define DBG_get_write_enable3(data)                                                  ((0x00000800&(data))>>11)
#define DBG_sel1_shift                                                               (7)
#define DBG_sel1_mask                                                                (0x00000780)
#define DBG_sel1(data)                                                               (0x00000780&((data)<<7))
#define DBG_sel1_src(data)                                                           ((0x00000780&(data))>>7)
#define DBG_get_sel1(data)                                                           ((0x00000780&(data))>>7)
#define DBG_write_enable2_shift                                                      (6)
#define DBG_write_enable2_mask                                                       (0x00000040)
#define DBG_write_enable2(data)                                                      (0x00000040&((data)<<6))
#define DBG_write_enable2_src(data)                                                  ((0x00000040&(data))>>6)
#define DBG_get_write_enable2(data)                                                  ((0x00000040&(data))>>6)
#define DBG_sel0_shift                                                               (2)
#define DBG_sel0_mask                                                                (0x0000003C)
#define DBG_sel0(data)                                                               (0x0000003C&((data)<<2))
#define DBG_sel0_src(data)                                                           ((0x0000003C&(data))>>2)
#define DBG_get_sel0(data)                                                           ((0x0000003C&(data))>>2)
#define DBG_write_enable1_shift                                                      (1)
#define DBG_write_enable1_mask                                                       (0x00000002)
#define DBG_write_enable1(data)                                                      (0x00000002&((data)<<1))
#define DBG_write_enable1_src(data)                                                  ((0x00000002&(data))>>1)
#define DBG_get_write_enable1(data)                                                  ((0x00000002&(data))>>1)
#define DBG_enable_shift                                                             (0)
#define DBG_enable_mask                                                              (0x00000001)
#define DBG_enable(data)                                                             (0x00000001&((data)<<0))
#define DBG_enable_src(data)                                                         ((0x00000001&(data))>>0)
#define DBG_get_enable(data)                                                         ((0x00000001&(data))>>0)


#define DUMMY                                                                        0x1801B030
#define DUMMY_reg_addr                                                               "0xB801B030"
#define DUMMY_reg                                                                    0xB801B030
#define set_DUMMY_reg(data)   (*((volatile unsigned int*) DUMMY_reg)=data)
#define get_DUMMY_reg   (*((volatile unsigned int*) DUMMY_reg))
#define DUMMY_inst_adr                                                               "0x000C"
#define DUMMY_inst                                                                   0x000C
#define DUMMY_write_enable4_shift                                                    (31)
#define DUMMY_write_enable4_mask                                                     (0x80000000)
#define DUMMY_write_enable4(data)                                                    (0x80000000&((data)<<31))
#define DUMMY_write_enable4_src(data)                                                ((0x80000000&(data))>>31)
#define DUMMY_get_write_enable4(data)                                                ((0x80000000&(data))>>31)
#define DUMMY_Rvd4_shift                                                             (24)
#define DUMMY_Rvd4_mask                                                              (0x7F000000)
#define DUMMY_Rvd4(data)                                                             (0x7F000000&((data)<<24))
#define DUMMY_Rvd4_src(data)                                                         ((0x7F000000&(data))>>24)
#define DUMMY_get_Rvd4(data)                                                         ((0x7F000000&(data))>>24)
#define DUMMY_write_enable3_shift                                                    (23)
#define DUMMY_write_enable3_mask                                                     (0x00800000)
#define DUMMY_write_enable3(data)                                                    (0x00800000&((data)<<23))
#define DUMMY_write_enable3_src(data)                                                ((0x00800000&(data))>>23)
#define DUMMY_get_write_enable3(data)                                                ((0x00800000&(data))>>23)
#define DUMMY_Rvd3_shift                                                             (16)
#define DUMMY_Rvd3_mask                                                              (0x007F0000)
#define DUMMY_Rvd3(data)                                                             (0x007F0000&((data)<<16))
#define DUMMY_Rvd3_src(data)                                                         ((0x007F0000&(data))>>16)
#define DUMMY_get_Rvd3(data)                                                         ((0x007F0000&(data))>>16)
#define DUMMY_write_enable2_shift                                                    (15)
#define DUMMY_write_enable2_mask                                                     (0x00008000)
#define DUMMY_write_enable2(data)                                                    (0x00008000&((data)<<15))
#define DUMMY_write_enable2_src(data)                                                ((0x00008000&(data))>>15)
#define DUMMY_get_write_enable2(data)                                                ((0x00008000&(data))>>15)
#define DUMMY_Rvd2_shift                                                             (14)
#define DUMMY_Rvd2_mask                                                              (0x00004000)
#define DUMMY_Rvd2(data)                                                             (0x00004000&((data)<<14))
#define DUMMY_Rvd2_src(data)                                                         ((0x00004000&(data))>>14)
#define DUMMY_get_Rvd2(data)                                                         ((0x00004000&(data))>>14)
#define DUMMY_pwm7_od_mode_shift                                                     (13)
#define DUMMY_pwm7_od_mode_mask                                                      (0x00002000)
#define DUMMY_pwm7_od_mode(data)                                                     (0x00002000&((data)<<13))
#define DUMMY_pwm7_od_mode_src(data)                                                 ((0x00002000&(data))>>13)
#define DUMMY_get_pwm7_od_mode(data)                                                 ((0x00002000&(data))>>13)
#define DUMMY_pwm6_od_mode_shift                                                     (12)
#define DUMMY_pwm6_od_mode_mask                                                      (0x00001000)
#define DUMMY_pwm6_od_mode(data)                                                     (0x00001000&((data)<<12))
#define DUMMY_pwm6_od_mode_src(data)                                                 ((0x00001000&(data))>>12)
#define DUMMY_get_pwm6_od_mode(data)                                                 ((0x00001000&(data))>>12)
#define DUMMY_pwm5_od_mode_shift                                                     (11)
#define DUMMY_pwm5_od_mode_mask                                                      (0x00000800)
#define DUMMY_pwm5_od_mode(data)                                                     (0x00000800&((data)<<11))
#define DUMMY_pwm5_od_mode_src(data)                                                 ((0x00000800&(data))>>11)
#define DUMMY_get_pwm5_od_mode(data)                                                 ((0x00000800&(data))>>11)
#define DUMMY_pwm4_od_mode_shift                                                     (10)
#define DUMMY_pwm4_od_mode_mask                                                      (0x00000400)
#define DUMMY_pwm4_od_mode(data)                                                     (0x00000400&((data)<<10))
#define DUMMY_pwm4_od_mode_src(data)                                                 ((0x00000400&(data))>>10)
#define DUMMY_get_pwm4_od_mode(data)                                                 ((0x00000400&(data))>>10)
#define DUMMY_pwm3_od_mode_shift                                                     (9)
#define DUMMY_pwm3_od_mode_mask                                                      (0x00000200)
#define DUMMY_pwm3_od_mode(data)                                                     (0x00000200&((data)<<9))
#define DUMMY_pwm3_od_mode_src(data)                                                 ((0x00000200&(data))>>9)
#define DUMMY_get_pwm3_od_mode(data)                                                 ((0x00000200&(data))>>9)
#define DUMMY_pwm2_od_mode_shift                                                     (8)
#define DUMMY_pwm2_od_mode_mask                                                      (0x00000100)
#define DUMMY_pwm2_od_mode(data)                                                     (0x00000100&((data)<<8))
#define DUMMY_pwm2_od_mode_src(data)                                                 ((0x00000100&(data))>>8)
#define DUMMY_get_pwm2_od_mode(data)                                                 ((0x00000100&(data))>>8)
#define DUMMY_write_enable1_shift                                                    (7)
#define DUMMY_write_enable1_mask                                                     (0x00000080)
#define DUMMY_write_enable1(data)                                                    (0x00000080&((data)<<7))
#define DUMMY_write_enable1_src(data)                                                ((0x00000080&(data))>>7)
#define DUMMY_get_write_enable1(data)                                                ((0x00000080&(data))>>7)
#define DUMMY_pwm1_od_mode_shift                                                     (6)
#define DUMMY_pwm1_od_mode_mask                                                      (0x00000040)
#define DUMMY_pwm1_od_mode(data)                                                     (0x00000040&((data)<<6))
#define DUMMY_pwm1_od_mode_src(data)                                                 ((0x00000040&(data))>>6)
#define DUMMY_get_pwm1_od_mode(data)                                                 ((0x00000040&(data))>>6)
#define DUMMY_pwm0_od_mode_shift                                                     (5)
#define DUMMY_pwm0_od_mode_mask                                                      (0x00000020)
#define DUMMY_pwm0_od_mode(data)                                                     (0x00000020&((data)<<5))
#define DUMMY_pwm0_od_mode_src(data)                                                 ((0x00000020&(data))>>5)
#define DUMMY_get_pwm0_od_mode(data)                                                 ((0x00000020&(data))>>5)
#define DUMMY_sc_od_mode_shift                                                       (4)
#define DUMMY_sc_od_mode_mask                                                        (0x00000010)
#define DUMMY_sc_od_mode(data)                                                       (0x00000010&((data)<<4))
#define DUMMY_sc_od_mode_src(data)                                                   ((0x00000010&(data))>>4)
#define DUMMY_get_sc_od_mode(data)                                                   ((0x00000010&(data))>>4)
#define DUMMY_DDC4dataindetect_shift                                                 (3)
#define DUMMY_DDC4dataindetect_mask                                                  (0x00000008)
#define DUMMY_DDC4dataindetect(data)                                                 (0x00000008&((data)<<3))
#define DUMMY_DDC4dataindetect_src(data)                                             ((0x00000008&(data))>>3)
#define DUMMY_get_DDC4dataindetect(data)                                             ((0x00000008&(data))>>3)
#define DUMMY_DDC3dataindetect_shift                                                 (2)
#define DUMMY_DDC3dataindetect_mask                                                  (0x00000004)
#define DUMMY_DDC3dataindetect(data)                                                 (0x00000004&((data)<<2))
#define DUMMY_DDC3dataindetect_src(data)                                             ((0x00000004&(data))>>2)
#define DUMMY_get_DDC3dataindetect(data)                                             ((0x00000004&(data))>>2)
#define DUMMY_DDC2dataindetect_shift                                                 (1)
#define DUMMY_DDC2dataindetect_mask                                                  (0x00000002)
#define DUMMY_DDC2dataindetect(data)                                                 (0x00000002&((data)<<1))
#define DUMMY_DDC2dataindetect_src(data)                                             ((0x00000002&(data))>>1)
#define DUMMY_get_DDC2dataindetect(data)                                             ((0x00000002&(data))>>1)
#define DUMMY_DDC1dataindetect_shift                                                 (0)
#define DUMMY_DDC1dataindetect_mask                                                  (0x00000001)
#define DUMMY_DDC1dataindetect(data)                                                 (0x00000001&((data)<<0))
#define DUMMY_DDC1dataindetect_src(data)                                             ((0x00000001&(data))>>0)
#define DUMMY_get_DDC1dataindetect(data)                                             ((0x00000001&(data))>>0)


#define DDC_SDA_INPUT_DELAY_CTRL                                                     0x1801B034
#define DDC_SDA_INPUT_DELAY_CTRL_reg_addr                                            "0xB801B034"
#define DDC_SDA_INPUT_DELAY_CTRL_reg                                                 0xB801B034
#define set_DDC_SDA_INPUT_DELAY_CTRL_reg(data)   (*((volatile unsigned int*) DDC_SDA_INPUT_DELAY_CTRL_reg)=data)
#define get_DDC_SDA_INPUT_DELAY_CTRL_reg   (*((volatile unsigned int*) DDC_SDA_INPUT_DELAY_CTRL_reg))
#define DDC_SDA_INPUT_DELAY_CTRL_inst_adr                                            "0x000D"
#define DDC_SDA_INPUT_DELAY_CTRL_inst                                                0x000D
#define DDC_SDA_INPUT_DELAY_CTRL_DDC5_SDA_DELAY_shift                                (16)
#define DDC_SDA_INPUT_DELAY_CTRL_DDC5_SDA_DELAY_mask                                 (0x000F0000)
#define DDC_SDA_INPUT_DELAY_CTRL_DDC5_SDA_DELAY(data)                                (0x000F0000&((data)<<16))
#define DDC_SDA_INPUT_DELAY_CTRL_DDC5_SDA_DELAY_src(data)                            ((0x000F0000&(data))>>16)
#define DDC_SDA_INPUT_DELAY_CTRL_get_DDC5_SDA_DELAY(data)                            ((0x000F0000&(data))>>16)
#define DDC_SDA_INPUT_DELAY_CTRL_DDC4_SDA_DELAY_shift                                (12)
#define DDC_SDA_INPUT_DELAY_CTRL_DDC4_SDA_DELAY_mask                                 (0x0000F000)
#define DDC_SDA_INPUT_DELAY_CTRL_DDC4_SDA_DELAY(data)                                (0x0000F000&((data)<<12))
#define DDC_SDA_INPUT_DELAY_CTRL_DDC4_SDA_DELAY_src(data)                            ((0x0000F000&(data))>>12)
#define DDC_SDA_INPUT_DELAY_CTRL_get_DDC4_SDA_DELAY(data)                            ((0x0000F000&(data))>>12)
#define DDC_SDA_INPUT_DELAY_CTRL_DDC3_SDA_DELAY_shift                                (8)
#define DDC_SDA_INPUT_DELAY_CTRL_DDC3_SDA_DELAY_mask                                 (0x00000F00)
#define DDC_SDA_INPUT_DELAY_CTRL_DDC3_SDA_DELAY(data)                                (0x00000F00&((data)<<8))
#define DDC_SDA_INPUT_DELAY_CTRL_DDC3_SDA_DELAY_src(data)                            ((0x00000F00&(data))>>8)
#define DDC_SDA_INPUT_DELAY_CTRL_get_DDC3_SDA_DELAY(data)                            ((0x00000F00&(data))>>8)
#define DDC_SDA_INPUT_DELAY_CTRL_DDC2_SDA_DELAY_shift                                (4)
#define DDC_SDA_INPUT_DELAY_CTRL_DDC2_SDA_DELAY_mask                                 (0x000000F0)
#define DDC_SDA_INPUT_DELAY_CTRL_DDC2_SDA_DELAY(data)                                (0x000000F0&((data)<<4))
#define DDC_SDA_INPUT_DELAY_CTRL_DDC2_SDA_DELAY_src(data)                            ((0x000000F0&(data))>>4)
#define DDC_SDA_INPUT_DELAY_CTRL_get_DDC2_SDA_DELAY(data)                            ((0x000000F0&(data))>>4)
#define DDC_SDA_INPUT_DELAY_CTRL_DDC1_SDA_DELAY_shift                                (0)
#define DDC_SDA_INPUT_DELAY_CTRL_DDC1_SDA_DELAY_mask                                 (0x0000000F)
#define DDC_SDA_INPUT_DELAY_CTRL_DDC1_SDA_DELAY(data)                                (0x0000000F&((data)<<0))
#define DDC_SDA_INPUT_DELAY_CTRL_DDC1_SDA_DELAY_src(data)                            ((0x0000000F&(data))>>0)
#define DDC_SDA_INPUT_DELAY_CTRL_get_DDC1_SDA_DELAY(data)                            ((0x0000000F&(data))>>0)


#define UMSK_ISR_GP0A                                                                0x1801B040
#define UMSK_ISR_GP0A_reg_addr                                                       "0xB801B040"
#define UMSK_ISR_GP0A_reg                                                            0xB801B040
#define set_UMSK_ISR_GP0A_reg(data)   (*((volatile unsigned int*) UMSK_ISR_GP0A_reg)=data)
#define get_UMSK_ISR_GP0A_reg   (*((volatile unsigned int*) UMSK_ISR_GP0A_reg))
#define UMSK_ISR_GP0A_inst_adr                                                       "0x0010"
#define UMSK_ISR_GP0A_inst                                                           0x0010
#define UMSK_ISR_GP0A_INT30_shift                                                    (31)
#define UMSK_ISR_GP0A_INT30_mask                                                     (0x80000000)
#define UMSK_ISR_GP0A_INT30(data)                                                    (0x80000000&((data)<<31))
#define UMSK_ISR_GP0A_INT30_src(data)                                                ((0x80000000&(data))>>31)
#define UMSK_ISR_GP0A_get_INT30(data)                                                ((0x80000000&(data))>>31)
#define UMSK_ISR_GP0A_INT29_shift                                                    (30)
#define UMSK_ISR_GP0A_INT29_mask                                                     (0x40000000)
#define UMSK_ISR_GP0A_INT29(data)                                                    (0x40000000&((data)<<30))
#define UMSK_ISR_GP0A_INT29_src(data)                                                ((0x40000000&(data))>>30)
#define UMSK_ISR_GP0A_get_INT29(data)                                                ((0x40000000&(data))>>30)
#define UMSK_ISR_GP0A_INT28_shift                                                    (29)
#define UMSK_ISR_GP0A_INT28_mask                                                     (0x20000000)
#define UMSK_ISR_GP0A_INT28(data)                                                    (0x20000000&((data)<<29))
#define UMSK_ISR_GP0A_INT28_src(data)                                                ((0x20000000&(data))>>29)
#define UMSK_ISR_GP0A_get_INT28(data)                                                ((0x20000000&(data))>>29)
#define UMSK_ISR_GP0A_INT27_shift                                                    (28)
#define UMSK_ISR_GP0A_INT27_mask                                                     (0x10000000)
#define UMSK_ISR_GP0A_INT27(data)                                                    (0x10000000&((data)<<28))
#define UMSK_ISR_GP0A_INT27_src(data)                                                ((0x10000000&(data))>>28)
#define UMSK_ISR_GP0A_get_INT27(data)                                                ((0x10000000&(data))>>28)
#define UMSK_ISR_GP0A_INT26_shift                                                    (27)
#define UMSK_ISR_GP0A_INT26_mask                                                     (0x08000000)
#define UMSK_ISR_GP0A_INT26(data)                                                    (0x08000000&((data)<<27))
#define UMSK_ISR_GP0A_INT26_src(data)                                                ((0x08000000&(data))>>27)
#define UMSK_ISR_GP0A_get_INT26(data)                                                ((0x08000000&(data))>>27)
#define UMSK_ISR_GP0A_INT25_shift                                                    (26)
#define UMSK_ISR_GP0A_INT25_mask                                                     (0x04000000)
#define UMSK_ISR_GP0A_INT25(data)                                                    (0x04000000&((data)<<26))
#define UMSK_ISR_GP0A_INT25_src(data)                                                ((0x04000000&(data))>>26)
#define UMSK_ISR_GP0A_get_INT25(data)                                                ((0x04000000&(data))>>26)
#define UMSK_ISR_GP0A_INT24_shift                                                    (25)
#define UMSK_ISR_GP0A_INT24_mask                                                     (0x02000000)
#define UMSK_ISR_GP0A_INT24(data)                                                    (0x02000000&((data)<<25))
#define UMSK_ISR_GP0A_INT24_src(data)                                                ((0x02000000&(data))>>25)
#define UMSK_ISR_GP0A_get_INT24(data)                                                ((0x02000000&(data))>>25)
#define UMSK_ISR_GP0A_INT23_shift                                                    (24)
#define UMSK_ISR_GP0A_INT23_mask                                                     (0x01000000)
#define UMSK_ISR_GP0A_INT23(data)                                                    (0x01000000&((data)<<24))
#define UMSK_ISR_GP0A_INT23_src(data)                                                ((0x01000000&(data))>>24)
#define UMSK_ISR_GP0A_get_INT23(data)                                                ((0x01000000&(data))>>24)
#define UMSK_ISR_GP0A_INT22_shift                                                    (23)
#define UMSK_ISR_GP0A_INT22_mask                                                     (0x00800000)
#define UMSK_ISR_GP0A_INT22(data)                                                    (0x00800000&((data)<<23))
#define UMSK_ISR_GP0A_INT22_src(data)                                                ((0x00800000&(data))>>23)
#define UMSK_ISR_GP0A_get_INT22(data)                                                ((0x00800000&(data))>>23)
#define UMSK_ISR_GP0A_INT21_shift                                                    (22)
#define UMSK_ISR_GP0A_INT21_mask                                                     (0x00400000)
#define UMSK_ISR_GP0A_INT21(data)                                                    (0x00400000&((data)<<22))
#define UMSK_ISR_GP0A_INT21_src(data)                                                ((0x00400000&(data))>>22)
#define UMSK_ISR_GP0A_get_INT21(data)                                                ((0x00400000&(data))>>22)
#define UMSK_ISR_GP0A_INT20_shift                                                    (21)
#define UMSK_ISR_GP0A_INT20_mask                                                     (0x00200000)
#define UMSK_ISR_GP0A_INT20(data)                                                    (0x00200000&((data)<<21))
#define UMSK_ISR_GP0A_INT20_src(data)                                                ((0x00200000&(data))>>21)
#define UMSK_ISR_GP0A_get_INT20(data)                                                ((0x00200000&(data))>>21)
#define UMSK_ISR_GP0A_INT19_shift                                                    (20)
#define UMSK_ISR_GP0A_INT19_mask                                                     (0x00100000)
#define UMSK_ISR_GP0A_INT19(data)                                                    (0x00100000&((data)<<20))
#define UMSK_ISR_GP0A_INT19_src(data)                                                ((0x00100000&(data))>>20)
#define UMSK_ISR_GP0A_get_INT19(data)                                                ((0x00100000&(data))>>20)
#define UMSK_ISR_GP0A_INT18_shift                                                    (19)
#define UMSK_ISR_GP0A_INT18_mask                                                     (0x00080000)
#define UMSK_ISR_GP0A_INT18(data)                                                    (0x00080000&((data)<<19))
#define UMSK_ISR_GP0A_INT18_src(data)                                                ((0x00080000&(data))>>19)
#define UMSK_ISR_GP0A_get_INT18(data)                                                ((0x00080000&(data))>>19)
#define UMSK_ISR_GP0A_INT17_shift                                                    (18)
#define UMSK_ISR_GP0A_INT17_mask                                                     (0x00040000)
#define UMSK_ISR_GP0A_INT17(data)                                                    (0x00040000&((data)<<18))
#define UMSK_ISR_GP0A_INT17_src(data)                                                ((0x00040000&(data))>>18)
#define UMSK_ISR_GP0A_get_INT17(data)                                                ((0x00040000&(data))>>18)
#define UMSK_ISR_GP0A_INT16_shift                                                    (17)
#define UMSK_ISR_GP0A_INT16_mask                                                     (0x00020000)
#define UMSK_ISR_GP0A_INT16(data)                                                    (0x00020000&((data)<<17))
#define UMSK_ISR_GP0A_INT16_src(data)                                                ((0x00020000&(data))>>17)
#define UMSK_ISR_GP0A_get_INT16(data)                                                ((0x00020000&(data))>>17)
#define UMSK_ISR_GP0A_INT15_shift                                                    (16)
#define UMSK_ISR_GP0A_INT15_mask                                                     (0x00010000)
#define UMSK_ISR_GP0A_INT15(data)                                                    (0x00010000&((data)<<16))
#define UMSK_ISR_GP0A_INT15_src(data)                                                ((0x00010000&(data))>>16)
#define UMSK_ISR_GP0A_get_INT15(data)                                                ((0x00010000&(data))>>16)
#define UMSK_ISR_GP0A_INT14_shift                                                    (15)
#define UMSK_ISR_GP0A_INT14_mask                                                     (0x00008000)
#define UMSK_ISR_GP0A_INT14(data)                                                    (0x00008000&((data)<<15))
#define UMSK_ISR_GP0A_INT14_src(data)                                                ((0x00008000&(data))>>15)
#define UMSK_ISR_GP0A_get_INT14(data)                                                ((0x00008000&(data))>>15)
#define UMSK_ISR_GP0A_INT13_shift                                                    (14)
#define UMSK_ISR_GP0A_INT13_mask                                                     (0x00004000)
#define UMSK_ISR_GP0A_INT13(data)                                                    (0x00004000&((data)<<14))
#define UMSK_ISR_GP0A_INT13_src(data)                                                ((0x00004000&(data))>>14)
#define UMSK_ISR_GP0A_get_INT13(data)                                                ((0x00004000&(data))>>14)
#define UMSK_ISR_GP0A_INT12_shift                                                    (13)
#define UMSK_ISR_GP0A_INT12_mask                                                     (0x00002000)
#define UMSK_ISR_GP0A_INT12(data)                                                    (0x00002000&((data)<<13))
#define UMSK_ISR_GP0A_INT12_src(data)                                                ((0x00002000&(data))>>13)
#define UMSK_ISR_GP0A_get_INT12(data)                                                ((0x00002000&(data))>>13)
#define UMSK_ISR_GP0A_INT11_shift                                                    (12)
#define UMSK_ISR_GP0A_INT11_mask                                                     (0x00001000)
#define UMSK_ISR_GP0A_INT11(data)                                                    (0x00001000&((data)<<12))
#define UMSK_ISR_GP0A_INT11_src(data)                                                ((0x00001000&(data))>>12)
#define UMSK_ISR_GP0A_get_INT11(data)                                                ((0x00001000&(data))>>12)
#define UMSK_ISR_GP0A_INT10_shift                                                    (11)
#define UMSK_ISR_GP0A_INT10_mask                                                     (0x00000800)
#define UMSK_ISR_GP0A_INT10(data)                                                    (0x00000800&((data)<<11))
#define UMSK_ISR_GP0A_INT10_src(data)                                                ((0x00000800&(data))>>11)
#define UMSK_ISR_GP0A_get_INT10(data)                                                ((0x00000800&(data))>>11)
#define UMSK_ISR_GP0A_INT9_shift                                                     (10)
#define UMSK_ISR_GP0A_INT9_mask                                                      (0x00000400)
#define UMSK_ISR_GP0A_INT9(data)                                                     (0x00000400&((data)<<10))
#define UMSK_ISR_GP0A_INT9_src(data)                                                 ((0x00000400&(data))>>10)
#define UMSK_ISR_GP0A_get_INT9(data)                                                 ((0x00000400&(data))>>10)
#define UMSK_ISR_GP0A_INT8_shift                                                     (9)
#define UMSK_ISR_GP0A_INT8_mask                                                      (0x00000200)
#define UMSK_ISR_GP0A_INT8(data)                                                     (0x00000200&((data)<<9))
#define UMSK_ISR_GP0A_INT8_src(data)                                                 ((0x00000200&(data))>>9)
#define UMSK_ISR_GP0A_get_INT8(data)                                                 ((0x00000200&(data))>>9)
#define UMSK_ISR_GP0A_INT7_shift                                                     (8)
#define UMSK_ISR_GP0A_INT7_mask                                                      (0x00000100)
#define UMSK_ISR_GP0A_INT7(data)                                                     (0x00000100&((data)<<8))
#define UMSK_ISR_GP0A_INT7_src(data)                                                 ((0x00000100&(data))>>8)
#define UMSK_ISR_GP0A_get_INT7(data)                                                 ((0x00000100&(data))>>8)
#define UMSK_ISR_GP0A_INT6_shift                                                     (7)
#define UMSK_ISR_GP0A_INT6_mask                                                      (0x00000080)
#define UMSK_ISR_GP0A_INT6(data)                                                     (0x00000080&((data)<<7))
#define UMSK_ISR_GP0A_INT6_src(data)                                                 ((0x00000080&(data))>>7)
#define UMSK_ISR_GP0A_get_INT6(data)                                                 ((0x00000080&(data))>>7)
#define UMSK_ISR_GP0A_INT5_shift                                                     (6)
#define UMSK_ISR_GP0A_INT5_mask                                                      (0x00000040)
#define UMSK_ISR_GP0A_INT5(data)                                                     (0x00000040&((data)<<6))
#define UMSK_ISR_GP0A_INT5_src(data)                                                 ((0x00000040&(data))>>6)
#define UMSK_ISR_GP0A_get_INT5(data)                                                 ((0x00000040&(data))>>6)
#define UMSK_ISR_GP0A_INT4_shift                                                     (5)
#define UMSK_ISR_GP0A_INT4_mask                                                      (0x00000020)
#define UMSK_ISR_GP0A_INT4(data)                                                     (0x00000020&((data)<<5))
#define UMSK_ISR_GP0A_INT4_src(data)                                                 ((0x00000020&(data))>>5)
#define UMSK_ISR_GP0A_get_INT4(data)                                                 ((0x00000020&(data))>>5)
#define UMSK_ISR_GP0A_INT3_shift                                                     (4)
#define UMSK_ISR_GP0A_INT3_mask                                                      (0x00000010)
#define UMSK_ISR_GP0A_INT3(data)                                                     (0x00000010&((data)<<4))
#define UMSK_ISR_GP0A_INT3_src(data)                                                 ((0x00000010&(data))>>4)
#define UMSK_ISR_GP0A_get_INT3(data)                                                 ((0x00000010&(data))>>4)
#define UMSK_ISR_GP0A_INT2_shift                                                     (3)
#define UMSK_ISR_GP0A_INT2_mask                                                      (0x00000008)
#define UMSK_ISR_GP0A_INT2(data)                                                     (0x00000008&((data)<<3))
#define UMSK_ISR_GP0A_INT2_src(data)                                                 ((0x00000008&(data))>>3)
#define UMSK_ISR_GP0A_get_INT2(data)                                                 ((0x00000008&(data))>>3)
#define UMSK_ISR_GP0A_INT1_shift                                                     (2)
#define UMSK_ISR_GP0A_INT1_mask                                                      (0x00000004)
#define UMSK_ISR_GP0A_INT1(data)                                                     (0x00000004&((data)<<2))
#define UMSK_ISR_GP0A_INT1_src(data)                                                 ((0x00000004&(data))>>2)
#define UMSK_ISR_GP0A_get_INT1(data)                                                 ((0x00000004&(data))>>2)
#define UMSK_ISR_GP0A_INT0_shift                                                     (1)
#define UMSK_ISR_GP0A_INT0_mask                                                      (0x00000002)
#define UMSK_ISR_GP0A_INT0(data)                                                     (0x00000002&((data)<<1))
#define UMSK_ISR_GP0A_INT0_src(data)                                                 ((0x00000002&(data))>>1)
#define UMSK_ISR_GP0A_get_INT0(data)                                                 ((0x00000002&(data))>>1)
#define UMSK_ISR_GP0A_write_data_shift                                               (0)
#define UMSK_ISR_GP0A_write_data_mask                                                (0x00000001)
#define UMSK_ISR_GP0A_write_data(data)                                               (0x00000001&((data)<<0))
#define UMSK_ISR_GP0A_write_data_src(data)                                           ((0x00000001&(data))>>0)
#define UMSK_ISR_GP0A_get_write_data(data)                                           ((0x00000001&(data))>>0)


#define UMSK_ISR_GP1A                                                                0x1801B044
#define UMSK_ISR_GP1A_reg_addr                                                       "0xB801B044"
#define UMSK_ISR_GP1A_reg                                                            0xB801B044
#define set_UMSK_ISR_GP1A_reg(data)   (*((volatile unsigned int*) UMSK_ISR_GP1A_reg)=data)
#define get_UMSK_ISR_GP1A_reg   (*((volatile unsigned int*) UMSK_ISR_GP1A_reg))
#define UMSK_ISR_GP1A_inst_adr                                                       "0x0011"
#define UMSK_ISR_GP1A_inst                                                           0x0011
#define UMSK_ISR_GP1A_INT61_shift                                                    (31)
#define UMSK_ISR_GP1A_INT61_mask                                                     (0x80000000)
#define UMSK_ISR_GP1A_INT61(data)                                                    (0x80000000&((data)<<31))
#define UMSK_ISR_GP1A_INT61_src(data)                                                ((0x80000000&(data))>>31)
#define UMSK_ISR_GP1A_get_INT61(data)                                                ((0x80000000&(data))>>31)
#define UMSK_ISR_GP1A_INT60_shift                                                    (30)
#define UMSK_ISR_GP1A_INT60_mask                                                     (0x40000000)
#define UMSK_ISR_GP1A_INT60(data)                                                    (0x40000000&((data)<<30))
#define UMSK_ISR_GP1A_INT60_src(data)                                                ((0x40000000&(data))>>30)
#define UMSK_ISR_GP1A_get_INT60(data)                                                ((0x40000000&(data))>>30)
#define UMSK_ISR_GP1A_INT59_shift                                                    (29)
#define UMSK_ISR_GP1A_INT59_mask                                                     (0x20000000)
#define UMSK_ISR_GP1A_INT59(data)                                                    (0x20000000&((data)<<29))
#define UMSK_ISR_GP1A_INT59_src(data)                                                ((0x20000000&(data))>>29)
#define UMSK_ISR_GP1A_get_INT59(data)                                                ((0x20000000&(data))>>29)
#define UMSK_ISR_GP1A_INT58_shift                                                    (28)
#define UMSK_ISR_GP1A_INT58_mask                                                     (0x10000000)
#define UMSK_ISR_GP1A_INT58(data)                                                    (0x10000000&((data)<<28))
#define UMSK_ISR_GP1A_INT58_src(data)                                                ((0x10000000&(data))>>28)
#define UMSK_ISR_GP1A_get_INT58(data)                                                ((0x10000000&(data))>>28)
#define UMSK_ISR_GP1A_INT57_shift                                                    (27)
#define UMSK_ISR_GP1A_INT57_mask                                                     (0x08000000)
#define UMSK_ISR_GP1A_INT57(data)                                                    (0x08000000&((data)<<27))
#define UMSK_ISR_GP1A_INT57_src(data)                                                ((0x08000000&(data))>>27)
#define UMSK_ISR_GP1A_get_INT57(data)                                                ((0x08000000&(data))>>27)
#define UMSK_ISR_GP1A_INT56_shift                                                    (26)
#define UMSK_ISR_GP1A_INT56_mask                                                     (0x04000000)
#define UMSK_ISR_GP1A_INT56(data)                                                    (0x04000000&((data)<<26))
#define UMSK_ISR_GP1A_INT56_src(data)                                                ((0x04000000&(data))>>26)
#define UMSK_ISR_GP1A_get_INT56(data)                                                ((0x04000000&(data))>>26)
#define UMSK_ISR_GP1A_INT55_shift                                                    (25)
#define UMSK_ISR_GP1A_INT55_mask                                                     (0x02000000)
#define UMSK_ISR_GP1A_INT55(data)                                                    (0x02000000&((data)<<25))
#define UMSK_ISR_GP1A_INT55_src(data)                                                ((0x02000000&(data))>>25)
#define UMSK_ISR_GP1A_get_INT55(data)                                                ((0x02000000&(data))>>25)
#define UMSK_ISR_GP1A_INT54_shift                                                    (24)
#define UMSK_ISR_GP1A_INT54_mask                                                     (0x01000000)
#define UMSK_ISR_GP1A_INT54(data)                                                    (0x01000000&((data)<<24))
#define UMSK_ISR_GP1A_INT54_src(data)                                                ((0x01000000&(data))>>24)
#define UMSK_ISR_GP1A_get_INT54(data)                                                ((0x01000000&(data))>>24)
#define UMSK_ISR_GP1A_INT53_shift                                                    (23)
#define UMSK_ISR_GP1A_INT53_mask                                                     (0x00800000)
#define UMSK_ISR_GP1A_INT53(data)                                                    (0x00800000&((data)<<23))
#define UMSK_ISR_GP1A_INT53_src(data)                                                ((0x00800000&(data))>>23)
#define UMSK_ISR_GP1A_get_INT53(data)                                                ((0x00800000&(data))>>23)
#define UMSK_ISR_GP1A_INT52_shift                                                    (22)
#define UMSK_ISR_GP1A_INT52_mask                                                     (0x00400000)
#define UMSK_ISR_GP1A_INT52(data)                                                    (0x00400000&((data)<<22))
#define UMSK_ISR_GP1A_INT52_src(data)                                                ((0x00400000&(data))>>22)
#define UMSK_ISR_GP1A_get_INT52(data)                                                ((0x00400000&(data))>>22)
#define UMSK_ISR_GP1A_INT51_shift                                                    (21)
#define UMSK_ISR_GP1A_INT51_mask                                                     (0x00200000)
#define UMSK_ISR_GP1A_INT51(data)                                                    (0x00200000&((data)<<21))
#define UMSK_ISR_GP1A_INT51_src(data)                                                ((0x00200000&(data))>>21)
#define UMSK_ISR_GP1A_get_INT51(data)                                                ((0x00200000&(data))>>21)
#define UMSK_ISR_GP1A_INT50_shift                                                    (20)
#define UMSK_ISR_GP1A_INT50_mask                                                     (0x00100000)
#define UMSK_ISR_GP1A_INT50(data)                                                    (0x00100000&((data)<<20))
#define UMSK_ISR_GP1A_INT50_src(data)                                                ((0x00100000&(data))>>20)
#define UMSK_ISR_GP1A_get_INT50(data)                                                ((0x00100000&(data))>>20)
#define UMSK_ISR_GP1A_INT49_shift                                                    (19)
#define UMSK_ISR_GP1A_INT49_mask                                                     (0x00080000)
#define UMSK_ISR_GP1A_INT49(data)                                                    (0x00080000&((data)<<19))
#define UMSK_ISR_GP1A_INT49_src(data)                                                ((0x00080000&(data))>>19)
#define UMSK_ISR_GP1A_get_INT49(data)                                                ((0x00080000&(data))>>19)
#define UMSK_ISR_GP1A_INT48_shift                                                    (18)
#define UMSK_ISR_GP1A_INT48_mask                                                     (0x00040000)
#define UMSK_ISR_GP1A_INT48(data)                                                    (0x00040000&((data)<<18))
#define UMSK_ISR_GP1A_INT48_src(data)                                                ((0x00040000&(data))>>18)
#define UMSK_ISR_GP1A_get_INT48(data)                                                ((0x00040000&(data))>>18)
#define UMSK_ISR_GP1A_INT47_shift                                                    (17)
#define UMSK_ISR_GP1A_INT47_mask                                                     (0x00020000)
#define UMSK_ISR_GP1A_INT47(data)                                                    (0x00020000&((data)<<17))
#define UMSK_ISR_GP1A_INT47_src(data)                                                ((0x00020000&(data))>>17)
#define UMSK_ISR_GP1A_get_INT47(data)                                                ((0x00020000&(data))>>17)
#define UMSK_ISR_GP1A_INT46_shift                                                    (16)
#define UMSK_ISR_GP1A_INT46_mask                                                     (0x00010000)
#define UMSK_ISR_GP1A_INT46(data)                                                    (0x00010000&((data)<<16))
#define UMSK_ISR_GP1A_INT46_src(data)                                                ((0x00010000&(data))>>16)
#define UMSK_ISR_GP1A_get_INT46(data)                                                ((0x00010000&(data))>>16)
#define UMSK_ISR_GP1A_INT45_shift                                                    (15)
#define UMSK_ISR_GP1A_INT45_mask                                                     (0x00008000)
#define UMSK_ISR_GP1A_INT45(data)                                                    (0x00008000&((data)<<15))
#define UMSK_ISR_GP1A_INT45_src(data)                                                ((0x00008000&(data))>>15)
#define UMSK_ISR_GP1A_get_INT45(data)                                                ((0x00008000&(data))>>15)
#define UMSK_ISR_GP1A_INT44_shift                                                    (14)
#define UMSK_ISR_GP1A_INT44_mask                                                     (0x00004000)
#define UMSK_ISR_GP1A_INT44(data)                                                    (0x00004000&((data)<<14))
#define UMSK_ISR_GP1A_INT44_src(data)                                                ((0x00004000&(data))>>14)
#define UMSK_ISR_GP1A_get_INT44(data)                                                ((0x00004000&(data))>>14)
#define UMSK_ISR_GP1A_INT43_shift                                                    (13)
#define UMSK_ISR_GP1A_INT43_mask                                                     (0x00002000)
#define UMSK_ISR_GP1A_INT43(data)                                                    (0x00002000&((data)<<13))
#define UMSK_ISR_GP1A_INT43_src(data)                                                ((0x00002000&(data))>>13)
#define UMSK_ISR_GP1A_get_INT43(data)                                                ((0x00002000&(data))>>13)
#define UMSK_ISR_GP1A_INT42_shift                                                    (12)
#define UMSK_ISR_GP1A_INT42_mask                                                     (0x00001000)
#define UMSK_ISR_GP1A_INT42(data)                                                    (0x00001000&((data)<<12))
#define UMSK_ISR_GP1A_INT42_src(data)                                                ((0x00001000&(data))>>12)
#define UMSK_ISR_GP1A_get_INT42(data)                                                ((0x00001000&(data))>>12)
#define UMSK_ISR_GP1A_INT41_shift                                                    (11)
#define UMSK_ISR_GP1A_INT41_mask                                                     (0x00000800)
#define UMSK_ISR_GP1A_INT41(data)                                                    (0x00000800&((data)<<11))
#define UMSK_ISR_GP1A_INT41_src(data)                                                ((0x00000800&(data))>>11)
#define UMSK_ISR_GP1A_get_INT41(data)                                                ((0x00000800&(data))>>11)
#define UMSK_ISR_GP1A_INT40_shift                                                    (10)
#define UMSK_ISR_GP1A_INT40_mask                                                     (0x00000400)
#define UMSK_ISR_GP1A_INT40(data)                                                    (0x00000400&((data)<<10))
#define UMSK_ISR_GP1A_INT40_src(data)                                                ((0x00000400&(data))>>10)
#define UMSK_ISR_GP1A_get_INT40(data)                                                ((0x00000400&(data))>>10)
#define UMSK_ISR_GP1A_INT39_shift                                                    (9)
#define UMSK_ISR_GP1A_INT39_mask                                                     (0x00000200)
#define UMSK_ISR_GP1A_INT39(data)                                                    (0x00000200&((data)<<9))
#define UMSK_ISR_GP1A_INT39_src(data)                                                ((0x00000200&(data))>>9)
#define UMSK_ISR_GP1A_get_INT39(data)                                                ((0x00000200&(data))>>9)
#define UMSK_ISR_GP1A_INT38_shift                                                    (8)
#define UMSK_ISR_GP1A_INT38_mask                                                     (0x00000100)
#define UMSK_ISR_GP1A_INT38(data)                                                    (0x00000100&((data)<<8))
#define UMSK_ISR_GP1A_INT38_src(data)                                                ((0x00000100&(data))>>8)
#define UMSK_ISR_GP1A_get_INT38(data)                                                ((0x00000100&(data))>>8)
#define UMSK_ISR_GP1A_INT37_shift                                                    (7)
#define UMSK_ISR_GP1A_INT37_mask                                                     (0x00000080)
#define UMSK_ISR_GP1A_INT37(data)                                                    (0x00000080&((data)<<7))
#define UMSK_ISR_GP1A_INT37_src(data)                                                ((0x00000080&(data))>>7)
#define UMSK_ISR_GP1A_get_INT37(data)                                                ((0x00000080&(data))>>7)
#define UMSK_ISR_GP1A_INT36_shift                                                    (6)
#define UMSK_ISR_GP1A_INT36_mask                                                     (0x00000040)
#define UMSK_ISR_GP1A_INT36(data)                                                    (0x00000040&((data)<<6))
#define UMSK_ISR_GP1A_INT36_src(data)                                                ((0x00000040&(data))>>6)
#define UMSK_ISR_GP1A_get_INT36(data)                                                ((0x00000040&(data))>>6)
#define UMSK_ISR_GP1A_INT35_shift                                                    (5)
#define UMSK_ISR_GP1A_INT35_mask                                                     (0x00000020)
#define UMSK_ISR_GP1A_INT35(data)                                                    (0x00000020&((data)<<5))
#define UMSK_ISR_GP1A_INT35_src(data)                                                ((0x00000020&(data))>>5)
#define UMSK_ISR_GP1A_get_INT35(data)                                                ((0x00000020&(data))>>5)
#define UMSK_ISR_GP1A_INT34_shift                                                    (4)
#define UMSK_ISR_GP1A_INT34_mask                                                     (0x00000010)
#define UMSK_ISR_GP1A_INT34(data)                                                    (0x00000010&((data)<<4))
#define UMSK_ISR_GP1A_INT34_src(data)                                                ((0x00000010&(data))>>4)
#define UMSK_ISR_GP1A_get_INT34(data)                                                ((0x00000010&(data))>>4)
#define UMSK_ISR_GP1A_INT33_shift                                                    (3)
#define UMSK_ISR_GP1A_INT33_mask                                                     (0x00000008)
#define UMSK_ISR_GP1A_INT33(data)                                                    (0x00000008&((data)<<3))
#define UMSK_ISR_GP1A_INT33_src(data)                                                ((0x00000008&(data))>>3)
#define UMSK_ISR_GP1A_get_INT33(data)                                                ((0x00000008&(data))>>3)
#define UMSK_ISR_GP1A_INT32_shift                                                    (2)
#define UMSK_ISR_GP1A_INT32_mask                                                     (0x00000004)
#define UMSK_ISR_GP1A_INT32(data)                                                    (0x00000004&((data)<<2))
#define UMSK_ISR_GP1A_INT32_src(data)                                                ((0x00000004&(data))>>2)
#define UMSK_ISR_GP1A_get_INT32(data)                                                ((0x00000004&(data))>>2)
#define UMSK_ISR_GP1A_INT31_shift                                                    (1)
#define UMSK_ISR_GP1A_INT31_mask                                                     (0x00000002)
#define UMSK_ISR_GP1A_INT31(data)                                                    (0x00000002&((data)<<1))
#define UMSK_ISR_GP1A_INT31_src(data)                                                ((0x00000002&(data))>>1)
#define UMSK_ISR_GP1A_get_INT31(data)                                                ((0x00000002&(data))>>1)
#define UMSK_ISR_GP1A_write_data_shift                                               (0)
#define UMSK_ISR_GP1A_write_data_mask                                                (0x00000001)
#define UMSK_ISR_GP1A_write_data(data)                                               (0x00000001&((data)<<0))
#define UMSK_ISR_GP1A_write_data_src(data)                                           ((0x00000001&(data))>>0)
#define UMSK_ISR_GP1A_get_write_data(data)                                           ((0x00000001&(data))>>0)


#define UMSK_ISR_GP2A                                                                0x1801B048
#define UMSK_ISR_GP2A_reg_addr                                                       "0xB801B048"
#define UMSK_ISR_GP2A_reg                                                            0xB801B048
#define set_UMSK_ISR_GP2A_reg(data)   (*((volatile unsigned int*) UMSK_ISR_GP2A_reg)=data)
#define get_UMSK_ISR_GP2A_reg   (*((volatile unsigned int*) UMSK_ISR_GP2A_reg))
#define UMSK_ISR_GP2A_inst_adr                                                       "0x0012"
#define UMSK_ISR_GP2A_inst                                                           0x0012
#define UMSK_ISR_GP2A_INT92_shift                                                    (31)
#define UMSK_ISR_GP2A_INT92_mask                                                     (0x80000000)
#define UMSK_ISR_GP2A_INT92(data)                                                    (0x80000000&((data)<<31))
#define UMSK_ISR_GP2A_INT92_src(data)                                                ((0x80000000&(data))>>31)
#define UMSK_ISR_GP2A_get_INT92(data)                                                ((0x80000000&(data))>>31)
#define UMSK_ISR_GP2A_INT91_shift                                                    (30)
#define UMSK_ISR_GP2A_INT91_mask                                                     (0x40000000)
#define UMSK_ISR_GP2A_INT91(data)                                                    (0x40000000&((data)<<30))
#define UMSK_ISR_GP2A_INT91_src(data)                                                ((0x40000000&(data))>>30)
#define UMSK_ISR_GP2A_get_INT91(data)                                                ((0x40000000&(data))>>30)
#define UMSK_ISR_GP2A_INT90_shift                                                    (29)
#define UMSK_ISR_GP2A_INT90_mask                                                     (0x20000000)
#define UMSK_ISR_GP2A_INT90(data)                                                    (0x20000000&((data)<<29))
#define UMSK_ISR_GP2A_INT90_src(data)                                                ((0x20000000&(data))>>29)
#define UMSK_ISR_GP2A_get_INT90(data)                                                ((0x20000000&(data))>>29)
#define UMSK_ISR_GP2A_INT89_shift                                                    (28)
#define UMSK_ISR_GP2A_INT89_mask                                                     (0x10000000)
#define UMSK_ISR_GP2A_INT89(data)                                                    (0x10000000&((data)<<28))
#define UMSK_ISR_GP2A_INT89_src(data)                                                ((0x10000000&(data))>>28)
#define UMSK_ISR_GP2A_get_INT89(data)                                                ((0x10000000&(data))>>28)
#define UMSK_ISR_GP2A_INT88_shift                                                    (27)
#define UMSK_ISR_GP2A_INT88_mask                                                     (0x08000000)
#define UMSK_ISR_GP2A_INT88(data)                                                    (0x08000000&((data)<<27))
#define UMSK_ISR_GP2A_INT88_src(data)                                                ((0x08000000&(data))>>27)
#define UMSK_ISR_GP2A_get_INT88(data)                                                ((0x08000000&(data))>>27)
#define UMSK_ISR_GP2A_INT87_shift                                                    (26)
#define UMSK_ISR_GP2A_INT87_mask                                                     (0x04000000)
#define UMSK_ISR_GP2A_INT87(data)                                                    (0x04000000&((data)<<26))
#define UMSK_ISR_GP2A_INT87_src(data)                                                ((0x04000000&(data))>>26)
#define UMSK_ISR_GP2A_get_INT87(data)                                                ((0x04000000&(data))>>26)
#define UMSK_ISR_GP2A_INT86_shift                                                    (25)
#define UMSK_ISR_GP2A_INT86_mask                                                     (0x02000000)
#define UMSK_ISR_GP2A_INT86(data)                                                    (0x02000000&((data)<<25))
#define UMSK_ISR_GP2A_INT86_src(data)                                                ((0x02000000&(data))>>25)
#define UMSK_ISR_GP2A_get_INT86(data)                                                ((0x02000000&(data))>>25)
#define UMSK_ISR_GP2A_INT85_shift                                                    (24)
#define UMSK_ISR_GP2A_INT85_mask                                                     (0x01000000)
#define UMSK_ISR_GP2A_INT85(data)                                                    (0x01000000&((data)<<24))
#define UMSK_ISR_GP2A_INT85_src(data)                                                ((0x01000000&(data))>>24)
#define UMSK_ISR_GP2A_get_INT85(data)                                                ((0x01000000&(data))>>24)
#define UMSK_ISR_GP2A_INT84_shift                                                    (23)
#define UMSK_ISR_GP2A_INT84_mask                                                     (0x00800000)
#define UMSK_ISR_GP2A_INT84(data)                                                    (0x00800000&((data)<<23))
#define UMSK_ISR_GP2A_INT84_src(data)                                                ((0x00800000&(data))>>23)
#define UMSK_ISR_GP2A_get_INT84(data)                                                ((0x00800000&(data))>>23)
#define UMSK_ISR_GP2A_INT83_shift                                                    (22)
#define UMSK_ISR_GP2A_INT83_mask                                                     (0x00400000)
#define UMSK_ISR_GP2A_INT83(data)                                                    (0x00400000&((data)<<22))
#define UMSK_ISR_GP2A_INT83_src(data)                                                ((0x00400000&(data))>>22)
#define UMSK_ISR_GP2A_get_INT83(data)                                                ((0x00400000&(data))>>22)
#define UMSK_ISR_GP2A_INT82_shift                                                    (21)
#define UMSK_ISR_GP2A_INT82_mask                                                     (0x00200000)
#define UMSK_ISR_GP2A_INT82(data)                                                    (0x00200000&((data)<<21))
#define UMSK_ISR_GP2A_INT82_src(data)                                                ((0x00200000&(data))>>21)
#define UMSK_ISR_GP2A_get_INT82(data)                                                ((0x00200000&(data))>>21)
#define UMSK_ISR_GP2A_INT81_shift                                                    (20)
#define UMSK_ISR_GP2A_INT81_mask                                                     (0x00100000)
#define UMSK_ISR_GP2A_INT81(data)                                                    (0x00100000&((data)<<20))
#define UMSK_ISR_GP2A_INT81_src(data)                                                ((0x00100000&(data))>>20)
#define UMSK_ISR_GP2A_get_INT81(data)                                                ((0x00100000&(data))>>20)
#define UMSK_ISR_GP2A_INT80_shift                                                    (19)
#define UMSK_ISR_GP2A_INT80_mask                                                     (0x00080000)
#define UMSK_ISR_GP2A_INT80(data)                                                    (0x00080000&((data)<<19))
#define UMSK_ISR_GP2A_INT80_src(data)                                                ((0x00080000&(data))>>19)
#define UMSK_ISR_GP2A_get_INT80(data)                                                ((0x00080000&(data))>>19)
#define UMSK_ISR_GP2A_INT79_shift                                                    (18)
#define UMSK_ISR_GP2A_INT79_mask                                                     (0x00040000)
#define UMSK_ISR_GP2A_INT79(data)                                                    (0x00040000&((data)<<18))
#define UMSK_ISR_GP2A_INT79_src(data)                                                ((0x00040000&(data))>>18)
#define UMSK_ISR_GP2A_get_INT79(data)                                                ((0x00040000&(data))>>18)
#define UMSK_ISR_GP2A_INT78_shift                                                    (17)
#define UMSK_ISR_GP2A_INT78_mask                                                     (0x00020000)
#define UMSK_ISR_GP2A_INT78(data)                                                    (0x00020000&((data)<<17))
#define UMSK_ISR_GP2A_INT78_src(data)                                                ((0x00020000&(data))>>17)
#define UMSK_ISR_GP2A_get_INT78(data)                                                ((0x00020000&(data))>>17)
#define UMSK_ISR_GP2A_INT77_shift                                                    (16)
#define UMSK_ISR_GP2A_INT77_mask                                                     (0x00010000)
#define UMSK_ISR_GP2A_INT77(data)                                                    (0x00010000&((data)<<16))
#define UMSK_ISR_GP2A_INT77_src(data)                                                ((0x00010000&(data))>>16)
#define UMSK_ISR_GP2A_get_INT77(data)                                                ((0x00010000&(data))>>16)
#define UMSK_ISR_GP2A_INT76_shift                                                    (15)
#define UMSK_ISR_GP2A_INT76_mask                                                     (0x00008000)
#define UMSK_ISR_GP2A_INT76(data)                                                    (0x00008000&((data)<<15))
#define UMSK_ISR_GP2A_INT76_src(data)                                                ((0x00008000&(data))>>15)
#define UMSK_ISR_GP2A_get_INT76(data)                                                ((0x00008000&(data))>>15)
#define UMSK_ISR_GP2A_INT75_shift                                                    (14)
#define UMSK_ISR_GP2A_INT75_mask                                                     (0x00004000)
#define UMSK_ISR_GP2A_INT75(data)                                                    (0x00004000&((data)<<14))
#define UMSK_ISR_GP2A_INT75_src(data)                                                ((0x00004000&(data))>>14)
#define UMSK_ISR_GP2A_get_INT75(data)                                                ((0x00004000&(data))>>14)
#define UMSK_ISR_GP2A_INT74_shift                                                    (13)
#define UMSK_ISR_GP2A_INT74_mask                                                     (0x00002000)
#define UMSK_ISR_GP2A_INT74(data)                                                    (0x00002000&((data)<<13))
#define UMSK_ISR_GP2A_INT74_src(data)                                                ((0x00002000&(data))>>13)
#define UMSK_ISR_GP2A_get_INT74(data)                                                ((0x00002000&(data))>>13)
#define UMSK_ISR_GP2A_INT73_shift                                                    (12)
#define UMSK_ISR_GP2A_INT73_mask                                                     (0x00001000)
#define UMSK_ISR_GP2A_INT73(data)                                                    (0x00001000&((data)<<12))
#define UMSK_ISR_GP2A_INT73_src(data)                                                ((0x00001000&(data))>>12)
#define UMSK_ISR_GP2A_get_INT73(data)                                                ((0x00001000&(data))>>12)
#define UMSK_ISR_GP2A_INT72_shift                                                    (11)
#define UMSK_ISR_GP2A_INT72_mask                                                     (0x00000800)
#define UMSK_ISR_GP2A_INT72(data)                                                    (0x00000800&((data)<<11))
#define UMSK_ISR_GP2A_INT72_src(data)                                                ((0x00000800&(data))>>11)
#define UMSK_ISR_GP2A_get_INT72(data)                                                ((0x00000800&(data))>>11)
#define UMSK_ISR_GP2A_INT71_shift                                                    (10)
#define UMSK_ISR_GP2A_INT71_mask                                                     (0x00000400)
#define UMSK_ISR_GP2A_INT71(data)                                                    (0x00000400&((data)<<10))
#define UMSK_ISR_GP2A_INT71_src(data)                                                ((0x00000400&(data))>>10)
#define UMSK_ISR_GP2A_get_INT71(data)                                                ((0x00000400&(data))>>10)
#define UMSK_ISR_GP2A_INT70_shift                                                    (9)
#define UMSK_ISR_GP2A_INT70_mask                                                     (0x00000200)
#define UMSK_ISR_GP2A_INT70(data)                                                    (0x00000200&((data)<<9))
#define UMSK_ISR_GP2A_INT70_src(data)                                                ((0x00000200&(data))>>9)
#define UMSK_ISR_GP2A_get_INT70(data)                                                ((0x00000200&(data))>>9)
#define UMSK_ISR_GP2A_INT69_shift                                                    (8)
#define UMSK_ISR_GP2A_INT69_mask                                                     (0x00000100)
#define UMSK_ISR_GP2A_INT69(data)                                                    (0x00000100&((data)<<8))
#define UMSK_ISR_GP2A_INT69_src(data)                                                ((0x00000100&(data))>>8)
#define UMSK_ISR_GP2A_get_INT69(data)                                                ((0x00000100&(data))>>8)
#define UMSK_ISR_GP2A_INT68_shift                                                    (7)
#define UMSK_ISR_GP2A_INT68_mask                                                     (0x00000080)
#define UMSK_ISR_GP2A_INT68(data)                                                    (0x00000080&((data)<<7))
#define UMSK_ISR_GP2A_INT68_src(data)                                                ((0x00000080&(data))>>7)
#define UMSK_ISR_GP2A_get_INT68(data)                                                ((0x00000080&(data))>>7)
#define UMSK_ISR_GP2A_INT67_shift                                                    (6)
#define UMSK_ISR_GP2A_INT67_mask                                                     (0x00000040)
#define UMSK_ISR_GP2A_INT67(data)                                                    (0x00000040&((data)<<6))
#define UMSK_ISR_GP2A_INT67_src(data)                                                ((0x00000040&(data))>>6)
#define UMSK_ISR_GP2A_get_INT67(data)                                                ((0x00000040&(data))>>6)
#define UMSK_ISR_GP2A_INT66_shift                                                    (5)
#define UMSK_ISR_GP2A_INT66_mask                                                     (0x00000020)
#define UMSK_ISR_GP2A_INT66(data)                                                    (0x00000020&((data)<<5))
#define UMSK_ISR_GP2A_INT66_src(data)                                                ((0x00000020&(data))>>5)
#define UMSK_ISR_GP2A_get_INT66(data)                                                ((0x00000020&(data))>>5)
#define UMSK_ISR_GP2A_INT65_shift                                                    (4)
#define UMSK_ISR_GP2A_INT65_mask                                                     (0x00000010)
#define UMSK_ISR_GP2A_INT65(data)                                                    (0x00000010&((data)<<4))
#define UMSK_ISR_GP2A_INT65_src(data)                                                ((0x00000010&(data))>>4)
#define UMSK_ISR_GP2A_get_INT65(data)                                                ((0x00000010&(data))>>4)
#define UMSK_ISR_GP2A_INT64_shift                                                    (3)
#define UMSK_ISR_GP2A_INT64_mask                                                     (0x00000008)
#define UMSK_ISR_GP2A_INT64(data)                                                    (0x00000008&((data)<<3))
#define UMSK_ISR_GP2A_INT64_src(data)                                                ((0x00000008&(data))>>3)
#define UMSK_ISR_GP2A_get_INT64(data)                                                ((0x00000008&(data))>>3)
#define UMSK_ISR_GP2A_INT63_shift                                                    (2)
#define UMSK_ISR_GP2A_INT63_mask                                                     (0x00000004)
#define UMSK_ISR_GP2A_INT63(data)                                                    (0x00000004&((data)<<2))
#define UMSK_ISR_GP2A_INT63_src(data)                                                ((0x00000004&(data))>>2)
#define UMSK_ISR_GP2A_get_INT63(data)                                                ((0x00000004&(data))>>2)
#define UMSK_ISR_GP2A_INT62_shift                                                    (1)
#define UMSK_ISR_GP2A_INT62_mask                                                     (0x00000002)
#define UMSK_ISR_GP2A_INT62(data)                                                    (0x00000002&((data)<<1))
#define UMSK_ISR_GP2A_INT62_src(data)                                                ((0x00000002&(data))>>1)
#define UMSK_ISR_GP2A_get_INT62(data)                                                ((0x00000002&(data))>>1)
#define UMSK_ISR_GP2A_write_data_shift                                               (0)
#define UMSK_ISR_GP2A_write_data_mask                                                (0x00000001)
#define UMSK_ISR_GP2A_write_data(data)                                               (0x00000001&((data)<<0))
#define UMSK_ISR_GP2A_write_data_src(data)                                           ((0x00000001&(data))>>0)
#define UMSK_ISR_GP2A_get_write_data(data)                                           ((0x00000001&(data))>>0)


#define UMSK_ISR_GP3A                                                                0x1801B04C
#define UMSK_ISR_GP3A_reg_addr                                                       "0xB801B04C"
#define UMSK_ISR_GP3A_reg                                                            0xB801B04C
#define set_UMSK_ISR_GP3A_reg(data)   (*((volatile unsigned int*) UMSK_ISR_GP3A_reg)=data)
#define get_UMSK_ISR_GP3A_reg   (*((volatile unsigned int*) UMSK_ISR_GP3A_reg))
#define UMSK_ISR_GP3A_inst_adr                                                       "0x0013"
#define UMSK_ISR_GP3A_inst                                                           0x0013
#define UMSK_ISR_GP3A_INT123_shift                                                   (31)
#define UMSK_ISR_GP3A_INT123_mask                                                    (0x80000000)
#define UMSK_ISR_GP3A_INT123(data)                                                   (0x80000000&((data)<<31))
#define UMSK_ISR_GP3A_INT123_src(data)                                               ((0x80000000&(data))>>31)
#define UMSK_ISR_GP3A_get_INT123(data)                                               ((0x80000000&(data))>>31)
#define UMSK_ISR_GP3A_INT122_shift                                                   (30)
#define UMSK_ISR_GP3A_INT122_mask                                                    (0x40000000)
#define UMSK_ISR_GP3A_INT122(data)                                                   (0x40000000&((data)<<30))
#define UMSK_ISR_GP3A_INT122_src(data)                                               ((0x40000000&(data))>>30)
#define UMSK_ISR_GP3A_get_INT122(data)                                               ((0x40000000&(data))>>30)
#define UMSK_ISR_GP3A_INT121_shift                                                   (29)
#define UMSK_ISR_GP3A_INT121_mask                                                    (0x20000000)
#define UMSK_ISR_GP3A_INT121(data)                                                   (0x20000000&((data)<<29))
#define UMSK_ISR_GP3A_INT121_src(data)                                               ((0x20000000&(data))>>29)
#define UMSK_ISR_GP3A_get_INT121(data)                                               ((0x20000000&(data))>>29)
#define UMSK_ISR_GP3A_INT120_shift                                                   (28)
#define UMSK_ISR_GP3A_INT120_mask                                                    (0x10000000)
#define UMSK_ISR_GP3A_INT120(data)                                                   (0x10000000&((data)<<28))
#define UMSK_ISR_GP3A_INT120_src(data)                                               ((0x10000000&(data))>>28)
#define UMSK_ISR_GP3A_get_INT120(data)                                               ((0x10000000&(data))>>28)
#define UMSK_ISR_GP3A_INT119_shift                                                   (27)
#define UMSK_ISR_GP3A_INT119_mask                                                    (0x08000000)
#define UMSK_ISR_GP3A_INT119(data)                                                   (0x08000000&((data)<<27))
#define UMSK_ISR_GP3A_INT119_src(data)                                               ((0x08000000&(data))>>27)
#define UMSK_ISR_GP3A_get_INT119(data)                                               ((0x08000000&(data))>>27)
#define UMSK_ISR_GP3A_INT118_shift                                                   (26)
#define UMSK_ISR_GP3A_INT118_mask                                                    (0x04000000)
#define UMSK_ISR_GP3A_INT118(data)                                                   (0x04000000&((data)<<26))
#define UMSK_ISR_GP3A_INT118_src(data)                                               ((0x04000000&(data))>>26)
#define UMSK_ISR_GP3A_get_INT118(data)                                               ((0x04000000&(data))>>26)
#define UMSK_ISR_GP3A_INT117_shift                                                   (25)
#define UMSK_ISR_GP3A_INT117_mask                                                    (0x02000000)
#define UMSK_ISR_GP3A_INT117(data)                                                   (0x02000000&((data)<<25))
#define UMSK_ISR_GP3A_INT117_src(data)                                               ((0x02000000&(data))>>25)
#define UMSK_ISR_GP3A_get_INT117(data)                                               ((0x02000000&(data))>>25)
#define UMSK_ISR_GP3A_INT116_shift                                                   (24)
#define UMSK_ISR_GP3A_INT116_mask                                                    (0x01000000)
#define UMSK_ISR_GP3A_INT116(data)                                                   (0x01000000&((data)<<24))
#define UMSK_ISR_GP3A_INT116_src(data)                                               ((0x01000000&(data))>>24)
#define UMSK_ISR_GP3A_get_INT116(data)                                               ((0x01000000&(data))>>24)
#define UMSK_ISR_GP3A_INT115_shift                                                   (23)
#define UMSK_ISR_GP3A_INT115_mask                                                    (0x00800000)
#define UMSK_ISR_GP3A_INT115(data)                                                   (0x00800000&((data)<<23))
#define UMSK_ISR_GP3A_INT115_src(data)                                               ((0x00800000&(data))>>23)
#define UMSK_ISR_GP3A_get_INT115(data)                                               ((0x00800000&(data))>>23)
#define UMSK_ISR_GP3A_INT114_shift                                                   (22)
#define UMSK_ISR_GP3A_INT114_mask                                                    (0x00400000)
#define UMSK_ISR_GP3A_INT114(data)                                                   (0x00400000&((data)<<22))
#define UMSK_ISR_GP3A_INT114_src(data)                                               ((0x00400000&(data))>>22)
#define UMSK_ISR_GP3A_get_INT114(data)                                               ((0x00400000&(data))>>22)
#define UMSK_ISR_GP3A_INT113_shift                                                   (21)
#define UMSK_ISR_GP3A_INT113_mask                                                    (0x00200000)
#define UMSK_ISR_GP3A_INT113(data)                                                   (0x00200000&((data)<<21))
#define UMSK_ISR_GP3A_INT113_src(data)                                               ((0x00200000&(data))>>21)
#define UMSK_ISR_GP3A_get_INT113(data)                                               ((0x00200000&(data))>>21)
#define UMSK_ISR_GP3A_INT112_shift                                                   (20)
#define UMSK_ISR_GP3A_INT112_mask                                                    (0x00100000)
#define UMSK_ISR_GP3A_INT112(data)                                                   (0x00100000&((data)<<20))
#define UMSK_ISR_GP3A_INT112_src(data)                                               ((0x00100000&(data))>>20)
#define UMSK_ISR_GP3A_get_INT112(data)                                               ((0x00100000&(data))>>20)
#define UMSK_ISR_GP3A_INT111_shift                                                   (19)
#define UMSK_ISR_GP3A_INT111_mask                                                    (0x00080000)
#define UMSK_ISR_GP3A_INT111(data)                                                   (0x00080000&((data)<<19))
#define UMSK_ISR_GP3A_INT111_src(data)                                               ((0x00080000&(data))>>19)
#define UMSK_ISR_GP3A_get_INT111(data)                                               ((0x00080000&(data))>>19)
#define UMSK_ISR_GP3A_INT110_shift                                                   (18)
#define UMSK_ISR_GP3A_INT110_mask                                                    (0x00040000)
#define UMSK_ISR_GP3A_INT110(data)                                                   (0x00040000&((data)<<18))
#define UMSK_ISR_GP3A_INT110_src(data)                                               ((0x00040000&(data))>>18)
#define UMSK_ISR_GP3A_get_INT110(data)                                               ((0x00040000&(data))>>18)
#define UMSK_ISR_GP3A_INT109_shift                                                   (17)
#define UMSK_ISR_GP3A_INT109_mask                                                    (0x00020000)
#define UMSK_ISR_GP3A_INT109(data)                                                   (0x00020000&((data)<<17))
#define UMSK_ISR_GP3A_INT109_src(data)                                               ((0x00020000&(data))>>17)
#define UMSK_ISR_GP3A_get_INT109(data)                                               ((0x00020000&(data))>>17)
#define UMSK_ISR_GP3A_INT108_shift                                                   (16)
#define UMSK_ISR_GP3A_INT108_mask                                                    (0x00010000)
#define UMSK_ISR_GP3A_INT108(data)                                                   (0x00010000&((data)<<16))
#define UMSK_ISR_GP3A_INT108_src(data)                                               ((0x00010000&(data))>>16)
#define UMSK_ISR_GP3A_get_INT108(data)                                               ((0x00010000&(data))>>16)
#define UMSK_ISR_GP3A_INT107_shift                                                   (15)
#define UMSK_ISR_GP3A_INT107_mask                                                    (0x00008000)
#define UMSK_ISR_GP3A_INT107(data)                                                   (0x00008000&((data)<<15))
#define UMSK_ISR_GP3A_INT107_src(data)                                               ((0x00008000&(data))>>15)
#define UMSK_ISR_GP3A_get_INT107(data)                                               ((0x00008000&(data))>>15)
#define UMSK_ISR_GP3A_INT106_shift                                                   (14)
#define UMSK_ISR_GP3A_INT106_mask                                                    (0x00004000)
#define UMSK_ISR_GP3A_INT106(data)                                                   (0x00004000&((data)<<14))
#define UMSK_ISR_GP3A_INT106_src(data)                                               ((0x00004000&(data))>>14)
#define UMSK_ISR_GP3A_get_INT106(data)                                               ((0x00004000&(data))>>14)
#define UMSK_ISR_GP3A_INT105_shift                                                   (13)
#define UMSK_ISR_GP3A_INT105_mask                                                    (0x00002000)
#define UMSK_ISR_GP3A_INT105(data)                                                   (0x00002000&((data)<<13))
#define UMSK_ISR_GP3A_INT105_src(data)                                               ((0x00002000&(data))>>13)
#define UMSK_ISR_GP3A_get_INT105(data)                                               ((0x00002000&(data))>>13)
#define UMSK_ISR_GP3A_INT104_shift                                                   (12)
#define UMSK_ISR_GP3A_INT104_mask                                                    (0x00001000)
#define UMSK_ISR_GP3A_INT104(data)                                                   (0x00001000&((data)<<12))
#define UMSK_ISR_GP3A_INT104_src(data)                                               ((0x00001000&(data))>>12)
#define UMSK_ISR_GP3A_get_INT104(data)                                               ((0x00001000&(data))>>12)
#define UMSK_ISR_GP3A_INT103_shift                                                   (11)
#define UMSK_ISR_GP3A_INT103_mask                                                    (0x00000800)
#define UMSK_ISR_GP3A_INT103(data)                                                   (0x00000800&((data)<<11))
#define UMSK_ISR_GP3A_INT103_src(data)                                               ((0x00000800&(data))>>11)
#define UMSK_ISR_GP3A_get_INT103(data)                                               ((0x00000800&(data))>>11)
#define UMSK_ISR_GP3A_INT102_shift                                                   (10)
#define UMSK_ISR_GP3A_INT102_mask                                                    (0x00000400)
#define UMSK_ISR_GP3A_INT102(data)                                                   (0x00000400&((data)<<10))
#define UMSK_ISR_GP3A_INT102_src(data)                                               ((0x00000400&(data))>>10)
#define UMSK_ISR_GP3A_get_INT102(data)                                               ((0x00000400&(data))>>10)
#define UMSK_ISR_GP3A_INT101_shift                                                   (9)
#define UMSK_ISR_GP3A_INT101_mask                                                    (0x00000200)
#define UMSK_ISR_GP3A_INT101(data)                                                   (0x00000200&((data)<<9))
#define UMSK_ISR_GP3A_INT101_src(data)                                               ((0x00000200&(data))>>9)
#define UMSK_ISR_GP3A_get_INT101(data)                                               ((0x00000200&(data))>>9)
#define UMSK_ISR_GP3A_INT100_shift                                                   (8)
#define UMSK_ISR_GP3A_INT100_mask                                                    (0x00000100)
#define UMSK_ISR_GP3A_INT100(data)                                                   (0x00000100&((data)<<8))
#define UMSK_ISR_GP3A_INT100_src(data)                                               ((0x00000100&(data))>>8)
#define UMSK_ISR_GP3A_get_INT100(data)                                               ((0x00000100&(data))>>8)
#define UMSK_ISR_GP3A_INT99_shift                                                    (7)
#define UMSK_ISR_GP3A_INT99_mask                                                     (0x00000080)
#define UMSK_ISR_GP3A_INT99(data)                                                    (0x00000080&((data)<<7))
#define UMSK_ISR_GP3A_INT99_src(data)                                                ((0x00000080&(data))>>7)
#define UMSK_ISR_GP3A_get_INT99(data)                                                ((0x00000080&(data))>>7)
#define UMSK_ISR_GP3A_INT98_shift                                                    (6)
#define UMSK_ISR_GP3A_INT98_mask                                                     (0x00000040)
#define UMSK_ISR_GP3A_INT98(data)                                                    (0x00000040&((data)<<6))
#define UMSK_ISR_GP3A_INT98_src(data)                                                ((0x00000040&(data))>>6)
#define UMSK_ISR_GP3A_get_INT98(data)                                                ((0x00000040&(data))>>6)
#define UMSK_ISR_GP3A_INT97_shift                                                    (5)
#define UMSK_ISR_GP3A_INT97_mask                                                     (0x00000020)
#define UMSK_ISR_GP3A_INT97(data)                                                    (0x00000020&((data)<<5))
#define UMSK_ISR_GP3A_INT97_src(data)                                                ((0x00000020&(data))>>5)
#define UMSK_ISR_GP3A_get_INT97(data)                                                ((0x00000020&(data))>>5)
#define UMSK_ISR_GP3A_INT96_shift                                                    (4)
#define UMSK_ISR_GP3A_INT96_mask                                                     (0x00000010)
#define UMSK_ISR_GP3A_INT96(data)                                                    (0x00000010&((data)<<4))
#define UMSK_ISR_GP3A_INT96_src(data)                                                ((0x00000010&(data))>>4)
#define UMSK_ISR_GP3A_get_INT96(data)                                                ((0x00000010&(data))>>4)
#define UMSK_ISR_GP3A_INT95_shift                                                    (3)
#define UMSK_ISR_GP3A_INT95_mask                                                     (0x00000008)
#define UMSK_ISR_GP3A_INT95(data)                                                    (0x00000008&((data)<<3))
#define UMSK_ISR_GP3A_INT95_src(data)                                                ((0x00000008&(data))>>3)
#define UMSK_ISR_GP3A_get_INT95(data)                                                ((0x00000008&(data))>>3)
#define UMSK_ISR_GP3A_INT94_shift                                                    (2)
#define UMSK_ISR_GP3A_INT94_mask                                                     (0x00000004)
#define UMSK_ISR_GP3A_INT94(data)                                                    (0x00000004&((data)<<2))
#define UMSK_ISR_GP3A_INT94_src(data)                                                ((0x00000004&(data))>>2)
#define UMSK_ISR_GP3A_get_INT94(data)                                                ((0x00000004&(data))>>2)
#define UMSK_ISR_GP3A_INT93_shift                                                    (1)
#define UMSK_ISR_GP3A_INT93_mask                                                     (0x00000002)
#define UMSK_ISR_GP3A_INT93(data)                                                    (0x00000002&((data)<<1))
#define UMSK_ISR_GP3A_INT93_src(data)                                                ((0x00000002&(data))>>1)
#define UMSK_ISR_GP3A_get_INT93(data)                                                ((0x00000002&(data))>>1)
#define UMSK_ISR_GP3A_write_data_shift                                               (0)
#define UMSK_ISR_GP3A_write_data_mask                                                (0x00000001)
#define UMSK_ISR_GP3A_write_data(data)                                               (0x00000001&((data)<<0))
#define UMSK_ISR_GP3A_write_data_src(data)                                           ((0x00000001&(data))>>0)
#define UMSK_ISR_GP3A_get_write_data(data)                                           ((0x00000001&(data))>>0)


#define UMSK_ISR_GP4A                                                                0x1801B050
#define UMSK_ISR_GP4A_reg_addr                                                       "0xB801B050"
#define UMSK_ISR_GP4A_reg                                                            0xB801B050
#define set_UMSK_ISR_GP4A_reg(data)   (*((volatile unsigned int*) UMSK_ISR_GP4A_reg)=data)
#define get_UMSK_ISR_GP4A_reg   (*((volatile unsigned int*) UMSK_ISR_GP4A_reg))
#define UMSK_ISR_GP4A_inst_adr                                                       "0x0014"
#define UMSK_ISR_GP4A_inst                                                           0x0014
#define UMSK_ISR_GP4A_INT154_shift                                                   (31)
#define UMSK_ISR_GP4A_INT154_mask                                                    (0x80000000)
#define UMSK_ISR_GP4A_INT154(data)                                                   (0x80000000&((data)<<31))
#define UMSK_ISR_GP4A_INT154_src(data)                                               ((0x80000000&(data))>>31)
#define UMSK_ISR_GP4A_get_INT154(data)                                               ((0x80000000&(data))>>31)
#define UMSK_ISR_GP4A_INT153_shift                                                   (30)
#define UMSK_ISR_GP4A_INT153_mask                                                    (0x40000000)
#define UMSK_ISR_GP4A_INT153(data)                                                   (0x40000000&((data)<<30))
#define UMSK_ISR_GP4A_INT153_src(data)                                               ((0x40000000&(data))>>30)
#define UMSK_ISR_GP4A_get_INT153(data)                                               ((0x40000000&(data))>>30)
#define UMSK_ISR_GP4A_INT152_shift                                                   (29)
#define UMSK_ISR_GP4A_INT152_mask                                                    (0x20000000)
#define UMSK_ISR_GP4A_INT152(data)                                                   (0x20000000&((data)<<29))
#define UMSK_ISR_GP4A_INT152_src(data)                                               ((0x20000000&(data))>>29)
#define UMSK_ISR_GP4A_get_INT152(data)                                               ((0x20000000&(data))>>29)
#define UMSK_ISR_GP4A_INT151_shift                                                   (28)
#define UMSK_ISR_GP4A_INT151_mask                                                    (0x10000000)
#define UMSK_ISR_GP4A_INT151(data)                                                   (0x10000000&((data)<<28))
#define UMSK_ISR_GP4A_INT151_src(data)                                               ((0x10000000&(data))>>28)
#define UMSK_ISR_GP4A_get_INT151(data)                                               ((0x10000000&(data))>>28)
#define UMSK_ISR_GP4A_INT150_shift                                                   (27)
#define UMSK_ISR_GP4A_INT150_mask                                                    (0x08000000)
#define UMSK_ISR_GP4A_INT150(data)                                                   (0x08000000&((data)<<27))
#define UMSK_ISR_GP4A_INT150_src(data)                                               ((0x08000000&(data))>>27)
#define UMSK_ISR_GP4A_get_INT150(data)                                               ((0x08000000&(data))>>27)
#define UMSK_ISR_GP4A_INT149_shift                                                   (26)
#define UMSK_ISR_GP4A_INT149_mask                                                    (0x04000000)
#define UMSK_ISR_GP4A_INT149(data)                                                   (0x04000000&((data)<<26))
#define UMSK_ISR_GP4A_INT149_src(data)                                               ((0x04000000&(data))>>26)
#define UMSK_ISR_GP4A_get_INT149(data)                                               ((0x04000000&(data))>>26)
#define UMSK_ISR_GP4A_INT148_shift                                                   (25)
#define UMSK_ISR_GP4A_INT148_mask                                                    (0x02000000)
#define UMSK_ISR_GP4A_INT148(data)                                                   (0x02000000&((data)<<25))
#define UMSK_ISR_GP4A_INT148_src(data)                                               ((0x02000000&(data))>>25)
#define UMSK_ISR_GP4A_get_INT148(data)                                               ((0x02000000&(data))>>25)
#define UMSK_ISR_GP4A_INT147_shift                                                   (24)
#define UMSK_ISR_GP4A_INT147_mask                                                    (0x01000000)
#define UMSK_ISR_GP4A_INT147(data)                                                   (0x01000000&((data)<<24))
#define UMSK_ISR_GP4A_INT147_src(data)                                               ((0x01000000&(data))>>24)
#define UMSK_ISR_GP4A_get_INT147(data)                                               ((0x01000000&(data))>>24)
#define UMSK_ISR_GP4A_INT146_shift                                                   (23)
#define UMSK_ISR_GP4A_INT146_mask                                                    (0x00800000)
#define UMSK_ISR_GP4A_INT146(data)                                                   (0x00800000&((data)<<23))
#define UMSK_ISR_GP4A_INT146_src(data)                                               ((0x00800000&(data))>>23)
#define UMSK_ISR_GP4A_get_INT146(data)                                               ((0x00800000&(data))>>23)
#define UMSK_ISR_GP4A_INT145_shift                                                   (22)
#define UMSK_ISR_GP4A_INT145_mask                                                    (0x00400000)
#define UMSK_ISR_GP4A_INT145(data)                                                   (0x00400000&((data)<<22))
#define UMSK_ISR_GP4A_INT145_src(data)                                               ((0x00400000&(data))>>22)
#define UMSK_ISR_GP4A_get_INT145(data)                                               ((0x00400000&(data))>>22)
#define UMSK_ISR_GP4A_INT144_shift                                                   (21)
#define UMSK_ISR_GP4A_INT144_mask                                                    (0x00200000)
#define UMSK_ISR_GP4A_INT144(data)                                                   (0x00200000&((data)<<21))
#define UMSK_ISR_GP4A_INT144_src(data)                                               ((0x00200000&(data))>>21)
#define UMSK_ISR_GP4A_get_INT144(data)                                               ((0x00200000&(data))>>21)
#define UMSK_ISR_GP4A_INT143_shift                                                   (20)
#define UMSK_ISR_GP4A_INT143_mask                                                    (0x00100000)
#define UMSK_ISR_GP4A_INT143(data)                                                   (0x00100000&((data)<<20))
#define UMSK_ISR_GP4A_INT143_src(data)                                               ((0x00100000&(data))>>20)
#define UMSK_ISR_GP4A_get_INT143(data)                                               ((0x00100000&(data))>>20)
#define UMSK_ISR_GP4A_INT142_shift                                                   (19)
#define UMSK_ISR_GP4A_INT142_mask                                                    (0x00080000)
#define UMSK_ISR_GP4A_INT142(data)                                                   (0x00080000&((data)<<19))
#define UMSK_ISR_GP4A_INT142_src(data)                                               ((0x00080000&(data))>>19)
#define UMSK_ISR_GP4A_get_INT142(data)                                               ((0x00080000&(data))>>19)
#define UMSK_ISR_GP4A_INT141_shift                                                   (18)
#define UMSK_ISR_GP4A_INT141_mask                                                    (0x00040000)
#define UMSK_ISR_GP4A_INT141(data)                                                   (0x00040000&((data)<<18))
#define UMSK_ISR_GP4A_INT141_src(data)                                               ((0x00040000&(data))>>18)
#define UMSK_ISR_GP4A_get_INT141(data)                                               ((0x00040000&(data))>>18)
#define UMSK_ISR_GP4A_INT140_shift                                                   (17)
#define UMSK_ISR_GP4A_INT140_mask                                                    (0x00020000)
#define UMSK_ISR_GP4A_INT140(data)                                                   (0x00020000&((data)<<17))
#define UMSK_ISR_GP4A_INT140_src(data)                                               ((0x00020000&(data))>>17)
#define UMSK_ISR_GP4A_get_INT140(data)                                               ((0x00020000&(data))>>17)
#define UMSK_ISR_GP4A_INT139_shift                                                   (16)
#define UMSK_ISR_GP4A_INT139_mask                                                    (0x00010000)
#define UMSK_ISR_GP4A_INT139(data)                                                   (0x00010000&((data)<<16))
#define UMSK_ISR_GP4A_INT139_src(data)                                               ((0x00010000&(data))>>16)
#define UMSK_ISR_GP4A_get_INT139(data)                                               ((0x00010000&(data))>>16)
#define UMSK_ISR_GP4A_INT138_shift                                                   (15)
#define UMSK_ISR_GP4A_INT138_mask                                                    (0x00008000)
#define UMSK_ISR_GP4A_INT138(data)                                                   (0x00008000&((data)<<15))
#define UMSK_ISR_GP4A_INT138_src(data)                                               ((0x00008000&(data))>>15)
#define UMSK_ISR_GP4A_get_INT138(data)                                               ((0x00008000&(data))>>15)
#define UMSK_ISR_GP4A_INT137_shift                                                   (14)
#define UMSK_ISR_GP4A_INT137_mask                                                    (0x00004000)
#define UMSK_ISR_GP4A_INT137(data)                                                   (0x00004000&((data)<<14))
#define UMSK_ISR_GP4A_INT137_src(data)                                               ((0x00004000&(data))>>14)
#define UMSK_ISR_GP4A_get_INT137(data)                                               ((0x00004000&(data))>>14)
#define UMSK_ISR_GP4A_INT136_shift                                                   (13)
#define UMSK_ISR_GP4A_INT136_mask                                                    (0x00002000)
#define UMSK_ISR_GP4A_INT136(data)                                                   (0x00002000&((data)<<13))
#define UMSK_ISR_GP4A_INT136_src(data)                                               ((0x00002000&(data))>>13)
#define UMSK_ISR_GP4A_get_INT136(data)                                               ((0x00002000&(data))>>13)
#define UMSK_ISR_GP4A_INT135_shift                                                   (12)
#define UMSK_ISR_GP4A_INT135_mask                                                    (0x00001000)
#define UMSK_ISR_GP4A_INT135(data)                                                   (0x00001000&((data)<<12))
#define UMSK_ISR_GP4A_INT135_src(data)                                               ((0x00001000&(data))>>12)
#define UMSK_ISR_GP4A_get_INT135(data)                                               ((0x00001000&(data))>>12)
#define UMSK_ISR_GP4A_INT134_shift                                                   (11)
#define UMSK_ISR_GP4A_INT134_mask                                                    (0x00000800)
#define UMSK_ISR_GP4A_INT134(data)                                                   (0x00000800&((data)<<11))
#define UMSK_ISR_GP4A_INT134_src(data)                                               ((0x00000800&(data))>>11)
#define UMSK_ISR_GP4A_get_INT134(data)                                               ((0x00000800&(data))>>11)
#define UMSK_ISR_GP4A_INT133_shift                                                   (10)
#define UMSK_ISR_GP4A_INT133_mask                                                    (0x00000400)
#define UMSK_ISR_GP4A_INT133(data)                                                   (0x00000400&((data)<<10))
#define UMSK_ISR_GP4A_INT133_src(data)                                               ((0x00000400&(data))>>10)
#define UMSK_ISR_GP4A_get_INT133(data)                                               ((0x00000400&(data))>>10)
#define UMSK_ISR_GP4A_INT132_shift                                                   (9)
#define UMSK_ISR_GP4A_INT132_mask                                                    (0x00000200)
#define UMSK_ISR_GP4A_INT132(data)                                                   (0x00000200&((data)<<9))
#define UMSK_ISR_GP4A_INT132_src(data)                                               ((0x00000200&(data))>>9)
#define UMSK_ISR_GP4A_get_INT132(data)                                               ((0x00000200&(data))>>9)
#define UMSK_ISR_GP4A_INT131_shift                                                   (8)
#define UMSK_ISR_GP4A_INT131_mask                                                    (0x00000100)
#define UMSK_ISR_GP4A_INT131(data)                                                   (0x00000100&((data)<<8))
#define UMSK_ISR_GP4A_INT131_src(data)                                               ((0x00000100&(data))>>8)
#define UMSK_ISR_GP4A_get_INT131(data)                                               ((0x00000100&(data))>>8)
#define UMSK_ISR_GP4A_INT130_shift                                                   (7)
#define UMSK_ISR_GP4A_INT130_mask                                                    (0x00000080)
#define UMSK_ISR_GP4A_INT130(data)                                                   (0x00000080&((data)<<7))
#define UMSK_ISR_GP4A_INT130_src(data)                                               ((0x00000080&(data))>>7)
#define UMSK_ISR_GP4A_get_INT130(data)                                               ((0x00000080&(data))>>7)
#define UMSK_ISR_GP4A_INT129_shift                                                   (6)
#define UMSK_ISR_GP4A_INT129_mask                                                    (0x00000040)
#define UMSK_ISR_GP4A_INT129(data)                                                   (0x00000040&((data)<<6))
#define UMSK_ISR_GP4A_INT129_src(data)                                               ((0x00000040&(data))>>6)
#define UMSK_ISR_GP4A_get_INT129(data)                                               ((0x00000040&(data))>>6)
#define UMSK_ISR_GP4A_INT128_shift                                                   (5)
#define UMSK_ISR_GP4A_INT128_mask                                                    (0x00000020)
#define UMSK_ISR_GP4A_INT128(data)                                                   (0x00000020&((data)<<5))
#define UMSK_ISR_GP4A_INT128_src(data)                                               ((0x00000020&(data))>>5)
#define UMSK_ISR_GP4A_get_INT128(data)                                               ((0x00000020&(data))>>5)
#define UMSK_ISR_GP4A_INT127_shift                                                   (4)
#define UMSK_ISR_GP4A_INT127_mask                                                    (0x00000010)
#define UMSK_ISR_GP4A_INT127(data)                                                   (0x00000010&((data)<<4))
#define UMSK_ISR_GP4A_INT127_src(data)                                               ((0x00000010&(data))>>4)
#define UMSK_ISR_GP4A_get_INT127(data)                                               ((0x00000010&(data))>>4)
#define UMSK_ISR_GP4A_INT126_shift                                                   (3)
#define UMSK_ISR_GP4A_INT126_mask                                                    (0x00000008)
#define UMSK_ISR_GP4A_INT126(data)                                                   (0x00000008&((data)<<3))
#define UMSK_ISR_GP4A_INT126_src(data)                                               ((0x00000008&(data))>>3)
#define UMSK_ISR_GP4A_get_INT126(data)                                               ((0x00000008&(data))>>3)
#define UMSK_ISR_GP4A_INT125_shift                                                   (2)
#define UMSK_ISR_GP4A_INT125_mask                                                    (0x00000004)
#define UMSK_ISR_GP4A_INT125(data)                                                   (0x00000004&((data)<<2))
#define UMSK_ISR_GP4A_INT125_src(data)                                               ((0x00000004&(data))>>2)
#define UMSK_ISR_GP4A_get_INT125(data)                                               ((0x00000004&(data))>>2)
#define UMSK_ISR_GP4A_INT124_shift                                                   (1)
#define UMSK_ISR_GP4A_INT124_mask                                                    (0x00000002)
#define UMSK_ISR_GP4A_INT124(data)                                                   (0x00000002&((data)<<1))
#define UMSK_ISR_GP4A_INT124_src(data)                                               ((0x00000002&(data))>>1)
#define UMSK_ISR_GP4A_get_INT124(data)                                               ((0x00000002&(data))>>1)
#define UMSK_ISR_GP4A_write_data_shift                                               (0)
#define UMSK_ISR_GP4A_write_data_mask                                                (0x00000001)
#define UMSK_ISR_GP4A_write_data(data)                                               (0x00000001&((data)<<0))
#define UMSK_ISR_GP4A_write_data_src(data)                                           ((0x00000001&(data))>>0)
#define UMSK_ISR_GP4A_get_write_data(data)                                           ((0x00000001&(data))>>0)


#define UMSK_ISR_GP5A                                                                0x1801B054
#define UMSK_ISR_GP5A_reg_addr                                                       "0xB801B054"
#define UMSK_ISR_GP5A_reg                                                            0xB801B054
#define set_UMSK_ISR_GP5A_reg(data)   (*((volatile unsigned int*) UMSK_ISR_GP5A_reg)=data)
#define get_UMSK_ISR_GP5A_reg   (*((volatile unsigned int*) UMSK_ISR_GP5A_reg))
#define UMSK_ISR_GP5A_inst_adr                                                       "0x0015"
#define UMSK_ISR_GP5A_inst                                                           0x0015
#define UMSK_ISR_GP5A_INT169_shift                                                   (15)
#define UMSK_ISR_GP5A_INT169_mask                                                    (0x00008000)
#define UMSK_ISR_GP5A_INT169(data)                                                   (0x00008000&((data)<<15))
#define UMSK_ISR_GP5A_INT169_src(data)                                               ((0x00008000&(data))>>15)
#define UMSK_ISR_GP5A_get_INT169(data)                                               ((0x00008000&(data))>>15)
#define UMSK_ISR_GP5A_INT168_shift                                                   (14)
#define UMSK_ISR_GP5A_INT168_mask                                                    (0x00004000)
#define UMSK_ISR_GP5A_INT168(data)                                                   (0x00004000&((data)<<14))
#define UMSK_ISR_GP5A_INT168_src(data)                                               ((0x00004000&(data))>>14)
#define UMSK_ISR_GP5A_get_INT168(data)                                               ((0x00004000&(data))>>14)
#define UMSK_ISR_GP5A_INT167_shift                                                   (13)
#define UMSK_ISR_GP5A_INT167_mask                                                    (0x00002000)
#define UMSK_ISR_GP5A_INT167(data)                                                   (0x00002000&((data)<<13))
#define UMSK_ISR_GP5A_INT167_src(data)                                               ((0x00002000&(data))>>13)
#define UMSK_ISR_GP5A_get_INT167(data)                                               ((0x00002000&(data))>>13)
#define UMSK_ISR_GP5A_INT166_shift                                                   (12)
#define UMSK_ISR_GP5A_INT166_mask                                                    (0x00001000)
#define UMSK_ISR_GP5A_INT166(data)                                                   (0x00001000&((data)<<12))
#define UMSK_ISR_GP5A_INT166_src(data)                                               ((0x00001000&(data))>>12)
#define UMSK_ISR_GP5A_get_INT166(data)                                               ((0x00001000&(data))>>12)
#define UMSK_ISR_GP5A_INT165_shift                                                   (11)
#define UMSK_ISR_GP5A_INT165_mask                                                    (0x00000800)
#define UMSK_ISR_GP5A_INT165(data)                                                   (0x00000800&((data)<<11))
#define UMSK_ISR_GP5A_INT165_src(data)                                               ((0x00000800&(data))>>11)
#define UMSK_ISR_GP5A_get_INT165(data)                                               ((0x00000800&(data))>>11)
#define UMSK_ISR_GP5A_INT164_shift                                                   (10)
#define UMSK_ISR_GP5A_INT164_mask                                                    (0x00000400)
#define UMSK_ISR_GP5A_INT164(data)                                                   (0x00000400&((data)<<10))
#define UMSK_ISR_GP5A_INT164_src(data)                                               ((0x00000400&(data))>>10)
#define UMSK_ISR_GP5A_get_INT164(data)                                               ((0x00000400&(data))>>10)
#define UMSK_ISR_GP5A_INT163_shift                                                   (9)
#define UMSK_ISR_GP5A_INT163_mask                                                    (0x00000200)
#define UMSK_ISR_GP5A_INT163(data)                                                   (0x00000200&((data)<<9))
#define UMSK_ISR_GP5A_INT163_src(data)                                               ((0x00000200&(data))>>9)
#define UMSK_ISR_GP5A_get_INT163(data)                                               ((0x00000200&(data))>>9)
#define UMSK_ISR_GP5A_INT162_shift                                                   (8)
#define UMSK_ISR_GP5A_INT162_mask                                                    (0x00000100)
#define UMSK_ISR_GP5A_INT162(data)                                                   (0x00000100&((data)<<8))
#define UMSK_ISR_GP5A_INT162_src(data)                                               ((0x00000100&(data))>>8)
#define UMSK_ISR_GP5A_get_INT162(data)                                               ((0x00000100&(data))>>8)
#define UMSK_ISR_GP5A_INT161_shift                                                   (7)
#define UMSK_ISR_GP5A_INT161_mask                                                    (0x00000080)
#define UMSK_ISR_GP5A_INT161(data)                                                   (0x00000080&((data)<<7))
#define UMSK_ISR_GP5A_INT161_src(data)                                               ((0x00000080&(data))>>7)
#define UMSK_ISR_GP5A_get_INT161(data)                                               ((0x00000080&(data))>>7)
#define UMSK_ISR_GP5A_INT160_shift                                                   (6)
#define UMSK_ISR_GP5A_INT160_mask                                                    (0x00000040)
#define UMSK_ISR_GP5A_INT160(data)                                                   (0x00000040&((data)<<6))
#define UMSK_ISR_GP5A_INT160_src(data)                                               ((0x00000040&(data))>>6)
#define UMSK_ISR_GP5A_get_INT160(data)                                               ((0x00000040&(data))>>6)
#define UMSK_ISR_GP5A_INT159_shift                                                   (5)
#define UMSK_ISR_GP5A_INT159_mask                                                    (0x00000020)
#define UMSK_ISR_GP5A_INT159(data)                                                   (0x00000020&((data)<<5))
#define UMSK_ISR_GP5A_INT159_src(data)                                               ((0x00000020&(data))>>5)
#define UMSK_ISR_GP5A_get_INT159(data)                                               ((0x00000020&(data))>>5)
#define UMSK_ISR_GP5A_INT158_shift                                                   (4)
#define UMSK_ISR_GP5A_INT158_mask                                                    (0x00000010)
#define UMSK_ISR_GP5A_INT158(data)                                                   (0x00000010&((data)<<4))
#define UMSK_ISR_GP5A_INT158_src(data)                                               ((0x00000010&(data))>>4)
#define UMSK_ISR_GP5A_get_INT158(data)                                               ((0x00000010&(data))>>4)
#define UMSK_ISR_GP5A_INT157_shift                                                   (3)
#define UMSK_ISR_GP5A_INT157_mask                                                    (0x00000008)
#define UMSK_ISR_GP5A_INT157(data)                                                   (0x00000008&((data)<<3))
#define UMSK_ISR_GP5A_INT157_src(data)                                               ((0x00000008&(data))>>3)
#define UMSK_ISR_GP5A_get_INT157(data)                                               ((0x00000008&(data))>>3)
#define UMSK_ISR_GP5A_INT156_shift                                                   (2)
#define UMSK_ISR_GP5A_INT156_mask                                                    (0x00000004)
#define UMSK_ISR_GP5A_INT156(data)                                                   (0x00000004&((data)<<2))
#define UMSK_ISR_GP5A_INT156_src(data)                                               ((0x00000004&(data))>>2)
#define UMSK_ISR_GP5A_get_INT156(data)                                               ((0x00000004&(data))>>2)
#define UMSK_ISR_GP5A_INT155_shift                                                   (1)
#define UMSK_ISR_GP5A_INT155_mask                                                    (0x00000002)
#define UMSK_ISR_GP5A_INT155(data)                                                   (0x00000002&((data)<<1))
#define UMSK_ISR_GP5A_INT155_src(data)                                               ((0x00000002&(data))>>1)
#define UMSK_ISR_GP5A_get_INT155(data)                                               ((0x00000002&(data))>>1)
#define UMSK_ISR_GP5A_write_data_shift                                               (0)
#define UMSK_ISR_GP5A_write_data_mask                                                (0x00000001)
#define UMSK_ISR_GP5A_write_data(data)                                               (0x00000001&((data)<<0))
#define UMSK_ISR_GP5A_write_data_src(data)                                           ((0x00000001&(data))>>0)
#define UMSK_ISR_GP5A_get_write_data(data)                                           ((0x00000001&(data))>>0)


#define UMSK_ISR_GP0DA                                                               0x1801B058
#define UMSK_ISR_GP0DA_reg_addr                                                      "0xB801B058"
#define UMSK_ISR_GP0DA_reg                                                           0xB801B058
#define set_UMSK_ISR_GP0DA_reg(data)   (*((volatile unsigned int*) UMSK_ISR_GP0DA_reg)=data)
#define get_UMSK_ISR_GP0DA_reg   (*((volatile unsigned int*) UMSK_ISR_GP0DA_reg))
#define UMSK_ISR_GP0DA_inst_adr                                                      "0x0016"
#define UMSK_ISR_GP0DA_inst                                                          0x0016
#define UMSK_ISR_GP0DA_INT30_shift                                                   (31)
#define UMSK_ISR_GP0DA_INT30_mask                                                    (0x80000000)
#define UMSK_ISR_GP0DA_INT30(data)                                                   (0x80000000&((data)<<31))
#define UMSK_ISR_GP0DA_INT30_src(data)                                               ((0x80000000&(data))>>31)
#define UMSK_ISR_GP0DA_get_INT30(data)                                               ((0x80000000&(data))>>31)
#define UMSK_ISR_GP0DA_INT29_shift                                                   (30)
#define UMSK_ISR_GP0DA_INT29_mask                                                    (0x40000000)
#define UMSK_ISR_GP0DA_INT29(data)                                                   (0x40000000&((data)<<30))
#define UMSK_ISR_GP0DA_INT29_src(data)                                               ((0x40000000&(data))>>30)
#define UMSK_ISR_GP0DA_get_INT29(data)                                               ((0x40000000&(data))>>30)
#define UMSK_ISR_GP0DA_INT28_shift                                                   (29)
#define UMSK_ISR_GP0DA_INT28_mask                                                    (0x20000000)
#define UMSK_ISR_GP0DA_INT28(data)                                                   (0x20000000&((data)<<29))
#define UMSK_ISR_GP0DA_INT28_src(data)                                               ((0x20000000&(data))>>29)
#define UMSK_ISR_GP0DA_get_INT28(data)                                               ((0x20000000&(data))>>29)
#define UMSK_ISR_GP0DA_INT27_shift                                                   (28)
#define UMSK_ISR_GP0DA_INT27_mask                                                    (0x10000000)
#define UMSK_ISR_GP0DA_INT27(data)                                                   (0x10000000&((data)<<28))
#define UMSK_ISR_GP0DA_INT27_src(data)                                               ((0x10000000&(data))>>28)
#define UMSK_ISR_GP0DA_get_INT27(data)                                               ((0x10000000&(data))>>28)
#define UMSK_ISR_GP0DA_INT26_shift                                                   (27)
#define UMSK_ISR_GP0DA_INT26_mask                                                    (0x08000000)
#define UMSK_ISR_GP0DA_INT26(data)                                                   (0x08000000&((data)<<27))
#define UMSK_ISR_GP0DA_INT26_src(data)                                               ((0x08000000&(data))>>27)
#define UMSK_ISR_GP0DA_get_INT26(data)                                               ((0x08000000&(data))>>27)
#define UMSK_ISR_GP0DA_INT25_shift                                                   (26)
#define UMSK_ISR_GP0DA_INT25_mask                                                    (0x04000000)
#define UMSK_ISR_GP0DA_INT25(data)                                                   (0x04000000&((data)<<26))
#define UMSK_ISR_GP0DA_INT25_src(data)                                               ((0x04000000&(data))>>26)
#define UMSK_ISR_GP0DA_get_INT25(data)                                               ((0x04000000&(data))>>26)
#define UMSK_ISR_GP0DA_INT24_shift                                                   (25)
#define UMSK_ISR_GP0DA_INT24_mask                                                    (0x02000000)
#define UMSK_ISR_GP0DA_INT24(data)                                                   (0x02000000&((data)<<25))
#define UMSK_ISR_GP0DA_INT24_src(data)                                               ((0x02000000&(data))>>25)
#define UMSK_ISR_GP0DA_get_INT24(data)                                               ((0x02000000&(data))>>25)
#define UMSK_ISR_GP0DA_INT23_shift                                                   (24)
#define UMSK_ISR_GP0DA_INT23_mask                                                    (0x01000000)
#define UMSK_ISR_GP0DA_INT23(data)                                                   (0x01000000&((data)<<24))
#define UMSK_ISR_GP0DA_INT23_src(data)                                               ((0x01000000&(data))>>24)
#define UMSK_ISR_GP0DA_get_INT23(data)                                               ((0x01000000&(data))>>24)
#define UMSK_ISR_GP0DA_INT22_shift                                                   (23)
#define UMSK_ISR_GP0DA_INT22_mask                                                    (0x00800000)
#define UMSK_ISR_GP0DA_INT22(data)                                                   (0x00800000&((data)<<23))
#define UMSK_ISR_GP0DA_INT22_src(data)                                               ((0x00800000&(data))>>23)
#define UMSK_ISR_GP0DA_get_INT22(data)                                               ((0x00800000&(data))>>23)
#define UMSK_ISR_GP0DA_INT21_shift                                                   (22)
#define UMSK_ISR_GP0DA_INT21_mask                                                    (0x00400000)
#define UMSK_ISR_GP0DA_INT21(data)                                                   (0x00400000&((data)<<22))
#define UMSK_ISR_GP0DA_INT21_src(data)                                               ((0x00400000&(data))>>22)
#define UMSK_ISR_GP0DA_get_INT21(data)                                               ((0x00400000&(data))>>22)
#define UMSK_ISR_GP0DA_INT20_shift                                                   (21)
#define UMSK_ISR_GP0DA_INT20_mask                                                    (0x00200000)
#define UMSK_ISR_GP0DA_INT20(data)                                                   (0x00200000&((data)<<21))
#define UMSK_ISR_GP0DA_INT20_src(data)                                               ((0x00200000&(data))>>21)
#define UMSK_ISR_GP0DA_get_INT20(data)                                               ((0x00200000&(data))>>21)
#define UMSK_ISR_GP0DA_INT19_shift                                                   (20)
#define UMSK_ISR_GP0DA_INT19_mask                                                    (0x00100000)
#define UMSK_ISR_GP0DA_INT19(data)                                                   (0x00100000&((data)<<20))
#define UMSK_ISR_GP0DA_INT19_src(data)                                               ((0x00100000&(data))>>20)
#define UMSK_ISR_GP0DA_get_INT19(data)                                               ((0x00100000&(data))>>20)
#define UMSK_ISR_GP0DA_INT18_shift                                                   (19)
#define UMSK_ISR_GP0DA_INT18_mask                                                    (0x00080000)
#define UMSK_ISR_GP0DA_INT18(data)                                                   (0x00080000&((data)<<19))
#define UMSK_ISR_GP0DA_INT18_src(data)                                               ((0x00080000&(data))>>19)
#define UMSK_ISR_GP0DA_get_INT18(data)                                               ((0x00080000&(data))>>19)
#define UMSK_ISR_GP0DA_INT17_shift                                                   (18)
#define UMSK_ISR_GP0DA_INT17_mask                                                    (0x00040000)
#define UMSK_ISR_GP0DA_INT17(data)                                                   (0x00040000&((data)<<18))
#define UMSK_ISR_GP0DA_INT17_src(data)                                               ((0x00040000&(data))>>18)
#define UMSK_ISR_GP0DA_get_INT17(data)                                               ((0x00040000&(data))>>18)
#define UMSK_ISR_GP0DA_INT16_shift                                                   (17)
#define UMSK_ISR_GP0DA_INT16_mask                                                    (0x00020000)
#define UMSK_ISR_GP0DA_INT16(data)                                                   (0x00020000&((data)<<17))
#define UMSK_ISR_GP0DA_INT16_src(data)                                               ((0x00020000&(data))>>17)
#define UMSK_ISR_GP0DA_get_INT16(data)                                               ((0x00020000&(data))>>17)
#define UMSK_ISR_GP0DA_INT15_shift                                                   (16)
#define UMSK_ISR_GP0DA_INT15_mask                                                    (0x00010000)
#define UMSK_ISR_GP0DA_INT15(data)                                                   (0x00010000&((data)<<16))
#define UMSK_ISR_GP0DA_INT15_src(data)                                               ((0x00010000&(data))>>16)
#define UMSK_ISR_GP0DA_get_INT15(data)                                               ((0x00010000&(data))>>16)
#define UMSK_ISR_GP0DA_INT14_shift                                                   (15)
#define UMSK_ISR_GP0DA_INT14_mask                                                    (0x00008000)
#define UMSK_ISR_GP0DA_INT14(data)                                                   (0x00008000&((data)<<15))
#define UMSK_ISR_GP0DA_INT14_src(data)                                               ((0x00008000&(data))>>15)
#define UMSK_ISR_GP0DA_get_INT14(data)                                               ((0x00008000&(data))>>15)
#define UMSK_ISR_GP0DA_INT13_shift                                                   (14)
#define UMSK_ISR_GP0DA_INT13_mask                                                    (0x00004000)
#define UMSK_ISR_GP0DA_INT13(data)                                                   (0x00004000&((data)<<14))
#define UMSK_ISR_GP0DA_INT13_src(data)                                               ((0x00004000&(data))>>14)
#define UMSK_ISR_GP0DA_get_INT13(data)                                               ((0x00004000&(data))>>14)
#define UMSK_ISR_GP0DA_INT12_shift                                                   (13)
#define UMSK_ISR_GP0DA_INT12_mask                                                    (0x00002000)
#define UMSK_ISR_GP0DA_INT12(data)                                                   (0x00002000&((data)<<13))
#define UMSK_ISR_GP0DA_INT12_src(data)                                               ((0x00002000&(data))>>13)
#define UMSK_ISR_GP0DA_get_INT12(data)                                               ((0x00002000&(data))>>13)
#define UMSK_ISR_GP0DA_INT11_shift                                                   (12)
#define UMSK_ISR_GP0DA_INT11_mask                                                    (0x00001000)
#define UMSK_ISR_GP0DA_INT11(data)                                                   (0x00001000&((data)<<12))
#define UMSK_ISR_GP0DA_INT11_src(data)                                               ((0x00001000&(data))>>12)
#define UMSK_ISR_GP0DA_get_INT11(data)                                               ((0x00001000&(data))>>12)
#define UMSK_ISR_GP0DA_INT10_shift                                                   (11)
#define UMSK_ISR_GP0DA_INT10_mask                                                    (0x00000800)
#define UMSK_ISR_GP0DA_INT10(data)                                                   (0x00000800&((data)<<11))
#define UMSK_ISR_GP0DA_INT10_src(data)                                               ((0x00000800&(data))>>11)
#define UMSK_ISR_GP0DA_get_INT10(data)                                               ((0x00000800&(data))>>11)
#define UMSK_ISR_GP0DA_INT9_shift                                                    (10)
#define UMSK_ISR_GP0DA_INT9_mask                                                     (0x00000400)
#define UMSK_ISR_GP0DA_INT9(data)                                                    (0x00000400&((data)<<10))
#define UMSK_ISR_GP0DA_INT9_src(data)                                                ((0x00000400&(data))>>10)
#define UMSK_ISR_GP0DA_get_INT9(data)                                                ((0x00000400&(data))>>10)
#define UMSK_ISR_GP0DA_INT8_shift                                                    (9)
#define UMSK_ISR_GP0DA_INT8_mask                                                     (0x00000200)
#define UMSK_ISR_GP0DA_INT8(data)                                                    (0x00000200&((data)<<9))
#define UMSK_ISR_GP0DA_INT8_src(data)                                                ((0x00000200&(data))>>9)
#define UMSK_ISR_GP0DA_get_INT8(data)                                                ((0x00000200&(data))>>9)
#define UMSK_ISR_GP0DA_INT7_shift                                                    (8)
#define UMSK_ISR_GP0DA_INT7_mask                                                     (0x00000100)
#define UMSK_ISR_GP0DA_INT7(data)                                                    (0x00000100&((data)<<8))
#define UMSK_ISR_GP0DA_INT7_src(data)                                                ((0x00000100&(data))>>8)
#define UMSK_ISR_GP0DA_get_INT7(data)                                                ((0x00000100&(data))>>8)
#define UMSK_ISR_GP0DA_INT6_shift                                                    (7)
#define UMSK_ISR_GP0DA_INT6_mask                                                     (0x00000080)
#define UMSK_ISR_GP0DA_INT6(data)                                                    (0x00000080&((data)<<7))
#define UMSK_ISR_GP0DA_INT6_src(data)                                                ((0x00000080&(data))>>7)
#define UMSK_ISR_GP0DA_get_INT6(data)                                                ((0x00000080&(data))>>7)
#define UMSK_ISR_GP0DA_INT5_shift                                                    (6)
#define UMSK_ISR_GP0DA_INT5_mask                                                     (0x00000040)
#define UMSK_ISR_GP0DA_INT5(data)                                                    (0x00000040&((data)<<6))
#define UMSK_ISR_GP0DA_INT5_src(data)                                                ((0x00000040&(data))>>6)
#define UMSK_ISR_GP0DA_get_INT5(data)                                                ((0x00000040&(data))>>6)
#define UMSK_ISR_GP0DA_INT4_shift                                                    (5)
#define UMSK_ISR_GP0DA_INT4_mask                                                     (0x00000020)
#define UMSK_ISR_GP0DA_INT4(data)                                                    (0x00000020&((data)<<5))
#define UMSK_ISR_GP0DA_INT4_src(data)                                                ((0x00000020&(data))>>5)
#define UMSK_ISR_GP0DA_get_INT4(data)                                                ((0x00000020&(data))>>5)
#define UMSK_ISR_GP0DA_INT3_shift                                                    (4)
#define UMSK_ISR_GP0DA_INT3_mask                                                     (0x00000010)
#define UMSK_ISR_GP0DA_INT3(data)                                                    (0x00000010&((data)<<4))
#define UMSK_ISR_GP0DA_INT3_src(data)                                                ((0x00000010&(data))>>4)
#define UMSK_ISR_GP0DA_get_INT3(data)                                                ((0x00000010&(data))>>4)
#define UMSK_ISR_GP0DA_INT2_shift                                                    (3)
#define UMSK_ISR_GP0DA_INT2_mask                                                     (0x00000008)
#define UMSK_ISR_GP0DA_INT2(data)                                                    (0x00000008&((data)<<3))
#define UMSK_ISR_GP0DA_INT2_src(data)                                                ((0x00000008&(data))>>3)
#define UMSK_ISR_GP0DA_get_INT2(data)                                                ((0x00000008&(data))>>3)
#define UMSK_ISR_GP0DA_INT1_shift                                                    (2)
#define UMSK_ISR_GP0DA_INT1_mask                                                     (0x00000004)
#define UMSK_ISR_GP0DA_INT1(data)                                                    (0x00000004&((data)<<2))
#define UMSK_ISR_GP0DA_INT1_src(data)                                                ((0x00000004&(data))>>2)
#define UMSK_ISR_GP0DA_get_INT1(data)                                                ((0x00000004&(data))>>2)
#define UMSK_ISR_GP0DA_INT0_shift                                                    (1)
#define UMSK_ISR_GP0DA_INT0_mask                                                     (0x00000002)
#define UMSK_ISR_GP0DA_INT0(data)                                                    (0x00000002&((data)<<1))
#define UMSK_ISR_GP0DA_INT0_src(data)                                                ((0x00000002&(data))>>1)
#define UMSK_ISR_GP0DA_get_INT0(data)                                                ((0x00000002&(data))>>1)
#define UMSK_ISR_GP0DA_write_data_shift                                              (0)
#define UMSK_ISR_GP0DA_write_data_mask                                               (0x00000001)
#define UMSK_ISR_GP0DA_write_data(data)                                              (0x00000001&((data)<<0))
#define UMSK_ISR_GP0DA_write_data_src(data)                                          ((0x00000001&(data))>>0)
#define UMSK_ISR_GP0DA_get_write_data(data)                                          ((0x00000001&(data))>>0)


#define UMSK_ISR_GP1DA                                                               0x1801B05C
#define UMSK_ISR_GP1DA_reg_addr                                                      "0xB801B05C"
#define UMSK_ISR_GP1DA_reg                                                           0xB801B05C
#define set_UMSK_ISR_GP1DA_reg(data)   (*((volatile unsigned int*) UMSK_ISR_GP1DA_reg)=data)
#define get_UMSK_ISR_GP1DA_reg   (*((volatile unsigned int*) UMSK_ISR_GP1DA_reg))
#define UMSK_ISR_GP1DA_inst_adr                                                      "0x0017"
#define UMSK_ISR_GP1DA_inst                                                          0x0017
#define UMSK_ISR_GP1DA_INT61_shift                                                   (31)
#define UMSK_ISR_GP1DA_INT61_mask                                                    (0x80000000)
#define UMSK_ISR_GP1DA_INT61(data)                                                   (0x80000000&((data)<<31))
#define UMSK_ISR_GP1DA_INT61_src(data)                                               ((0x80000000&(data))>>31)
#define UMSK_ISR_GP1DA_get_INT61(data)                                               ((0x80000000&(data))>>31)
#define UMSK_ISR_GP1DA_INT60_shift                                                   (30)
#define UMSK_ISR_GP1DA_INT60_mask                                                    (0x40000000)
#define UMSK_ISR_GP1DA_INT60(data)                                                   (0x40000000&((data)<<30))
#define UMSK_ISR_GP1DA_INT60_src(data)                                               ((0x40000000&(data))>>30)
#define UMSK_ISR_GP1DA_get_INT60(data)                                               ((0x40000000&(data))>>30)
#define UMSK_ISR_GP1DA_INT59_shift                                                   (29)
#define UMSK_ISR_GP1DA_INT59_mask                                                    (0x20000000)
#define UMSK_ISR_GP1DA_INT59(data)                                                   (0x20000000&((data)<<29))
#define UMSK_ISR_GP1DA_INT59_src(data)                                               ((0x20000000&(data))>>29)
#define UMSK_ISR_GP1DA_get_INT59(data)                                               ((0x20000000&(data))>>29)
#define UMSK_ISR_GP1DA_INT58_shift                                                   (28)
#define UMSK_ISR_GP1DA_INT58_mask                                                    (0x10000000)
#define UMSK_ISR_GP1DA_INT58(data)                                                   (0x10000000&((data)<<28))
#define UMSK_ISR_GP1DA_INT58_src(data)                                               ((0x10000000&(data))>>28)
#define UMSK_ISR_GP1DA_get_INT58(data)                                               ((0x10000000&(data))>>28)
#define UMSK_ISR_GP1DA_INT57_shift                                                   (27)
#define UMSK_ISR_GP1DA_INT57_mask                                                    (0x08000000)
#define UMSK_ISR_GP1DA_INT57(data)                                                   (0x08000000&((data)<<27))
#define UMSK_ISR_GP1DA_INT57_src(data)                                               ((0x08000000&(data))>>27)
#define UMSK_ISR_GP1DA_get_INT57(data)                                               ((0x08000000&(data))>>27)
#define UMSK_ISR_GP1DA_INT56_shift                                                   (26)
#define UMSK_ISR_GP1DA_INT56_mask                                                    (0x04000000)
#define UMSK_ISR_GP1DA_INT56(data)                                                   (0x04000000&((data)<<26))
#define UMSK_ISR_GP1DA_INT56_src(data)                                               ((0x04000000&(data))>>26)
#define UMSK_ISR_GP1DA_get_INT56(data)                                               ((0x04000000&(data))>>26)
#define UMSK_ISR_GP1DA_INT55_shift                                                   (25)
#define UMSK_ISR_GP1DA_INT55_mask                                                    (0x02000000)
#define UMSK_ISR_GP1DA_INT55(data)                                                   (0x02000000&((data)<<25))
#define UMSK_ISR_GP1DA_INT55_src(data)                                               ((0x02000000&(data))>>25)
#define UMSK_ISR_GP1DA_get_INT55(data)                                               ((0x02000000&(data))>>25)
#define UMSK_ISR_GP1DA_INT54_shift                                                   (24)
#define UMSK_ISR_GP1DA_INT54_mask                                                    (0x01000000)
#define UMSK_ISR_GP1DA_INT54(data)                                                   (0x01000000&((data)<<24))
#define UMSK_ISR_GP1DA_INT54_src(data)                                               ((0x01000000&(data))>>24)
#define UMSK_ISR_GP1DA_get_INT54(data)                                               ((0x01000000&(data))>>24)
#define UMSK_ISR_GP1DA_INT53_shift                                                   (23)
#define UMSK_ISR_GP1DA_INT53_mask                                                    (0x00800000)
#define UMSK_ISR_GP1DA_INT53(data)                                                   (0x00800000&((data)<<23))
#define UMSK_ISR_GP1DA_INT53_src(data)                                               ((0x00800000&(data))>>23)
#define UMSK_ISR_GP1DA_get_INT53(data)                                               ((0x00800000&(data))>>23)
#define UMSK_ISR_GP1DA_INT52_shift                                                   (22)
#define UMSK_ISR_GP1DA_INT52_mask                                                    (0x00400000)
#define UMSK_ISR_GP1DA_INT52(data)                                                   (0x00400000&((data)<<22))
#define UMSK_ISR_GP1DA_INT52_src(data)                                               ((0x00400000&(data))>>22)
#define UMSK_ISR_GP1DA_get_INT52(data)                                               ((0x00400000&(data))>>22)
#define UMSK_ISR_GP1DA_INT51_shift                                                   (21)
#define UMSK_ISR_GP1DA_INT51_mask                                                    (0x00200000)
#define UMSK_ISR_GP1DA_INT51(data)                                                   (0x00200000&((data)<<21))
#define UMSK_ISR_GP1DA_INT51_src(data)                                               ((0x00200000&(data))>>21)
#define UMSK_ISR_GP1DA_get_INT51(data)                                               ((0x00200000&(data))>>21)
#define UMSK_ISR_GP1DA_INT50_shift                                                   (20)
#define UMSK_ISR_GP1DA_INT50_mask                                                    (0x00100000)
#define UMSK_ISR_GP1DA_INT50(data)                                                   (0x00100000&((data)<<20))
#define UMSK_ISR_GP1DA_INT50_src(data)                                               ((0x00100000&(data))>>20)
#define UMSK_ISR_GP1DA_get_INT50(data)                                               ((0x00100000&(data))>>20)
#define UMSK_ISR_GP1DA_INT49_shift                                                   (19)
#define UMSK_ISR_GP1DA_INT49_mask                                                    (0x00080000)
#define UMSK_ISR_GP1DA_INT49(data)                                                   (0x00080000&((data)<<19))
#define UMSK_ISR_GP1DA_INT49_src(data)                                               ((0x00080000&(data))>>19)
#define UMSK_ISR_GP1DA_get_INT49(data)                                               ((0x00080000&(data))>>19)
#define UMSK_ISR_GP1DA_INT48_shift                                                   (18)
#define UMSK_ISR_GP1DA_INT48_mask                                                    (0x00040000)
#define UMSK_ISR_GP1DA_INT48(data)                                                   (0x00040000&((data)<<18))
#define UMSK_ISR_GP1DA_INT48_src(data)                                               ((0x00040000&(data))>>18)
#define UMSK_ISR_GP1DA_get_INT48(data)                                               ((0x00040000&(data))>>18)
#define UMSK_ISR_GP1DA_INT47_shift                                                   (17)
#define UMSK_ISR_GP1DA_INT47_mask                                                    (0x00020000)
#define UMSK_ISR_GP1DA_INT47(data)                                                   (0x00020000&((data)<<17))
#define UMSK_ISR_GP1DA_INT47_src(data)                                               ((0x00020000&(data))>>17)
#define UMSK_ISR_GP1DA_get_INT47(data)                                               ((0x00020000&(data))>>17)
#define UMSK_ISR_GP1DA_INT46_shift                                                   (16)
#define UMSK_ISR_GP1DA_INT46_mask                                                    (0x00010000)
#define UMSK_ISR_GP1DA_INT46(data)                                                   (0x00010000&((data)<<16))
#define UMSK_ISR_GP1DA_INT46_src(data)                                               ((0x00010000&(data))>>16)
#define UMSK_ISR_GP1DA_get_INT46(data)                                               ((0x00010000&(data))>>16)
#define UMSK_ISR_GP1DA_INT45_shift                                                   (15)
#define UMSK_ISR_GP1DA_INT45_mask                                                    (0x00008000)
#define UMSK_ISR_GP1DA_INT45(data)                                                   (0x00008000&((data)<<15))
#define UMSK_ISR_GP1DA_INT45_src(data)                                               ((0x00008000&(data))>>15)
#define UMSK_ISR_GP1DA_get_INT45(data)                                               ((0x00008000&(data))>>15)
#define UMSK_ISR_GP1DA_INT44_shift                                                   (14)
#define UMSK_ISR_GP1DA_INT44_mask                                                    (0x00004000)
#define UMSK_ISR_GP1DA_INT44(data)                                                   (0x00004000&((data)<<14))
#define UMSK_ISR_GP1DA_INT44_src(data)                                               ((0x00004000&(data))>>14)
#define UMSK_ISR_GP1DA_get_INT44(data)                                               ((0x00004000&(data))>>14)
#define UMSK_ISR_GP1DA_INT43_shift                                                   (13)
#define UMSK_ISR_GP1DA_INT43_mask                                                    (0x00002000)
#define UMSK_ISR_GP1DA_INT43(data)                                                   (0x00002000&((data)<<13))
#define UMSK_ISR_GP1DA_INT43_src(data)                                               ((0x00002000&(data))>>13)
#define UMSK_ISR_GP1DA_get_INT43(data)                                               ((0x00002000&(data))>>13)
#define UMSK_ISR_GP1DA_INT42_shift                                                   (12)
#define UMSK_ISR_GP1DA_INT42_mask                                                    (0x00001000)
#define UMSK_ISR_GP1DA_INT42(data)                                                   (0x00001000&((data)<<12))
#define UMSK_ISR_GP1DA_INT42_src(data)                                               ((0x00001000&(data))>>12)
#define UMSK_ISR_GP1DA_get_INT42(data)                                               ((0x00001000&(data))>>12)
#define UMSK_ISR_GP1DA_INT41_shift                                                   (11)
#define UMSK_ISR_GP1DA_INT41_mask                                                    (0x00000800)
#define UMSK_ISR_GP1DA_INT41(data)                                                   (0x00000800&((data)<<11))
#define UMSK_ISR_GP1DA_INT41_src(data)                                               ((0x00000800&(data))>>11)
#define UMSK_ISR_GP1DA_get_INT41(data)                                               ((0x00000800&(data))>>11)
#define UMSK_ISR_GP1DA_INT40_shift                                                   (10)
#define UMSK_ISR_GP1DA_INT40_mask                                                    (0x00000400)
#define UMSK_ISR_GP1DA_INT40(data)                                                   (0x00000400&((data)<<10))
#define UMSK_ISR_GP1DA_INT40_src(data)                                               ((0x00000400&(data))>>10)
#define UMSK_ISR_GP1DA_get_INT40(data)                                               ((0x00000400&(data))>>10)
#define UMSK_ISR_GP1DA_INT39_shift                                                   (9)
#define UMSK_ISR_GP1DA_INT39_mask                                                    (0x00000200)
#define UMSK_ISR_GP1DA_INT39(data)                                                   (0x00000200&((data)<<9))
#define UMSK_ISR_GP1DA_INT39_src(data)                                               ((0x00000200&(data))>>9)
#define UMSK_ISR_GP1DA_get_INT39(data)                                               ((0x00000200&(data))>>9)
#define UMSK_ISR_GP1DA_INT38_shift                                                   (8)
#define UMSK_ISR_GP1DA_INT38_mask                                                    (0x00000100)
#define UMSK_ISR_GP1DA_INT38(data)                                                   (0x00000100&((data)<<8))
#define UMSK_ISR_GP1DA_INT38_src(data)                                               ((0x00000100&(data))>>8)
#define UMSK_ISR_GP1DA_get_INT38(data)                                               ((0x00000100&(data))>>8)
#define UMSK_ISR_GP1DA_INT37_shift                                                   (7)
#define UMSK_ISR_GP1DA_INT37_mask                                                    (0x00000080)
#define UMSK_ISR_GP1DA_INT37(data)                                                   (0x00000080&((data)<<7))
#define UMSK_ISR_GP1DA_INT37_src(data)                                               ((0x00000080&(data))>>7)
#define UMSK_ISR_GP1DA_get_INT37(data)                                               ((0x00000080&(data))>>7)
#define UMSK_ISR_GP1DA_INT36_shift                                                   (6)
#define UMSK_ISR_GP1DA_INT36_mask                                                    (0x00000040)
#define UMSK_ISR_GP1DA_INT36(data)                                                   (0x00000040&((data)<<6))
#define UMSK_ISR_GP1DA_INT36_src(data)                                               ((0x00000040&(data))>>6)
#define UMSK_ISR_GP1DA_get_INT36(data)                                               ((0x00000040&(data))>>6)
#define UMSK_ISR_GP1DA_INT35_shift                                                   (5)
#define UMSK_ISR_GP1DA_INT35_mask                                                    (0x00000020)
#define UMSK_ISR_GP1DA_INT35(data)                                                   (0x00000020&((data)<<5))
#define UMSK_ISR_GP1DA_INT35_src(data)                                               ((0x00000020&(data))>>5)
#define UMSK_ISR_GP1DA_get_INT35(data)                                               ((0x00000020&(data))>>5)
#define UMSK_ISR_GP1DA_INT34_shift                                                   (4)
#define UMSK_ISR_GP1DA_INT34_mask                                                    (0x00000010)
#define UMSK_ISR_GP1DA_INT34(data)                                                   (0x00000010&((data)<<4))
#define UMSK_ISR_GP1DA_INT34_src(data)                                               ((0x00000010&(data))>>4)
#define UMSK_ISR_GP1DA_get_INT34(data)                                               ((0x00000010&(data))>>4)
#define UMSK_ISR_GP1DA_INT33_shift                                                   (3)
#define UMSK_ISR_GP1DA_INT33_mask                                                    (0x00000008)
#define UMSK_ISR_GP1DA_INT33(data)                                                   (0x00000008&((data)<<3))
#define UMSK_ISR_GP1DA_INT33_src(data)                                               ((0x00000008&(data))>>3)
#define UMSK_ISR_GP1DA_get_INT33(data)                                               ((0x00000008&(data))>>3)
#define UMSK_ISR_GP1DA_INT32_shift                                                   (2)
#define UMSK_ISR_GP1DA_INT32_mask                                                    (0x00000004)
#define UMSK_ISR_GP1DA_INT32(data)                                                   (0x00000004&((data)<<2))
#define UMSK_ISR_GP1DA_INT32_src(data)                                               ((0x00000004&(data))>>2)
#define UMSK_ISR_GP1DA_get_INT32(data)                                               ((0x00000004&(data))>>2)
#define UMSK_ISR_GP1DA_INT31_shift                                                   (1)
#define UMSK_ISR_GP1DA_INT31_mask                                                    (0x00000002)
#define UMSK_ISR_GP1DA_INT31(data)                                                   (0x00000002&((data)<<1))
#define UMSK_ISR_GP1DA_INT31_src(data)                                               ((0x00000002&(data))>>1)
#define UMSK_ISR_GP1DA_get_INT31(data)                                               ((0x00000002&(data))>>1)
#define UMSK_ISR_GP1DA_write_data_shift                                              (0)
#define UMSK_ISR_GP1DA_write_data_mask                                               (0x00000001)
#define UMSK_ISR_GP1DA_write_data(data)                                              (0x00000001&((data)<<0))
#define UMSK_ISR_GP1DA_write_data_src(data)                                          ((0x00000001&(data))>>0)
#define UMSK_ISR_GP1DA_get_write_data(data)                                          ((0x00000001&(data))>>0)


#define UMSK_ISR_GP2DA                                                               0x1801B060
#define UMSK_ISR_GP2DA_reg_addr                                                      "0xB801B060"
#define UMSK_ISR_GP2DA_reg                                                           0xB801B060
#define set_UMSK_ISR_GP2DA_reg(data)   (*((volatile unsigned int*) UMSK_ISR_GP2DA_reg)=data)
#define get_UMSK_ISR_GP2DA_reg   (*((volatile unsigned int*) UMSK_ISR_GP2DA_reg))
#define UMSK_ISR_GP2DA_inst_adr                                                      "0x0018"
#define UMSK_ISR_GP2DA_inst                                                          0x0018
#define UMSK_ISR_GP2DA_INT92_shift                                                   (31)
#define UMSK_ISR_GP2DA_INT92_mask                                                    (0x80000000)
#define UMSK_ISR_GP2DA_INT92(data)                                                   (0x80000000&((data)<<31))
#define UMSK_ISR_GP2DA_INT92_src(data)                                               ((0x80000000&(data))>>31)
#define UMSK_ISR_GP2DA_get_INT92(data)                                               ((0x80000000&(data))>>31)
#define UMSK_ISR_GP2DA_INT91_shift                                                   (30)
#define UMSK_ISR_GP2DA_INT91_mask                                                    (0x40000000)
#define UMSK_ISR_GP2DA_INT91(data)                                                   (0x40000000&((data)<<30))
#define UMSK_ISR_GP2DA_INT91_src(data)                                               ((0x40000000&(data))>>30)
#define UMSK_ISR_GP2DA_get_INT91(data)                                               ((0x40000000&(data))>>30)
#define UMSK_ISR_GP2DA_INT90_shift                                                   (29)
#define UMSK_ISR_GP2DA_INT90_mask                                                    (0x20000000)
#define UMSK_ISR_GP2DA_INT90(data)                                                   (0x20000000&((data)<<29))
#define UMSK_ISR_GP2DA_INT90_src(data)                                               ((0x20000000&(data))>>29)
#define UMSK_ISR_GP2DA_get_INT90(data)                                               ((0x20000000&(data))>>29)
#define UMSK_ISR_GP2DA_INT89_shift                                                   (28)
#define UMSK_ISR_GP2DA_INT89_mask                                                    (0x10000000)
#define UMSK_ISR_GP2DA_INT89(data)                                                   (0x10000000&((data)<<28))
#define UMSK_ISR_GP2DA_INT89_src(data)                                               ((0x10000000&(data))>>28)
#define UMSK_ISR_GP2DA_get_INT89(data)                                               ((0x10000000&(data))>>28)
#define UMSK_ISR_GP2DA_INT88_shift                                                   (27)
#define UMSK_ISR_GP2DA_INT88_mask                                                    (0x08000000)
#define UMSK_ISR_GP2DA_INT88(data)                                                   (0x08000000&((data)<<27))
#define UMSK_ISR_GP2DA_INT88_src(data)                                               ((0x08000000&(data))>>27)
#define UMSK_ISR_GP2DA_get_INT88(data)                                               ((0x08000000&(data))>>27)
#define UMSK_ISR_GP2DA_INT87_shift                                                   (26)
#define UMSK_ISR_GP2DA_INT87_mask                                                    (0x04000000)
#define UMSK_ISR_GP2DA_INT87(data)                                                   (0x04000000&((data)<<26))
#define UMSK_ISR_GP2DA_INT87_src(data)                                               ((0x04000000&(data))>>26)
#define UMSK_ISR_GP2DA_get_INT87(data)                                               ((0x04000000&(data))>>26)
#define UMSK_ISR_GP2DA_INT86_shift                                                   (25)
#define UMSK_ISR_GP2DA_INT86_mask                                                    (0x02000000)
#define UMSK_ISR_GP2DA_INT86(data)                                                   (0x02000000&((data)<<25))
#define UMSK_ISR_GP2DA_INT86_src(data)                                               ((0x02000000&(data))>>25)
#define UMSK_ISR_GP2DA_get_INT86(data)                                               ((0x02000000&(data))>>25)
#define UMSK_ISR_GP2DA_INT85_shift                                                   (24)
#define UMSK_ISR_GP2DA_INT85_mask                                                    (0x01000000)
#define UMSK_ISR_GP2DA_INT85(data)                                                   (0x01000000&((data)<<24))
#define UMSK_ISR_GP2DA_INT85_src(data)                                               ((0x01000000&(data))>>24)
#define UMSK_ISR_GP2DA_get_INT85(data)                                               ((0x01000000&(data))>>24)
#define UMSK_ISR_GP2DA_INT84_shift                                                   (23)
#define UMSK_ISR_GP2DA_INT84_mask                                                    (0x00800000)
#define UMSK_ISR_GP2DA_INT84(data)                                                   (0x00800000&((data)<<23))
#define UMSK_ISR_GP2DA_INT84_src(data)                                               ((0x00800000&(data))>>23)
#define UMSK_ISR_GP2DA_get_INT84(data)                                               ((0x00800000&(data))>>23)
#define UMSK_ISR_GP2DA_INT83_shift                                                   (22)
#define UMSK_ISR_GP2DA_INT83_mask                                                    (0x00400000)
#define UMSK_ISR_GP2DA_INT83(data)                                                   (0x00400000&((data)<<22))
#define UMSK_ISR_GP2DA_INT83_src(data)                                               ((0x00400000&(data))>>22)
#define UMSK_ISR_GP2DA_get_INT83(data)                                               ((0x00400000&(data))>>22)
#define UMSK_ISR_GP2DA_INT82_shift                                                   (21)
#define UMSK_ISR_GP2DA_INT82_mask                                                    (0x00200000)
#define UMSK_ISR_GP2DA_INT82(data)                                                   (0x00200000&((data)<<21))
#define UMSK_ISR_GP2DA_INT82_src(data)                                               ((0x00200000&(data))>>21)
#define UMSK_ISR_GP2DA_get_INT82(data)                                               ((0x00200000&(data))>>21)
#define UMSK_ISR_GP2DA_INT81_shift                                                   (20)
#define UMSK_ISR_GP2DA_INT81_mask                                                    (0x00100000)
#define UMSK_ISR_GP2DA_INT81(data)                                                   (0x00100000&((data)<<20))
#define UMSK_ISR_GP2DA_INT81_src(data)                                               ((0x00100000&(data))>>20)
#define UMSK_ISR_GP2DA_get_INT81(data)                                               ((0x00100000&(data))>>20)
#define UMSK_ISR_GP2DA_INT80_shift                                                   (19)
#define UMSK_ISR_GP2DA_INT80_mask                                                    (0x00080000)
#define UMSK_ISR_GP2DA_INT80(data)                                                   (0x00080000&((data)<<19))
#define UMSK_ISR_GP2DA_INT80_src(data)                                               ((0x00080000&(data))>>19)
#define UMSK_ISR_GP2DA_get_INT80(data)                                               ((0x00080000&(data))>>19)
#define UMSK_ISR_GP2DA_INT79_shift                                                   (18)
#define UMSK_ISR_GP2DA_INT79_mask                                                    (0x00040000)
#define UMSK_ISR_GP2DA_INT79(data)                                                   (0x00040000&((data)<<18))
#define UMSK_ISR_GP2DA_INT79_src(data)                                               ((0x00040000&(data))>>18)
#define UMSK_ISR_GP2DA_get_INT79(data)                                               ((0x00040000&(data))>>18)
#define UMSK_ISR_GP2DA_INT78_shift                                                   (17)
#define UMSK_ISR_GP2DA_INT78_mask                                                    (0x00020000)
#define UMSK_ISR_GP2DA_INT78(data)                                                   (0x00020000&((data)<<17))
#define UMSK_ISR_GP2DA_INT78_src(data)                                               ((0x00020000&(data))>>17)
#define UMSK_ISR_GP2DA_get_INT78(data)                                               ((0x00020000&(data))>>17)
#define UMSK_ISR_GP2DA_INT77_shift                                                   (16)
#define UMSK_ISR_GP2DA_INT77_mask                                                    (0x00010000)
#define UMSK_ISR_GP2DA_INT77(data)                                                   (0x00010000&((data)<<16))
#define UMSK_ISR_GP2DA_INT77_src(data)                                               ((0x00010000&(data))>>16)
#define UMSK_ISR_GP2DA_get_INT77(data)                                               ((0x00010000&(data))>>16)
#define UMSK_ISR_GP2DA_INT76_shift                                                   (15)
#define UMSK_ISR_GP2DA_INT76_mask                                                    (0x00008000)
#define UMSK_ISR_GP2DA_INT76(data)                                                   (0x00008000&((data)<<15))
#define UMSK_ISR_GP2DA_INT76_src(data)                                               ((0x00008000&(data))>>15)
#define UMSK_ISR_GP2DA_get_INT76(data)                                               ((0x00008000&(data))>>15)
#define UMSK_ISR_GP2DA_INT75_shift                                                   (14)
#define UMSK_ISR_GP2DA_INT75_mask                                                    (0x00004000)
#define UMSK_ISR_GP2DA_INT75(data)                                                   (0x00004000&((data)<<14))
#define UMSK_ISR_GP2DA_INT75_src(data)                                               ((0x00004000&(data))>>14)
#define UMSK_ISR_GP2DA_get_INT75(data)                                               ((0x00004000&(data))>>14)
#define UMSK_ISR_GP2DA_INT74_shift                                                   (13)
#define UMSK_ISR_GP2DA_INT74_mask                                                    (0x00002000)
#define UMSK_ISR_GP2DA_INT74(data)                                                   (0x00002000&((data)<<13))
#define UMSK_ISR_GP2DA_INT74_src(data)                                               ((0x00002000&(data))>>13)
#define UMSK_ISR_GP2DA_get_INT74(data)                                               ((0x00002000&(data))>>13)
#define UMSK_ISR_GP2DA_INT73_shift                                                   (12)
#define UMSK_ISR_GP2DA_INT73_mask                                                    (0x00001000)
#define UMSK_ISR_GP2DA_INT73(data)                                                   (0x00001000&((data)<<12))
#define UMSK_ISR_GP2DA_INT73_src(data)                                               ((0x00001000&(data))>>12)
#define UMSK_ISR_GP2DA_get_INT73(data)                                               ((0x00001000&(data))>>12)
#define UMSK_ISR_GP2DA_INT72_shift                                                   (11)
#define UMSK_ISR_GP2DA_INT72_mask                                                    (0x00000800)
#define UMSK_ISR_GP2DA_INT72(data)                                                   (0x00000800&((data)<<11))
#define UMSK_ISR_GP2DA_INT72_src(data)                                               ((0x00000800&(data))>>11)
#define UMSK_ISR_GP2DA_get_INT72(data)                                               ((0x00000800&(data))>>11)
#define UMSK_ISR_GP2DA_INT71_shift                                                   (10)
#define UMSK_ISR_GP2DA_INT71_mask                                                    (0x00000400)
#define UMSK_ISR_GP2DA_INT71(data)                                                   (0x00000400&((data)<<10))
#define UMSK_ISR_GP2DA_INT71_src(data)                                               ((0x00000400&(data))>>10)
#define UMSK_ISR_GP2DA_get_INT71(data)                                               ((0x00000400&(data))>>10)
#define UMSK_ISR_GP2DA_INT70_shift                                                   (9)
#define UMSK_ISR_GP2DA_INT70_mask                                                    (0x00000200)
#define UMSK_ISR_GP2DA_INT70(data)                                                   (0x00000200&((data)<<9))
#define UMSK_ISR_GP2DA_INT70_src(data)                                               ((0x00000200&(data))>>9)
#define UMSK_ISR_GP2DA_get_INT70(data)                                               ((0x00000200&(data))>>9)
#define UMSK_ISR_GP2DA_INT69_shift                                                   (8)
#define UMSK_ISR_GP2DA_INT69_mask                                                    (0x00000100)
#define UMSK_ISR_GP2DA_INT69(data)                                                   (0x00000100&((data)<<8))
#define UMSK_ISR_GP2DA_INT69_src(data)                                               ((0x00000100&(data))>>8)
#define UMSK_ISR_GP2DA_get_INT69(data)                                               ((0x00000100&(data))>>8)
#define UMSK_ISR_GP2DA_INT68_shift                                                   (7)
#define UMSK_ISR_GP2DA_INT68_mask                                                    (0x00000080)
#define UMSK_ISR_GP2DA_INT68(data)                                                   (0x00000080&((data)<<7))
#define UMSK_ISR_GP2DA_INT68_src(data)                                               ((0x00000080&(data))>>7)
#define UMSK_ISR_GP2DA_get_INT68(data)                                               ((0x00000080&(data))>>7)
#define UMSK_ISR_GP2DA_INT67_shift                                                   (6)
#define UMSK_ISR_GP2DA_INT67_mask                                                    (0x00000040)
#define UMSK_ISR_GP2DA_INT67(data)                                                   (0x00000040&((data)<<6))
#define UMSK_ISR_GP2DA_INT67_src(data)                                               ((0x00000040&(data))>>6)
#define UMSK_ISR_GP2DA_get_INT67(data)                                               ((0x00000040&(data))>>6)
#define UMSK_ISR_GP2DA_INT66_shift                                                   (5)
#define UMSK_ISR_GP2DA_INT66_mask                                                    (0x00000020)
#define UMSK_ISR_GP2DA_INT66(data)                                                   (0x00000020&((data)<<5))
#define UMSK_ISR_GP2DA_INT66_src(data)                                               ((0x00000020&(data))>>5)
#define UMSK_ISR_GP2DA_get_INT66(data)                                               ((0x00000020&(data))>>5)
#define UMSK_ISR_GP2DA_INT65_shift                                                   (4)
#define UMSK_ISR_GP2DA_INT65_mask                                                    (0x00000010)
#define UMSK_ISR_GP2DA_INT65(data)                                                   (0x00000010&((data)<<4))
#define UMSK_ISR_GP2DA_INT65_src(data)                                               ((0x00000010&(data))>>4)
#define UMSK_ISR_GP2DA_get_INT65(data)                                               ((0x00000010&(data))>>4)
#define UMSK_ISR_GP2DA_INT64_shift                                                   (3)
#define UMSK_ISR_GP2DA_INT64_mask                                                    (0x00000008)
#define UMSK_ISR_GP2DA_INT64(data)                                                   (0x00000008&((data)<<3))
#define UMSK_ISR_GP2DA_INT64_src(data)                                               ((0x00000008&(data))>>3)
#define UMSK_ISR_GP2DA_get_INT64(data)                                               ((0x00000008&(data))>>3)
#define UMSK_ISR_GP2DA_INT63_shift                                                   (2)
#define UMSK_ISR_GP2DA_INT63_mask                                                    (0x00000004)
#define UMSK_ISR_GP2DA_INT63(data)                                                   (0x00000004&((data)<<2))
#define UMSK_ISR_GP2DA_INT63_src(data)                                               ((0x00000004&(data))>>2)
#define UMSK_ISR_GP2DA_get_INT63(data)                                               ((0x00000004&(data))>>2)
#define UMSK_ISR_GP2DA_INT62_shift                                                   (1)
#define UMSK_ISR_GP2DA_INT62_mask                                                    (0x00000002)
#define UMSK_ISR_GP2DA_INT62(data)                                                   (0x00000002&((data)<<1))
#define UMSK_ISR_GP2DA_INT62_src(data)                                               ((0x00000002&(data))>>1)
#define UMSK_ISR_GP2DA_get_INT62(data)                                               ((0x00000002&(data))>>1)
#define UMSK_ISR_GP2DA_write_data_shift                                              (0)
#define UMSK_ISR_GP2DA_write_data_mask                                               (0x00000001)
#define UMSK_ISR_GP2DA_write_data(data)                                              (0x00000001&((data)<<0))
#define UMSK_ISR_GP2DA_write_data_src(data)                                          ((0x00000001&(data))>>0)
#define UMSK_ISR_GP2DA_get_write_data(data)                                          ((0x00000001&(data))>>0)


#define UMSK_ISR_GP3DA                                                               0x1801B064
#define UMSK_ISR_GP3DA_reg_addr                                                      "0xB801B064"
#define UMSK_ISR_GP3DA_reg                                                           0xB801B064
#define set_UMSK_ISR_GP3DA_reg(data)   (*((volatile unsigned int*) UMSK_ISR_GP3DA_reg)=data)
#define get_UMSK_ISR_GP3DA_reg   (*((volatile unsigned int*) UMSK_ISR_GP3DA_reg))
#define UMSK_ISR_GP3DA_inst_adr                                                      "0x0019"
#define UMSK_ISR_GP3DA_inst                                                          0x0019
#define UMSK_ISR_GP3DA_INT123_shift                                                  (31)
#define UMSK_ISR_GP3DA_INT123_mask                                                   (0x80000000)
#define UMSK_ISR_GP3DA_INT123(data)                                                  (0x80000000&((data)<<31))
#define UMSK_ISR_GP3DA_INT123_src(data)                                              ((0x80000000&(data))>>31)
#define UMSK_ISR_GP3DA_get_INT123(data)                                              ((0x80000000&(data))>>31)
#define UMSK_ISR_GP3DA_INT122_shift                                                  (30)
#define UMSK_ISR_GP3DA_INT122_mask                                                   (0x40000000)
#define UMSK_ISR_GP3DA_INT122(data)                                                  (0x40000000&((data)<<30))
#define UMSK_ISR_GP3DA_INT122_src(data)                                              ((0x40000000&(data))>>30)
#define UMSK_ISR_GP3DA_get_INT122(data)                                              ((0x40000000&(data))>>30)
#define UMSK_ISR_GP3DA_INT121_shift                                                  (29)
#define UMSK_ISR_GP3DA_INT121_mask                                                   (0x20000000)
#define UMSK_ISR_GP3DA_INT121(data)                                                  (0x20000000&((data)<<29))
#define UMSK_ISR_GP3DA_INT121_src(data)                                              ((0x20000000&(data))>>29)
#define UMSK_ISR_GP3DA_get_INT121(data)                                              ((0x20000000&(data))>>29)
#define UMSK_ISR_GP3DA_INT120_shift                                                  (28)
#define UMSK_ISR_GP3DA_INT120_mask                                                   (0x10000000)
#define UMSK_ISR_GP3DA_INT120(data)                                                  (0x10000000&((data)<<28))
#define UMSK_ISR_GP3DA_INT120_src(data)                                              ((0x10000000&(data))>>28)
#define UMSK_ISR_GP3DA_get_INT120(data)                                              ((0x10000000&(data))>>28)
#define UMSK_ISR_GP3DA_INT119_shift                                                  (27)
#define UMSK_ISR_GP3DA_INT119_mask                                                   (0x08000000)
#define UMSK_ISR_GP3DA_INT119(data)                                                  (0x08000000&((data)<<27))
#define UMSK_ISR_GP3DA_INT119_src(data)                                              ((0x08000000&(data))>>27)
#define UMSK_ISR_GP3DA_get_INT119(data)                                              ((0x08000000&(data))>>27)
#define UMSK_ISR_GP3DA_INT118_shift                                                  (26)
#define UMSK_ISR_GP3DA_INT118_mask                                                   (0x04000000)
#define UMSK_ISR_GP3DA_INT118(data)                                                  (0x04000000&((data)<<26))
#define UMSK_ISR_GP3DA_INT118_src(data)                                              ((0x04000000&(data))>>26)
#define UMSK_ISR_GP3DA_get_INT118(data)                                              ((0x04000000&(data))>>26)
#define UMSK_ISR_GP3DA_INT117_shift                                                  (25)
#define UMSK_ISR_GP3DA_INT117_mask                                                   (0x02000000)
#define UMSK_ISR_GP3DA_INT117(data)                                                  (0x02000000&((data)<<25))
#define UMSK_ISR_GP3DA_INT117_src(data)                                              ((0x02000000&(data))>>25)
#define UMSK_ISR_GP3DA_get_INT117(data)                                              ((0x02000000&(data))>>25)
#define UMSK_ISR_GP3DA_INT116_shift                                                  (24)
#define UMSK_ISR_GP3DA_INT116_mask                                                   (0x01000000)
#define UMSK_ISR_GP3DA_INT116(data)                                                  (0x01000000&((data)<<24))
#define UMSK_ISR_GP3DA_INT116_src(data)                                              ((0x01000000&(data))>>24)
#define UMSK_ISR_GP3DA_get_INT116(data)                                              ((0x01000000&(data))>>24)
#define UMSK_ISR_GP3DA_INT115_shift                                                  (23)
#define UMSK_ISR_GP3DA_INT115_mask                                                   (0x00800000)
#define UMSK_ISR_GP3DA_INT115(data)                                                  (0x00800000&((data)<<23))
#define UMSK_ISR_GP3DA_INT115_src(data)                                              ((0x00800000&(data))>>23)
#define UMSK_ISR_GP3DA_get_INT115(data)                                              ((0x00800000&(data))>>23)
#define UMSK_ISR_GP3DA_INT114_shift                                                  (22)
#define UMSK_ISR_GP3DA_INT114_mask                                                   (0x00400000)
#define UMSK_ISR_GP3DA_INT114(data)                                                  (0x00400000&((data)<<22))
#define UMSK_ISR_GP3DA_INT114_src(data)                                              ((0x00400000&(data))>>22)
#define UMSK_ISR_GP3DA_get_INT114(data)                                              ((0x00400000&(data))>>22)
#define UMSK_ISR_GP3DA_INT113_shift                                                  (21)
#define UMSK_ISR_GP3DA_INT113_mask                                                   (0x00200000)
#define UMSK_ISR_GP3DA_INT113(data)                                                  (0x00200000&((data)<<21))
#define UMSK_ISR_GP3DA_INT113_src(data)                                              ((0x00200000&(data))>>21)
#define UMSK_ISR_GP3DA_get_INT113(data)                                              ((0x00200000&(data))>>21)
#define UMSK_ISR_GP3DA_INT112_shift                                                  (20)
#define UMSK_ISR_GP3DA_INT112_mask                                                   (0x00100000)
#define UMSK_ISR_GP3DA_INT112(data)                                                  (0x00100000&((data)<<20))
#define UMSK_ISR_GP3DA_INT112_src(data)                                              ((0x00100000&(data))>>20)
#define UMSK_ISR_GP3DA_get_INT112(data)                                              ((0x00100000&(data))>>20)
#define UMSK_ISR_GP3DA_INT111_shift                                                  (19)
#define UMSK_ISR_GP3DA_INT111_mask                                                   (0x00080000)
#define UMSK_ISR_GP3DA_INT111(data)                                                  (0x00080000&((data)<<19))
#define UMSK_ISR_GP3DA_INT111_src(data)                                              ((0x00080000&(data))>>19)
#define UMSK_ISR_GP3DA_get_INT111(data)                                              ((0x00080000&(data))>>19)
#define UMSK_ISR_GP3DA_INT110_shift                                                  (18)
#define UMSK_ISR_GP3DA_INT110_mask                                                   (0x00040000)
#define UMSK_ISR_GP3DA_INT110(data)                                                  (0x00040000&((data)<<18))
#define UMSK_ISR_GP3DA_INT110_src(data)                                              ((0x00040000&(data))>>18)
#define UMSK_ISR_GP3DA_get_INT110(data)                                              ((0x00040000&(data))>>18)
#define UMSK_ISR_GP3DA_INT109_shift                                                  (17)
#define UMSK_ISR_GP3DA_INT109_mask                                                   (0x00020000)
#define UMSK_ISR_GP3DA_INT109(data)                                                  (0x00020000&((data)<<17))
#define UMSK_ISR_GP3DA_INT109_src(data)                                              ((0x00020000&(data))>>17)
#define UMSK_ISR_GP3DA_get_INT109(data)                                              ((0x00020000&(data))>>17)
#define UMSK_ISR_GP3DA_INT108_shift                                                  (16)
#define UMSK_ISR_GP3DA_INT108_mask                                                   (0x00010000)
#define UMSK_ISR_GP3DA_INT108(data)                                                  (0x00010000&((data)<<16))
#define UMSK_ISR_GP3DA_INT108_src(data)                                              ((0x00010000&(data))>>16)
#define UMSK_ISR_GP3DA_get_INT108(data)                                              ((0x00010000&(data))>>16)
#define UMSK_ISR_GP3DA_INT107_shift                                                  (15)
#define UMSK_ISR_GP3DA_INT107_mask                                                   (0x00008000)
#define UMSK_ISR_GP3DA_INT107(data)                                                  (0x00008000&((data)<<15))
#define UMSK_ISR_GP3DA_INT107_src(data)                                              ((0x00008000&(data))>>15)
#define UMSK_ISR_GP3DA_get_INT107(data)                                              ((0x00008000&(data))>>15)
#define UMSK_ISR_GP3DA_INT106_shift                                                  (14)
#define UMSK_ISR_GP3DA_INT106_mask                                                   (0x00004000)
#define UMSK_ISR_GP3DA_INT106(data)                                                  (0x00004000&((data)<<14))
#define UMSK_ISR_GP3DA_INT106_src(data)                                              ((0x00004000&(data))>>14)
#define UMSK_ISR_GP3DA_get_INT106(data)                                              ((0x00004000&(data))>>14)
#define UMSK_ISR_GP3DA_INT105_shift                                                  (13)
#define UMSK_ISR_GP3DA_INT105_mask                                                   (0x00002000)
#define UMSK_ISR_GP3DA_INT105(data)                                                  (0x00002000&((data)<<13))
#define UMSK_ISR_GP3DA_INT105_src(data)                                              ((0x00002000&(data))>>13)
#define UMSK_ISR_GP3DA_get_INT105(data)                                              ((0x00002000&(data))>>13)
#define UMSK_ISR_GP3DA_INT104_shift                                                  (12)
#define UMSK_ISR_GP3DA_INT104_mask                                                   (0x00001000)
#define UMSK_ISR_GP3DA_INT104(data)                                                  (0x00001000&((data)<<12))
#define UMSK_ISR_GP3DA_INT104_src(data)                                              ((0x00001000&(data))>>12)
#define UMSK_ISR_GP3DA_get_INT104(data)                                              ((0x00001000&(data))>>12)
#define UMSK_ISR_GP3DA_INT103_shift                                                  (11)
#define UMSK_ISR_GP3DA_INT103_mask                                                   (0x00000800)
#define UMSK_ISR_GP3DA_INT103(data)                                                  (0x00000800&((data)<<11))
#define UMSK_ISR_GP3DA_INT103_src(data)                                              ((0x00000800&(data))>>11)
#define UMSK_ISR_GP3DA_get_INT103(data)                                              ((0x00000800&(data))>>11)
#define UMSK_ISR_GP3DA_INT102_shift                                                  (10)
#define UMSK_ISR_GP3DA_INT102_mask                                                   (0x00000400)
#define UMSK_ISR_GP3DA_INT102(data)                                                  (0x00000400&((data)<<10))
#define UMSK_ISR_GP3DA_INT102_src(data)                                              ((0x00000400&(data))>>10)
#define UMSK_ISR_GP3DA_get_INT102(data)                                              ((0x00000400&(data))>>10)
#define UMSK_ISR_GP3DA_INT101_shift                                                  (9)
#define UMSK_ISR_GP3DA_INT101_mask                                                   (0x00000200)
#define UMSK_ISR_GP3DA_INT101(data)                                                  (0x00000200&((data)<<9))
#define UMSK_ISR_GP3DA_INT101_src(data)                                              ((0x00000200&(data))>>9)
#define UMSK_ISR_GP3DA_get_INT101(data)                                              ((0x00000200&(data))>>9)
#define UMSK_ISR_GP3DA_INT100_shift                                                  (8)
#define UMSK_ISR_GP3DA_INT100_mask                                                   (0x00000100)
#define UMSK_ISR_GP3DA_INT100(data)                                                  (0x00000100&((data)<<8))
#define UMSK_ISR_GP3DA_INT100_src(data)                                              ((0x00000100&(data))>>8)
#define UMSK_ISR_GP3DA_get_INT100(data)                                              ((0x00000100&(data))>>8)
#define UMSK_ISR_GP3DA_INT99_shift                                                   (7)
#define UMSK_ISR_GP3DA_INT99_mask                                                    (0x00000080)
#define UMSK_ISR_GP3DA_INT99(data)                                                   (0x00000080&((data)<<7))
#define UMSK_ISR_GP3DA_INT99_src(data)                                               ((0x00000080&(data))>>7)
#define UMSK_ISR_GP3DA_get_INT99(data)                                               ((0x00000080&(data))>>7)
#define UMSK_ISR_GP3DA_INT98_shift                                                   (6)
#define UMSK_ISR_GP3DA_INT98_mask                                                    (0x00000040)
#define UMSK_ISR_GP3DA_INT98(data)                                                   (0x00000040&((data)<<6))
#define UMSK_ISR_GP3DA_INT98_src(data)                                               ((0x00000040&(data))>>6)
#define UMSK_ISR_GP3DA_get_INT98(data)                                               ((0x00000040&(data))>>6)
#define UMSK_ISR_GP3DA_INT97_shift                                                   (5)
#define UMSK_ISR_GP3DA_INT97_mask                                                    (0x00000020)
#define UMSK_ISR_GP3DA_INT97(data)                                                   (0x00000020&((data)<<5))
#define UMSK_ISR_GP3DA_INT97_src(data)                                               ((0x00000020&(data))>>5)
#define UMSK_ISR_GP3DA_get_INT97(data)                                               ((0x00000020&(data))>>5)
#define UMSK_ISR_GP3DA_INT96_shift                                                   (4)
#define UMSK_ISR_GP3DA_INT96_mask                                                    (0x00000010)
#define UMSK_ISR_GP3DA_INT96(data)                                                   (0x00000010&((data)<<4))
#define UMSK_ISR_GP3DA_INT96_src(data)                                               ((0x00000010&(data))>>4)
#define UMSK_ISR_GP3DA_get_INT96(data)                                               ((0x00000010&(data))>>4)
#define UMSK_ISR_GP3DA_INT95_shift                                                   (3)
#define UMSK_ISR_GP3DA_INT95_mask                                                    (0x00000008)
#define UMSK_ISR_GP3DA_INT95(data)                                                   (0x00000008&((data)<<3))
#define UMSK_ISR_GP3DA_INT95_src(data)                                               ((0x00000008&(data))>>3)
#define UMSK_ISR_GP3DA_get_INT95(data)                                               ((0x00000008&(data))>>3)
#define UMSK_ISR_GP3DA_INT94_shift                                                   (2)
#define UMSK_ISR_GP3DA_INT94_mask                                                    (0x00000004)
#define UMSK_ISR_GP3DA_INT94(data)                                                   (0x00000004&((data)<<2))
#define UMSK_ISR_GP3DA_INT94_src(data)                                               ((0x00000004&(data))>>2)
#define UMSK_ISR_GP3DA_get_INT94(data)                                               ((0x00000004&(data))>>2)
#define UMSK_ISR_GP3DA_INT93_shift                                                   (1)
#define UMSK_ISR_GP3DA_INT93_mask                                                    (0x00000002)
#define UMSK_ISR_GP3DA_INT93(data)                                                   (0x00000002&((data)<<1))
#define UMSK_ISR_GP3DA_INT93_src(data)                                               ((0x00000002&(data))>>1)
#define UMSK_ISR_GP3DA_get_INT93(data)                                               ((0x00000002&(data))>>1)
#define UMSK_ISR_GP3DA_write_data_shift                                              (0)
#define UMSK_ISR_GP3DA_write_data_mask                                               (0x00000001)
#define UMSK_ISR_GP3DA_write_data(data)                                              (0x00000001&((data)<<0))
#define UMSK_ISR_GP3DA_write_data_src(data)                                          ((0x00000001&(data))>>0)
#define UMSK_ISR_GP3DA_get_write_data(data)                                          ((0x00000001&(data))>>0)


#define UMSK_ISR_GP4DA                                                               0x1801B068
#define UMSK_ISR_GP4DA_reg_addr                                                      "0xB801B068"
#define UMSK_ISR_GP4DA_reg                                                           0xB801B068
#define set_UMSK_ISR_GP4DA_reg(data)   (*((volatile unsigned int*) UMSK_ISR_GP4DA_reg)=data)
#define get_UMSK_ISR_GP4DA_reg   (*((volatile unsigned int*) UMSK_ISR_GP4DA_reg))
#define UMSK_ISR_GP4DA_inst_adr                                                      "0x001A"
#define UMSK_ISR_GP4DA_inst                                                          0x001A
#define UMSK_ISR_GP4DA_INT154_shift                                                  (31)
#define UMSK_ISR_GP4DA_INT154_mask                                                   (0x80000000)
#define UMSK_ISR_GP4DA_INT154(data)                                                  (0x80000000&((data)<<31))
#define UMSK_ISR_GP4DA_INT154_src(data)                                              ((0x80000000&(data))>>31)
#define UMSK_ISR_GP4DA_get_INT154(data)                                              ((0x80000000&(data))>>31)
#define UMSK_ISR_GP4DA_INT153_shift                                                  (30)
#define UMSK_ISR_GP4DA_INT153_mask                                                   (0x40000000)
#define UMSK_ISR_GP4DA_INT153(data)                                                  (0x40000000&((data)<<30))
#define UMSK_ISR_GP4DA_INT153_src(data)                                              ((0x40000000&(data))>>30)
#define UMSK_ISR_GP4DA_get_INT153(data)                                              ((0x40000000&(data))>>30)
#define UMSK_ISR_GP4DA_INT152_shift                                                  (29)
#define UMSK_ISR_GP4DA_INT152_mask                                                   (0x20000000)
#define UMSK_ISR_GP4DA_INT152(data)                                                  (0x20000000&((data)<<29))
#define UMSK_ISR_GP4DA_INT152_src(data)                                              ((0x20000000&(data))>>29)
#define UMSK_ISR_GP4DA_get_INT152(data)                                              ((0x20000000&(data))>>29)
#define UMSK_ISR_GP4DA_INT151_shift                                                  (28)
#define UMSK_ISR_GP4DA_INT151_mask                                                   (0x10000000)
#define UMSK_ISR_GP4DA_INT151(data)                                                  (0x10000000&((data)<<28))
#define UMSK_ISR_GP4DA_INT151_src(data)                                              ((0x10000000&(data))>>28)
#define UMSK_ISR_GP4DA_get_INT151(data)                                              ((0x10000000&(data))>>28)
#define UMSK_ISR_GP4DA_INT150_shift                                                  (27)
#define UMSK_ISR_GP4DA_INT150_mask                                                   (0x08000000)
#define UMSK_ISR_GP4DA_INT150(data)                                                  (0x08000000&((data)<<27))
#define UMSK_ISR_GP4DA_INT150_src(data)                                              ((0x08000000&(data))>>27)
#define UMSK_ISR_GP4DA_get_INT150(data)                                              ((0x08000000&(data))>>27)
#define UMSK_ISR_GP4DA_INT149_shift                                                  (26)
#define UMSK_ISR_GP4DA_INT149_mask                                                   (0x04000000)
#define UMSK_ISR_GP4DA_INT149(data)                                                  (0x04000000&((data)<<26))
#define UMSK_ISR_GP4DA_INT149_src(data)                                              ((0x04000000&(data))>>26)
#define UMSK_ISR_GP4DA_get_INT149(data)                                              ((0x04000000&(data))>>26)
#define UMSK_ISR_GP4DA_INT148_shift                                                  (25)
#define UMSK_ISR_GP4DA_INT148_mask                                                   (0x02000000)
#define UMSK_ISR_GP4DA_INT148(data)                                                  (0x02000000&((data)<<25))
#define UMSK_ISR_GP4DA_INT148_src(data)                                              ((0x02000000&(data))>>25)
#define UMSK_ISR_GP4DA_get_INT148(data)                                              ((0x02000000&(data))>>25)
#define UMSK_ISR_GP4DA_INT147_shift                                                  (24)
#define UMSK_ISR_GP4DA_INT147_mask                                                   (0x01000000)
#define UMSK_ISR_GP4DA_INT147(data)                                                  (0x01000000&((data)<<24))
#define UMSK_ISR_GP4DA_INT147_src(data)                                              ((0x01000000&(data))>>24)
#define UMSK_ISR_GP4DA_get_INT147(data)                                              ((0x01000000&(data))>>24)
#define UMSK_ISR_GP4DA_INT146_shift                                                  (23)
#define UMSK_ISR_GP4DA_INT146_mask                                                   (0x00800000)
#define UMSK_ISR_GP4DA_INT146(data)                                                  (0x00800000&((data)<<23))
#define UMSK_ISR_GP4DA_INT146_src(data)                                              ((0x00800000&(data))>>23)
#define UMSK_ISR_GP4DA_get_INT146(data)                                              ((0x00800000&(data))>>23)
#define UMSK_ISR_GP4DA_INT145_shift                                                  (22)
#define UMSK_ISR_GP4DA_INT145_mask                                                   (0x00400000)
#define UMSK_ISR_GP4DA_INT145(data)                                                  (0x00400000&((data)<<22))
#define UMSK_ISR_GP4DA_INT145_src(data)                                              ((0x00400000&(data))>>22)
#define UMSK_ISR_GP4DA_get_INT145(data)                                              ((0x00400000&(data))>>22)
#define UMSK_ISR_GP4DA_INT144_shift                                                  (21)
#define UMSK_ISR_GP4DA_INT144_mask                                                   (0x00200000)
#define UMSK_ISR_GP4DA_INT144(data)                                                  (0x00200000&((data)<<21))
#define UMSK_ISR_GP4DA_INT144_src(data)                                              ((0x00200000&(data))>>21)
#define UMSK_ISR_GP4DA_get_INT144(data)                                              ((0x00200000&(data))>>21)
#define UMSK_ISR_GP4DA_INT143_shift                                                  (20)
#define UMSK_ISR_GP4DA_INT143_mask                                                   (0x00100000)
#define UMSK_ISR_GP4DA_INT143(data)                                                  (0x00100000&((data)<<20))
#define UMSK_ISR_GP4DA_INT143_src(data)                                              ((0x00100000&(data))>>20)
#define UMSK_ISR_GP4DA_get_INT143(data)                                              ((0x00100000&(data))>>20)
#define UMSK_ISR_GP4DA_INT142_shift                                                  (19)
#define UMSK_ISR_GP4DA_INT142_mask                                                   (0x00080000)
#define UMSK_ISR_GP4DA_INT142(data)                                                  (0x00080000&((data)<<19))
#define UMSK_ISR_GP4DA_INT142_src(data)                                              ((0x00080000&(data))>>19)
#define UMSK_ISR_GP4DA_get_INT142(data)                                              ((0x00080000&(data))>>19)
#define UMSK_ISR_GP4DA_INT141_shift                                                  (18)
#define UMSK_ISR_GP4DA_INT141_mask                                                   (0x00040000)
#define UMSK_ISR_GP4DA_INT141(data)                                                  (0x00040000&((data)<<18))
#define UMSK_ISR_GP4DA_INT141_src(data)                                              ((0x00040000&(data))>>18)
#define UMSK_ISR_GP4DA_get_INT141(data)                                              ((0x00040000&(data))>>18)
#define UMSK_ISR_GP4DA_INT140_shift                                                  (17)
#define UMSK_ISR_GP4DA_INT140_mask                                                   (0x00020000)
#define UMSK_ISR_GP4DA_INT140(data)                                                  (0x00020000&((data)<<17))
#define UMSK_ISR_GP4DA_INT140_src(data)                                              ((0x00020000&(data))>>17)
#define UMSK_ISR_GP4DA_get_INT140(data)                                              ((0x00020000&(data))>>17)
#define UMSK_ISR_GP4DA_INT139_shift                                                  (16)
#define UMSK_ISR_GP4DA_INT139_mask                                                   (0x00010000)
#define UMSK_ISR_GP4DA_INT139(data)                                                  (0x00010000&((data)<<16))
#define UMSK_ISR_GP4DA_INT139_src(data)                                              ((0x00010000&(data))>>16)
#define UMSK_ISR_GP4DA_get_INT139(data)                                              ((0x00010000&(data))>>16)
#define UMSK_ISR_GP4DA_INT138_shift                                                  (15)
#define UMSK_ISR_GP4DA_INT138_mask                                                   (0x00008000)
#define UMSK_ISR_GP4DA_INT138(data)                                                  (0x00008000&((data)<<15))
#define UMSK_ISR_GP4DA_INT138_src(data)                                              ((0x00008000&(data))>>15)
#define UMSK_ISR_GP4DA_get_INT138(data)                                              ((0x00008000&(data))>>15)
#define UMSK_ISR_GP4DA_INT137_shift                                                  (14)
#define UMSK_ISR_GP4DA_INT137_mask                                                   (0x00004000)
#define UMSK_ISR_GP4DA_INT137(data)                                                  (0x00004000&((data)<<14))
#define UMSK_ISR_GP4DA_INT137_src(data)                                              ((0x00004000&(data))>>14)
#define UMSK_ISR_GP4DA_get_INT137(data)                                              ((0x00004000&(data))>>14)
#define UMSK_ISR_GP4DA_INT136_shift                                                  (13)
#define UMSK_ISR_GP4DA_INT136_mask                                                   (0x00002000)
#define UMSK_ISR_GP4DA_INT136(data)                                                  (0x00002000&((data)<<13))
#define UMSK_ISR_GP4DA_INT136_src(data)                                              ((0x00002000&(data))>>13)
#define UMSK_ISR_GP4DA_get_INT136(data)                                              ((0x00002000&(data))>>13)
#define UMSK_ISR_GP4DA_INT135_shift                                                  (12)
#define UMSK_ISR_GP4DA_INT135_mask                                                   (0x00001000)
#define UMSK_ISR_GP4DA_INT135(data)                                                  (0x00001000&((data)<<12))
#define UMSK_ISR_GP4DA_INT135_src(data)                                              ((0x00001000&(data))>>12)
#define UMSK_ISR_GP4DA_get_INT135(data)                                              ((0x00001000&(data))>>12)
#define UMSK_ISR_GP4DA_INT134_shift                                                  (11)
#define UMSK_ISR_GP4DA_INT134_mask                                                   (0x00000800)
#define UMSK_ISR_GP4DA_INT134(data)                                                  (0x00000800&((data)<<11))
#define UMSK_ISR_GP4DA_INT134_src(data)                                              ((0x00000800&(data))>>11)
#define UMSK_ISR_GP4DA_get_INT134(data)                                              ((0x00000800&(data))>>11)
#define UMSK_ISR_GP4DA_INT133_shift                                                  (10)
#define UMSK_ISR_GP4DA_INT133_mask                                                   (0x00000400)
#define UMSK_ISR_GP4DA_INT133(data)                                                  (0x00000400&((data)<<10))
#define UMSK_ISR_GP4DA_INT133_src(data)                                              ((0x00000400&(data))>>10)
#define UMSK_ISR_GP4DA_get_INT133(data)                                              ((0x00000400&(data))>>10)
#define UMSK_ISR_GP4DA_INT132_shift                                                  (9)
#define UMSK_ISR_GP4DA_INT132_mask                                                   (0x00000200)
#define UMSK_ISR_GP4DA_INT132(data)                                                  (0x00000200&((data)<<9))
#define UMSK_ISR_GP4DA_INT132_src(data)                                              ((0x00000200&(data))>>9)
#define UMSK_ISR_GP4DA_get_INT132(data)                                              ((0x00000200&(data))>>9)
#define UMSK_ISR_GP4DA_INT131_shift                                                  (8)
#define UMSK_ISR_GP4DA_INT131_mask                                                   (0x00000100)
#define UMSK_ISR_GP4DA_INT131(data)                                                  (0x00000100&((data)<<8))
#define UMSK_ISR_GP4DA_INT131_src(data)                                              ((0x00000100&(data))>>8)
#define UMSK_ISR_GP4DA_get_INT131(data)                                              ((0x00000100&(data))>>8)
#define UMSK_ISR_GP4DA_INT130_shift                                                  (7)
#define UMSK_ISR_GP4DA_INT130_mask                                                   (0x00000080)
#define UMSK_ISR_GP4DA_INT130(data)                                                  (0x00000080&((data)<<7))
#define UMSK_ISR_GP4DA_INT130_src(data)                                              ((0x00000080&(data))>>7)
#define UMSK_ISR_GP4DA_get_INT130(data)                                              ((0x00000080&(data))>>7)
#define UMSK_ISR_GP4DA_INT129_shift                                                  (6)
#define UMSK_ISR_GP4DA_INT129_mask                                                   (0x00000040)
#define UMSK_ISR_GP4DA_INT129(data)                                                  (0x00000040&((data)<<6))
#define UMSK_ISR_GP4DA_INT129_src(data)                                              ((0x00000040&(data))>>6)
#define UMSK_ISR_GP4DA_get_INT129(data)                                              ((0x00000040&(data))>>6)
#define UMSK_ISR_GP4DA_INT128_shift                                                  (5)
#define UMSK_ISR_GP4DA_INT128_mask                                                   (0x00000020)
#define UMSK_ISR_GP4DA_INT128(data)                                                  (0x00000020&((data)<<5))
#define UMSK_ISR_GP4DA_INT128_src(data)                                              ((0x00000020&(data))>>5)
#define UMSK_ISR_GP4DA_get_INT128(data)                                              ((0x00000020&(data))>>5)
#define UMSK_ISR_GP4DA_INT127_shift                                                  (4)
#define UMSK_ISR_GP4DA_INT127_mask                                                   (0x00000010)
#define UMSK_ISR_GP4DA_INT127(data)                                                  (0x00000010&((data)<<4))
#define UMSK_ISR_GP4DA_INT127_src(data)                                              ((0x00000010&(data))>>4)
#define UMSK_ISR_GP4DA_get_INT127(data)                                              ((0x00000010&(data))>>4)
#define UMSK_ISR_GP4DA_INT126_shift                                                  (3)
#define UMSK_ISR_GP4DA_INT126_mask                                                   (0x00000008)
#define UMSK_ISR_GP4DA_INT126(data)                                                  (0x00000008&((data)<<3))
#define UMSK_ISR_GP4DA_INT126_src(data)                                              ((0x00000008&(data))>>3)
#define UMSK_ISR_GP4DA_get_INT126(data)                                              ((0x00000008&(data))>>3)
#define UMSK_ISR_GP4DA_INT125_shift                                                  (2)
#define UMSK_ISR_GP4DA_INT125_mask                                                   (0x00000004)
#define UMSK_ISR_GP4DA_INT125(data)                                                  (0x00000004&((data)<<2))
#define UMSK_ISR_GP4DA_INT125_src(data)                                              ((0x00000004&(data))>>2)
#define UMSK_ISR_GP4DA_get_INT125(data)                                              ((0x00000004&(data))>>2)
#define UMSK_ISR_GP4DA_INT124_shift                                                  (1)
#define UMSK_ISR_GP4DA_INT124_mask                                                   (0x00000002)
#define UMSK_ISR_GP4DA_INT124(data)                                                  (0x00000002&((data)<<1))
#define UMSK_ISR_GP4DA_INT124_src(data)                                              ((0x00000002&(data))>>1)
#define UMSK_ISR_GP4DA_get_INT124(data)                                              ((0x00000002&(data))>>1)
#define UMSK_ISR_GP4DA_write_data_shift                                              (0)
#define UMSK_ISR_GP4DA_write_data_mask                                               (0x00000001)
#define UMSK_ISR_GP4DA_write_data(data)                                              (0x00000001&((data)<<0))
#define UMSK_ISR_GP4DA_write_data_src(data)                                          ((0x00000001&(data))>>0)
#define UMSK_ISR_GP4DA_get_write_data(data)                                          ((0x00000001&(data))>>0)


#define UMSK_ISR_GP5DA                                                               0x1801B06C
#define UMSK_ISR_GP5DA_reg_addr                                                      "0xB801B06C"
#define UMSK_ISR_GP5DA_reg                                                           0xB801B06C
#define set_UMSK_ISR_GP5DA_reg(data)   (*((volatile unsigned int*) UMSK_ISR_GP5DA_reg)=data)
#define get_UMSK_ISR_GP5DA_reg   (*((volatile unsigned int*) UMSK_ISR_GP5DA_reg))
#define UMSK_ISR_GP5DA_inst_adr                                                      "0x001B"
#define UMSK_ISR_GP5DA_inst                                                          0x001B
#define UMSK_ISR_GP5DA_INT169_shift                                                  (15)
#define UMSK_ISR_GP5DA_INT169_mask                                                   (0x00008000)
#define UMSK_ISR_GP5DA_INT169(data)                                                  (0x00008000&((data)<<15))
#define UMSK_ISR_GP5DA_INT169_src(data)                                              ((0x00008000&(data))>>15)
#define UMSK_ISR_GP5DA_get_INT169(data)                                              ((0x00008000&(data))>>15)
#define UMSK_ISR_GP5DA_INT168_shift                                                  (14)
#define UMSK_ISR_GP5DA_INT168_mask                                                   (0x00004000)
#define UMSK_ISR_GP5DA_INT168(data)                                                  (0x00004000&((data)<<14))
#define UMSK_ISR_GP5DA_INT168_src(data)                                              ((0x00004000&(data))>>14)
#define UMSK_ISR_GP5DA_get_INT168(data)                                              ((0x00004000&(data))>>14)
#define UMSK_ISR_GP5DA_INT167_shift                                                  (13)
#define UMSK_ISR_GP5DA_INT167_mask                                                   (0x00002000)
#define UMSK_ISR_GP5DA_INT167(data)                                                  (0x00002000&((data)<<13))
#define UMSK_ISR_GP5DA_INT167_src(data)                                              ((0x00002000&(data))>>13)
#define UMSK_ISR_GP5DA_get_INT167(data)                                              ((0x00002000&(data))>>13)
#define UMSK_ISR_GP5DA_INT166_shift                                                  (12)
#define UMSK_ISR_GP5DA_INT166_mask                                                   (0x00001000)
#define UMSK_ISR_GP5DA_INT166(data)                                                  (0x00001000&((data)<<12))
#define UMSK_ISR_GP5DA_INT166_src(data)                                              ((0x00001000&(data))>>12)
#define UMSK_ISR_GP5DA_get_INT166(data)                                              ((0x00001000&(data))>>12)
#define UMSK_ISR_GP5DA_INT165_shift                                                  (11)
#define UMSK_ISR_GP5DA_INT165_mask                                                   (0x00000800)
#define UMSK_ISR_GP5DA_INT165(data)                                                  (0x00000800&((data)<<11))
#define UMSK_ISR_GP5DA_INT165_src(data)                                              ((0x00000800&(data))>>11)
#define UMSK_ISR_GP5DA_get_INT165(data)                                              ((0x00000800&(data))>>11)
#define UMSK_ISR_GP5DA_INT164_shift                                                  (10)
#define UMSK_ISR_GP5DA_INT164_mask                                                   (0x00000400)
#define UMSK_ISR_GP5DA_INT164(data)                                                  (0x00000400&((data)<<10))
#define UMSK_ISR_GP5DA_INT164_src(data)                                              ((0x00000400&(data))>>10)
#define UMSK_ISR_GP5DA_get_INT164(data)                                              ((0x00000400&(data))>>10)
#define UMSK_ISR_GP5DA_INT163_shift                                                  (9)
#define UMSK_ISR_GP5DA_INT163_mask                                                   (0x00000200)
#define UMSK_ISR_GP5DA_INT163(data)                                                  (0x00000200&((data)<<9))
#define UMSK_ISR_GP5DA_INT163_src(data)                                              ((0x00000200&(data))>>9)
#define UMSK_ISR_GP5DA_get_INT163(data)                                              ((0x00000200&(data))>>9)
#define UMSK_ISR_GP5DA_INT162_shift                                                  (8)
#define UMSK_ISR_GP5DA_INT162_mask                                                   (0x00000100)
#define UMSK_ISR_GP5DA_INT162(data)                                                  (0x00000100&((data)<<8))
#define UMSK_ISR_GP5DA_INT162_src(data)                                              ((0x00000100&(data))>>8)
#define UMSK_ISR_GP5DA_get_INT162(data)                                              ((0x00000100&(data))>>8)
#define UMSK_ISR_GP5DA_INT161_shift                                                  (7)
#define UMSK_ISR_GP5DA_INT161_mask                                                   (0x00000080)
#define UMSK_ISR_GP5DA_INT161(data)                                                  (0x00000080&((data)<<7))
#define UMSK_ISR_GP5DA_INT161_src(data)                                              ((0x00000080&(data))>>7)
#define UMSK_ISR_GP5DA_get_INT161(data)                                              ((0x00000080&(data))>>7)
#define UMSK_ISR_GP5DA_INT160_shift                                                  (6)
#define UMSK_ISR_GP5DA_INT160_mask                                                   (0x00000040)
#define UMSK_ISR_GP5DA_INT160(data)                                                  (0x00000040&((data)<<6))
#define UMSK_ISR_GP5DA_INT160_src(data)                                              ((0x00000040&(data))>>6)
#define UMSK_ISR_GP5DA_get_INT160(data)                                              ((0x00000040&(data))>>6)
#define UMSK_ISR_GP5DA_INT159_shift                                                  (5)
#define UMSK_ISR_GP5DA_INT159_mask                                                   (0x00000020)
#define UMSK_ISR_GP5DA_INT159(data)                                                  (0x00000020&((data)<<5))
#define UMSK_ISR_GP5DA_INT159_src(data)                                              ((0x00000020&(data))>>5)
#define UMSK_ISR_GP5DA_get_INT159(data)                                              ((0x00000020&(data))>>5)
#define UMSK_ISR_GP5DA_INT158_shift                                                  (4)
#define UMSK_ISR_GP5DA_INT158_mask                                                   (0x00000010)
#define UMSK_ISR_GP5DA_INT158(data)                                                  (0x00000010&((data)<<4))
#define UMSK_ISR_GP5DA_INT158_src(data)                                              ((0x00000010&(data))>>4)
#define UMSK_ISR_GP5DA_get_INT158(data)                                              ((0x00000010&(data))>>4)
#define UMSK_ISR_GP5DA_INT157_shift                                                  (3)
#define UMSK_ISR_GP5DA_INT157_mask                                                   (0x00000008)
#define UMSK_ISR_GP5DA_INT157(data)                                                  (0x00000008&((data)<<3))
#define UMSK_ISR_GP5DA_INT157_src(data)                                              ((0x00000008&(data))>>3)
#define UMSK_ISR_GP5DA_get_INT157(data)                                              ((0x00000008&(data))>>3)
#define UMSK_ISR_GP5DA_INT156_shift                                                  (2)
#define UMSK_ISR_GP5DA_INT156_mask                                                   (0x00000004)
#define UMSK_ISR_GP5DA_INT156(data)                                                  (0x00000004&((data)<<2))
#define UMSK_ISR_GP5DA_INT156_src(data)                                              ((0x00000004&(data))>>2)
#define UMSK_ISR_GP5DA_get_INT156(data)                                              ((0x00000004&(data))>>2)
#define UMSK_ISR_GP5DA_INT155_shift                                                  (1)
#define UMSK_ISR_GP5DA_INT155_mask                                                   (0x00000002)
#define UMSK_ISR_GP5DA_INT155(data)                                                  (0x00000002&((data)<<1))
#define UMSK_ISR_GP5DA_INT155_src(data)                                              ((0x00000002&(data))>>1)
#define UMSK_ISR_GP5DA_get_INT155(data)                                              ((0x00000002&(data))>>1)
#define UMSK_ISR_GP5DA_write_data_shift                                              (0)
#define UMSK_ISR_GP5DA_write_data_mask                                               (0x00000001)
#define UMSK_ISR_GP5DA_write_data(data)                                              (0x00000001&((data)<<0))
#define UMSK_ISR_GP5DA_write_data_src(data)                                          ((0x00000001&(data))>>0)
#define UMSK_ISR_GP5DA_get_write_data(data)                                          ((0x00000001&(data))>>0)


#define DUMMY1                                                                       0x1801B070
#define DUMMY1_reg_addr                                                              "0xB801B070"
#define DUMMY1_reg                                                                   0xB801B070
#define set_DUMMY1_reg(data)   (*((volatile unsigned int*) DUMMY1_reg)=data)
#define get_DUMMY1_reg   (*((volatile unsigned int*) DUMMY1_reg))
#define DUMMY1_inst_adr                                                              "0x001C"
#define DUMMY1_inst                                                                  0x001C
#define DUMMY1_write_enable2_shift                                                   (31)
#define DUMMY1_write_enable2_mask                                                    (0x80000000)
#define DUMMY1_write_enable2(data)                                                   (0x80000000&((data)<<31))
#define DUMMY1_write_enable2_src(data)                                               ((0x80000000&(data))>>31)
#define DUMMY1_get_write_enable2(data)                                               ((0x80000000&(data))>>31)
#define DUMMY1_Rvd2_shift                                                            (16)
#define DUMMY1_Rvd2_mask                                                             (0x7FFF0000)
#define DUMMY1_Rvd2(data)                                                            (0x7FFF0000&((data)<<16))
#define DUMMY1_Rvd2_src(data)                                                        ((0x7FFF0000&(data))>>16)
#define DUMMY1_get_Rvd2(data)                                                        ((0x7FFF0000&(data))>>16)
#define DUMMY1_write_enable1_shift                                                   (15)
#define DUMMY1_write_enable1_mask                                                    (0x00008000)
#define DUMMY1_write_enable1(data)                                                   (0x00008000&((data)<<15))
#define DUMMY1_write_enable1_src(data)                                               ((0x00008000&(data))>>15)
#define DUMMY1_get_write_enable1(data)                                               ((0x00008000&(data))>>15)
#define DUMMY1_Rvd1_shift                                                            (0)
#define DUMMY1_Rvd1_mask                                                             (0x00007FFF)
#define DUMMY1_Rvd1(data)                                                            (0x00007FFF&((data)<<0))
#define DUMMY1_Rvd1_src(data)                                                        ((0x00007FFF&(data))>>0)
#define DUMMY1_get_Rvd1(data)                                                        ((0x00007FFF&(data))>>0)


#define I2C1_SDA_OUTPUT_DELAY_CTRL                                                   0x1801B074
#define I2C1_SDA_OUTPUT_DELAY_CTRL_reg_addr                                          "0xB801B074"
#define I2C1_SDA_OUTPUT_DELAY_CTRL_reg                                               0xB801B074
#define set_I2C1_SDA_OUTPUT_DELAY_CTRL_reg(data)   (*((volatile unsigned int*) I2C1_SDA_OUTPUT_DELAY_CTRL_reg)=data)
#define get_I2C1_SDA_OUTPUT_DELAY_CTRL_reg   (*((volatile unsigned int*) I2C1_SDA_OUTPUT_DELAY_CTRL_reg))
#define I2C1_SDA_OUTPUT_DELAY_CTRL_inst_adr                                          "0x001D"
#define I2C1_SDA_OUTPUT_DELAY_CTRL_inst                                              0x001D
#define I2C1_SDA_OUTPUT_DELAY_CTRL_Startbitdelayenable_shift                         (31)
#define I2C1_SDA_OUTPUT_DELAY_CTRL_Startbitdelayenable_mask                          (0x80000000)
#define I2C1_SDA_OUTPUT_DELAY_CTRL_Startbitdelayenable(data)                         (0x80000000&((data)<<31))
#define I2C1_SDA_OUTPUT_DELAY_CTRL_Startbitdelayenable_src(data)                     ((0x80000000&(data))>>31)
#define I2C1_SDA_OUTPUT_DELAY_CTRL_get_Startbitdelayenable(data)                     ((0x80000000&(data))>>31)
#define I2C1_SDA_OUTPUT_DELAY_CTRL_Start_bit_delay_sel_shift                         (16)
#define I2C1_SDA_OUTPUT_DELAY_CTRL_Start_bit_delay_sel_mask                          (0x00FF0000)
#define I2C1_SDA_OUTPUT_DELAY_CTRL_Start_bit_delay_sel(data)                         (0x00FF0000&((data)<<16))
#define I2C1_SDA_OUTPUT_DELAY_CTRL_Start_bit_delay_sel_src(data)                     ((0x00FF0000&(data))>>16)
#define I2C1_SDA_OUTPUT_DELAY_CTRL_get_Start_bit_delay_sel(data)                     ((0x00FF0000&(data))>>16)
#define I2C1_SDA_OUTPUT_DELAY_CTRL_Databitdelayenable_shift                          (15)
#define I2C1_SDA_OUTPUT_DELAY_CTRL_Databitdelayenable_mask                           (0x00008000)
#define I2C1_SDA_OUTPUT_DELAY_CTRL_Databitdelayenable(data)                          (0x00008000&((data)<<15))
#define I2C1_SDA_OUTPUT_DELAY_CTRL_Databitdelayenable_src(data)                      ((0x00008000&(data))>>15)
#define I2C1_SDA_OUTPUT_DELAY_CTRL_get_Databitdelayenable(data)                      ((0x00008000&(data))>>15)
#define I2C1_SDA_OUTPUT_DELAY_CTRL_Databitdelaysel_shift                             (0)
#define I2C1_SDA_OUTPUT_DELAY_CTRL_Databitdelaysel_mask                              (0x000000FF)
#define I2C1_SDA_OUTPUT_DELAY_CTRL_Databitdelaysel(data)                             (0x000000FF&((data)<<0))
#define I2C1_SDA_OUTPUT_DELAY_CTRL_Databitdelaysel_src(data)                         ((0x000000FF&(data))>>0)
#define I2C1_SDA_OUTPUT_DELAY_CTRL_get_Databitdelaysel(data)                         ((0x000000FF&(data))>>0)


#define I2C2_SDA_OUTPUT_DELAY_CTRL                                                   0x1801B078
#define I2C2_SDA_OUTPUT_DELAY_CTRL_reg_addr                                          "0xB801B078"
#define I2C2_SDA_OUTPUT_DELAY_CTRL_reg                                               0xB801B078
#define set_I2C2_SDA_OUTPUT_DELAY_CTRL_reg(data)   (*((volatile unsigned int*) I2C2_SDA_OUTPUT_DELAY_CTRL_reg)=data)
#define get_I2C2_SDA_OUTPUT_DELAY_CTRL_reg   (*((volatile unsigned int*) I2C2_SDA_OUTPUT_DELAY_CTRL_reg))
#define I2C2_SDA_OUTPUT_DELAY_CTRL_inst_adr                                          "0x001E"
#define I2C2_SDA_OUTPUT_DELAY_CTRL_inst                                              0x001E
#define I2C2_SDA_OUTPUT_DELAY_CTRL_Startbitdelayenable_shift                         (31)
#define I2C2_SDA_OUTPUT_DELAY_CTRL_Startbitdelayenable_mask                          (0x80000000)
#define I2C2_SDA_OUTPUT_DELAY_CTRL_Startbitdelayenable(data)                         (0x80000000&((data)<<31))
#define I2C2_SDA_OUTPUT_DELAY_CTRL_Startbitdelayenable_src(data)                     ((0x80000000&(data))>>31)
#define I2C2_SDA_OUTPUT_DELAY_CTRL_get_Startbitdelayenable(data)                     ((0x80000000&(data))>>31)
#define I2C2_SDA_OUTPUT_DELAY_CTRL_Start_bit_delay_sel_shift                         (16)
#define I2C2_SDA_OUTPUT_DELAY_CTRL_Start_bit_delay_sel_mask                          (0x00FF0000)
#define I2C2_SDA_OUTPUT_DELAY_CTRL_Start_bit_delay_sel(data)                         (0x00FF0000&((data)<<16))
#define I2C2_SDA_OUTPUT_DELAY_CTRL_Start_bit_delay_sel_src(data)                     ((0x00FF0000&(data))>>16)
#define I2C2_SDA_OUTPUT_DELAY_CTRL_get_Start_bit_delay_sel(data)                     ((0x00FF0000&(data))>>16)
#define I2C2_SDA_OUTPUT_DELAY_CTRL_Databitdelayenable_shift                          (15)
#define I2C2_SDA_OUTPUT_DELAY_CTRL_Databitdelayenable_mask                           (0x00008000)
#define I2C2_SDA_OUTPUT_DELAY_CTRL_Databitdelayenable(data)                          (0x00008000&((data)<<15))
#define I2C2_SDA_OUTPUT_DELAY_CTRL_Databitdelayenable_src(data)                      ((0x00008000&(data))>>15)
#define I2C2_SDA_OUTPUT_DELAY_CTRL_get_Databitdelayenable(data)                      ((0x00008000&(data))>>15)
#define I2C2_SDA_OUTPUT_DELAY_CTRL_Databitdelaysel_shift                             (0)
#define I2C2_SDA_OUTPUT_DELAY_CTRL_Databitdelaysel_mask                              (0x000000FF)
#define I2C2_SDA_OUTPUT_DELAY_CTRL_Databitdelaysel(data)                             (0x000000FF&((data)<<0))
#define I2C2_SDA_OUTPUT_DELAY_CTRL_Databitdelaysel_src(data)                         ((0x000000FF&(data))>>0)
#define I2C2_SDA_OUTPUT_DELAY_CTRL_get_Databitdelaysel(data)                         ((0x000000FF&(data))>>0)


#define SCPU_INT_EN                                                                  0x1801B080
#define SCPU_INT_EN_reg_addr                                                         "0xB801B080"
#define SCPU_INT_EN_reg                                                              0xB801B080
#define set_SCPU_INT_EN_reg(data)   (*((volatile unsigned int*) SCPU_INT_EN_reg)=data)
#define get_SCPU_INT_EN_reg   (*((volatile unsigned int*) SCPU_INT_EN_reg))
#define SCPU_INT_EN_inst_adr                                                         "0x0020"
#define SCPU_INT_EN_inst                                                             0x0020
#define SCPU_INT_EN_I2C1_shift                                                       (27)
#define SCPU_INT_EN_I2C1_mask                                                        (0x08000000)
#define SCPU_INT_EN_I2C1(data)                                                       (0x08000000&((data)<<27))
#define SCPU_INT_EN_I2C1_src(data)                                                   ((0x08000000&(data))>>27)
#define SCPU_INT_EN_get_I2C1(data)                                                   ((0x08000000&(data))>>27)
#define SCPU_INT_EN_I2C2_shift                                                       (26)
#define SCPU_INT_EN_I2C2_mask                                                        (0x04000000)
#define SCPU_INT_EN_I2C2(data)                                                       (0x04000000&((data)<<26))
#define SCPU_INT_EN_I2C2_src(data)                                                   ((0x04000000&(data))>>26)
#define SCPU_INT_EN_get_I2C2(data)                                                   ((0x04000000&(data))>>26)
#define SCPU_INT_EN_sc0_shift                                                        (24)
#define SCPU_INT_EN_sc0_mask                                                         (0x01000000)
#define SCPU_INT_EN_sc0(data)                                                        (0x01000000&((data)<<24))
#define SCPU_INT_EN_sc0_src(data)                                                    ((0x01000000&(data))>>24)
#define SCPU_INT_EN_get_sc0(data)                                                    ((0x01000000&(data))>>24)
#define SCPU_INT_EN_PCMCIA_shift                                                     (21)
#define SCPU_INT_EN_PCMCIA_mask                                                      (0x00200000)
#define SCPU_INT_EN_PCMCIA(data)                                                     (0x00200000&((data)<<21))
#define SCPU_INT_EN_PCMCIA_src(data)                                                 ((0x00200000&(data))>>21)
#define SCPU_INT_EN_get_PCMCIA(data)                                                 ((0x00200000&(data))>>21)
#define SCPU_INT_EN_GPIODA_shift                                                     (20)
#define SCPU_INT_EN_GPIODA_mask                                                      (0x00100000)
#define SCPU_INT_EN_GPIODA(data)                                                     (0x00100000&((data)<<20))
#define SCPU_INT_EN_GPIODA_src(data)                                                 ((0x00100000&(data))>>20)
#define SCPU_INT_EN_get_GPIODA(data)                                                 ((0x00100000&(data))>>20)
#define SCPU_INT_EN_GPIOA_shift                                                      (19)
#define SCPU_INT_EN_GPIOA_mask                                                       (0x00080000)
#define SCPU_INT_EN_GPIOA(data)                                                      (0x00080000&((data)<<19))
#define SCPU_INT_EN_GPIOA_src(data)                                                  ((0x00080000&(data))>>19)
#define SCPU_INT_EN_get_GPIOA(data)                                                  ((0x00080000&(data))>>19)
#define SCPU_INT_EN_TC7_shift                                                        (13)
#define SCPU_INT_EN_TC7_mask                                                         (0x00002000)
#define SCPU_INT_EN_TC7(data)                                                        (0x00002000&((data)<<13))
#define SCPU_INT_EN_TC7_src(data)                                                    ((0x00002000&(data))>>13)
#define SCPU_INT_EN_get_TC7(data)                                                    ((0x00002000&(data))>>13)
#define SCPU_INT_EN_TC6_shift                                                        (12)
#define SCPU_INT_EN_TC6_mask                                                         (0x00001000)
#define SCPU_INT_EN_TC6(data)                                                        (0x00001000&((data)<<12))
#define SCPU_INT_EN_TC6_src(data)                                                    ((0x00001000&(data))>>12)
#define SCPU_INT_EN_get_TC6(data)                                                    ((0x00001000&(data))>>12)
#define SCPU_INT_EN_TC5_shift                                                        (11)
#define SCPU_INT_EN_TC5_mask                                                         (0x00000800)
#define SCPU_INT_EN_TC5(data)                                                        (0x00000800&((data)<<11))
#define SCPU_INT_EN_TC5_src(data)                                                    ((0x00000800&(data))>>11)
#define SCPU_INT_EN_get_TC5(data)                                                    ((0x00000800&(data))>>11)
#define SCPU_INT_EN_TC4_shift                                                        (10)
#define SCPU_INT_EN_TC4_mask                                                         (0x00000400)
#define SCPU_INT_EN_TC4(data)                                                        (0x00000400&((data)<<10))
#define SCPU_INT_EN_TC4_src(data)                                                    ((0x00000400&(data))>>10)
#define SCPU_INT_EN_get_TC4(data)                                                    ((0x00000400&(data))>>10)
#define SCPU_INT_EN_DDC1_shift                                                       (9)
#define SCPU_INT_EN_DDC1_mask                                                        (0x00000200)
#define SCPU_INT_EN_DDC1(data)                                                       (0x00000200&((data)<<9))
#define SCPU_INT_EN_DDC1_src(data)                                                   ((0x00000200&(data))>>9)
#define SCPU_INT_EN_get_DDC1(data)                                                   ((0x00000200&(data))>>9)
#define SCPU_INT_EN_DDC2_shift                                                       (8)
#define SCPU_INT_EN_DDC2_mask                                                        (0x00000100)
#define SCPU_INT_EN_DDC2(data)                                                       (0x00000100&((data)<<8))
#define SCPU_INT_EN_DDC2_src(data)                                                   ((0x00000100&(data))>>8)
#define SCPU_INT_EN_get_DDC2(data)                                                   ((0x00000100&(data))>>8)
#define SCPU_INT_EN_DDC3_shift                                                       (7)
#define SCPU_INT_EN_DDC3_mask                                                        (0x00000080)
#define SCPU_INT_EN_DDC3(data)                                                       (0x00000080&((data)<<7))
#define SCPU_INT_EN_DDC3_src(data)                                                   ((0x00000080&(data))>>7)
#define SCPU_INT_EN_get_DDC3(data)                                                   ((0x00000080&(data))>>7)
#define SCPU_INT_EN_DDC4_shift                                                       (6)
#define SCPU_INT_EN_DDC4_mask                                                        (0x00000040)
#define SCPU_INT_EN_DDC4(data)                                                       (0x00000040&((data)<<6))
#define SCPU_INT_EN_DDC4_src(data)                                                   ((0x00000040&(data))>>6)
#define SCPU_INT_EN_get_DDC4(data)                                                   ((0x00000040&(data))>>6)
#define SCPU_INT_EN_UR3_shift                                                        (5)
#define SCPU_INT_EN_UR3_mask                                                         (0x00000020)
#define SCPU_INT_EN_UR3(data)                                                        (0x00000020&((data)<<5))
#define SCPU_INT_EN_UR3_src(data)                                                    ((0x00000020&(data))>>5)
#define SCPU_INT_EN_get_UR3(data)                                                    ((0x00000020&(data))>>5)
#define SCPU_INT_EN_UR2_shift                                                        (4)
#define SCPU_INT_EN_UR2_mask                                                         (0x00000010)
#define SCPU_INT_EN_UR2(data)                                                        (0x00000010&((data)<<4))
#define SCPU_INT_EN_UR2_src(data)                                                    ((0x00000010&(data))>>4)
#define SCPU_INT_EN_get_UR2(data)                                                    ((0x00000010&(data))>>4)
#define SCPU_INT_EN_UR1_shift                                                        (3)
#define SCPU_INT_EN_UR1_mask                                                         (0x00000008)
#define SCPU_INT_EN_UR1(data)                                                        (0x00000008&((data)<<3))
#define SCPU_INT_EN_UR1_src(data)                                                    ((0x00000008&(data))>>3)
#define SCPU_INT_EN_get_UR1(data)                                                    ((0x00000008&(data))>>3)
#define SCPU_INT_EN_UR3_TO_shift                                                     (2)
#define SCPU_INT_EN_UR3_TO_mask                                                      (0x00000004)
#define SCPU_INT_EN_UR3_TO(data)                                                     (0x00000004&((data)<<2))
#define SCPU_INT_EN_UR3_TO_src(data)                                                 ((0x00000004&(data))>>2)
#define SCPU_INT_EN_get_UR3_TO(data)                                                 ((0x00000004&(data))>>2)


#define UR_CTRL                                                                      0x1801B084
#define UR_CTRL_reg_addr                                                             "0xB801B084"
#define UR_CTRL_reg                                                                  0xB801B084
#define set_UR_CTRL_reg(data)   (*((volatile unsigned int*) UR_CTRL_reg)=data)
#define get_UR_CTRL_reg   (*((volatile unsigned int*) UR_CTRL_reg))
#define UR_CTRL_inst_adr                                                             "0x0021"
#define UR_CTRL_inst                                                                 0x0021
#define UR_CTRL_Rvd3_shift                                                           (28)
#define UR_CTRL_Rvd3_mask                                                            (0xF0000000)
#define UR_CTRL_Rvd3(data)                                                           (0xF0000000&((data)<<28))
#define UR_CTRL_Rvd3_src(data)                                                       ((0xF0000000&(data))>>28)
#define UR_CTRL_get_Rvd3(data)                                                       ((0xF0000000&(data))>>28)
#define UR_CTRL_to_len_shift                                                         (20)
#define UR_CTRL_to_len_mask                                                          (0x0FF00000)
#define UR_CTRL_to_len(data)                                                         (0x0FF00000&((data)<<20))
#define UR_CTRL_to_len_src(data)                                                     ((0x0FF00000&(data))>>20)
#define UR_CTRL_get_to_len(data)                                                     ((0x0FF00000&(data))>>20)
#define UR_CTRL_to_int_en_shift                                                      (19)
#define UR_CTRL_to_int_en_mask                                                       (0x00080000)
#define UR_CTRL_to_int_en(data)                                                      (0x00080000&((data)<<19))
#define UR_CTRL_to_int_en_src(data)                                                  ((0x00080000&(data))>>19)
#define UR_CTRL_get_to_int_en(data)                                                  ((0x00080000&(data))>>19)
#define UR_CTRL_TOAUAREQ_shift                                                       (18)
#define UR_CTRL_TOAUAREQ_mask                                                        (0x00040000)
#define UR_CTRL_TOAUAREQ(data)                                                       (0x00040000&((data)<<18))
#define UR_CTRL_TOAUAREQ_src(data)                                                   ((0x00040000&(data))>>18)
#define UR_CTRL_get_TOAUAREQ(data)                                                   ((0x00040000&(data))>>18)
#define UR_CTRL_Rvd1_shift                                                           (17)
#define UR_CTRL_Rvd1_mask                                                            (0x00020000)
#define UR_CTRL_Rvd1(data)                                                           (0x00020000&((data)<<17))
#define UR_CTRL_Rvd1_src(data)                                                       ((0x00020000&(data))>>17)
#define UR_CTRL_get_Rvd1(data)                                                       ((0x00020000&(data))>>17)
#define UR_CTRL_MDIFEN_shift                                                         (16)
#define UR_CTRL_MDIFEN_mask                                                          (0x00010000)
#define UR_CTRL_MDIFEN(data)                                                         (0x00010000&((data)<<16))
#define UR_CTRL_MDIFEN_src(data)                                                     ((0x00010000&(data))>>16)
#define UR_CTRL_get_MDIFEN(data)                                                     ((0x00010000&(data))>>16)
#define UR_CTRL_TXEMPTHR_shift                                                       (8)
#define UR_CTRL_TXEMPTHR_mask                                                        (0x00003F00)
#define UR_CTRL_TXEMPTHR(data)                                                       (0x00003F00&((data)<<8))
#define UR_CTRL_TXEMPTHR_src(data)                                                   ((0x00003F00&(data))>>8)
#define UR_CTRL_get_TXEMPTHR(data)                                                   ((0x00003F00&(data))>>8)
#define UR_CTRL_RXFULTHR_shift                                                       (0)
#define UR_CTRL_RXFULTHR_mask                                                        (0x0000003F)
#define UR_CTRL_RXFULTHR(data)                                                       (0x0000003F&((data)<<0))
#define UR_CTRL_RXFULTHR_src(data)                                                   ((0x0000003F&(data))>>0)
#define UR_CTRL_get_RXFULTHR(data)                                                   ((0x0000003F&(data))>>0)


#define UR_STS                                                                       0x1801B088
#define UR_STS_reg_addr                                                              "0xB801B088"
#define UR_STS_reg                                                                   0xB801B088
#define set_UR_STS_reg(data)   (*((volatile unsigned int*) UR_STS_reg)=data)
#define get_UR_STS_reg   (*((volatile unsigned int*) UR_STS_reg))
#define UR_STS_inst_adr                                                              "0x0022"
#define UR_STS_inst                                                                  0x0022
#define UR_STS_rx_wrd_count_shift                                                    (8)
#define UR_STS_rx_wrd_count_mask                                                     (0x00001F00)
#define UR_STS_rx_wrd_count(data)                                                    (0x00001F00&((data)<<8))
#define UR_STS_rx_wrd_count_src(data)                                                ((0x00001F00&(data))>>8)
#define UR_STS_get_rx_wrd_count(data)                                                ((0x00001F00&(data))>>8)
#define UR_STS_tx_wrd_count_shift                                                    (0)
#define UR_STS_tx_wrd_count_mask                                                     (0x0000001F)
#define UR_STS_tx_wrd_count(data)                                                    (0x0000001F&((data)<<0))
#define UR_STS_tx_wrd_count_src(data)                                                ((0x0000001F&(data))>>0)
#define UR_STS_get_tx_wrd_count(data)                                                ((0x0000001F&(data))>>0)


#define GP0DIR                                                                       0x1801BC00
#define GP0DIR_reg_addr                                                              "0xB801BC00"
#define GP0DIR_reg                                                                   0xB801BC00
#define set_GP0DIR_reg(data)   (*((volatile unsigned int*) GP0DIR_reg)=data)
#define get_GP0DIR_reg   (*((volatile unsigned int*) GP0DIR_reg))
#define GP0DIR_inst_adr                                                              "0x0000"
#define GP0DIR_inst                                                                  0x0000
#define GP0DIR_GPDIR_shift                                                           (0)
#define GP0DIR_GPDIR_mask                                                            (0xFFFFFFFF)
#define GP0DIR_GPDIR(data)                                                           (0xFFFFFFFF&((data)<<0))
#define GP0DIR_GPDIR_src(data)                                                       ((0xFFFFFFFF&(data))>>0)
#define GP0DIR_get_GPDIR(data)                                                       ((0xFFFFFFFF&(data))>>0)


#define GP1DIR                                                                       0x1801BC04
#define GP1DIR_reg_addr                                                              "0xB801BC04"
#define GP1DIR_reg                                                                   0xB801BC04
#define set_GP1DIR_reg(data)   (*((volatile unsigned int*) GP1DIR_reg)=data)
#define get_GP1DIR_reg   (*((volatile unsigned int*) GP1DIR_reg))
#define GP1DIR_inst_adr                                                              "0x0001"
#define GP1DIR_inst                                                                  0x0001
#define GP1DIR_GPDIR_shift                                                           (0)
#define GP1DIR_GPDIR_mask                                                            (0xFFFFFFFF)
#define GP1DIR_GPDIR(data)                                                           (0xFFFFFFFF&((data)<<0))
#define GP1DIR_GPDIR_src(data)                                                       ((0xFFFFFFFF&(data))>>0)
#define GP1DIR_get_GPDIR(data)                                                       ((0xFFFFFFFF&(data))>>0)


#define GP2DIR                                                                       0x1801BC08
#define GP2DIR_reg_addr                                                              "0xB801BC08"
#define GP2DIR_reg                                                                   0xB801BC08
#define set_GP2DIR_reg(data)   (*((volatile unsigned int*) GP2DIR_reg)=data)
#define get_GP2DIR_reg   (*((volatile unsigned int*) GP2DIR_reg))
#define GP2DIR_inst_adr                                                              "0x0002"
#define GP2DIR_inst                                                                  0x0002
#define GP2DIR_GPDIR_shift                                                           (0)
#define GP2DIR_GPDIR_mask                                                            (0xFFFFFFFF)
#define GP2DIR_GPDIR(data)                                                           (0xFFFFFFFF&((data)<<0))
#define GP2DIR_GPDIR_src(data)                                                       ((0xFFFFFFFF&(data))>>0)
#define GP2DIR_get_GPDIR(data)                                                       ((0xFFFFFFFF&(data))>>0)


#define GP3DIR                                                                       0x1801BC0C
#define GP3DIR_reg_addr                                                              "0xB801BC0C"
#define GP3DIR_reg                                                                   0xB801BC0C
#define set_GP3DIR_reg(data)   (*((volatile unsigned int*) GP3DIR_reg)=data)
#define get_GP3DIR_reg   (*((volatile unsigned int*) GP3DIR_reg))
#define GP3DIR_inst_adr                                                              "0x0003"
#define GP3DIR_inst                                                                  0x0003
#define GP3DIR_GPDIR_shift                                                           (0)
#define GP3DIR_GPDIR_mask                                                            (0xFFFFFFFF)
#define GP3DIR_GPDIR(data)                                                           (0xFFFFFFFF&((data)<<0))
#define GP3DIR_GPDIR_src(data)                                                       ((0xFFFFFFFF&(data))>>0)
#define GP3DIR_get_GPDIR(data)                                                       ((0xFFFFFFFF&(data))>>0)


#define GP4DIR                                                                       0x1801BC10
#define GP4DIR_reg_addr                                                              "0xB801BC10"
#define GP4DIR_reg                                                                   0xB801BC10
#define set_GP4DIR_reg(data)   (*((volatile unsigned int*) GP4DIR_reg)=data)
#define get_GP4DIR_reg   (*((volatile unsigned int*) GP4DIR_reg))
#define GP4DIR_inst_adr                                                              "0x0004"
#define GP4DIR_inst                                                                  0x0004
#define GP4DIR_GPDIR_shift                                                           (0)
#define GP4DIR_GPDIR_mask                                                            (0xFFFFFFFF)
#define GP4DIR_GPDIR(data)                                                           (0xFFFFFFFF&((data)<<0))
#define GP4DIR_GPDIR_src(data)                                                       ((0xFFFFFFFF&(data))>>0)
#define GP4DIR_get_GPDIR(data)                                                       ((0xFFFFFFFF&(data))>>0)


#define GP5DIR                                                                       0x1801BC14
#define GP5DIR_reg_addr                                                              "0xB801BC14"
#define GP5DIR_reg                                                                   0xB801BC14
#define set_GP5DIR_reg(data)   (*((volatile unsigned int*) GP5DIR_reg)=data)
#define get_GP5DIR_reg   (*((volatile unsigned int*) GP5DIR_reg))
#define GP5DIR_inst_adr                                                              "0x0005"
#define GP5DIR_inst                                                                  0x0005
#define GP5DIR_GPDIR_shift                                                           (0)
#define GP5DIR_GPDIR_mask                                                            (0x000003FF)
#define GP5DIR_GPDIR(data)                                                           (0x000003FF&((data)<<0))
#define GP5DIR_GPDIR_src(data)                                                       ((0x000003FF&(data))>>0)
#define GP5DIR_get_GPDIR(data)                                                       ((0x000003FF&(data))>>0)


#define GP0DATO                                                                      0x1801BC18
#define GP0DATO_reg_addr                                                             "0xB801BC18"
#define GP0DATO_reg                                                                  0xB801BC18
#define set_GP0DATO_reg(data)   (*((volatile unsigned int*) GP0DATO_reg)=data)
#define get_GP0DATO_reg   (*((volatile unsigned int*) GP0DATO_reg))
#define GP0DATO_inst_adr                                                             "0x0006"
#define GP0DATO_inst                                                                 0x0006
#define GP0DATO_GPDATO_shift                                                         (0)
#define GP0DATO_GPDATO_mask                                                          (0xFFFFFFFF)
#define GP0DATO_GPDATO(data)                                                         (0xFFFFFFFF&((data)<<0))
#define GP0DATO_GPDATO_src(data)                                                     ((0xFFFFFFFF&(data))>>0)
#define GP0DATO_get_GPDATO(data)                                                     ((0xFFFFFFFF&(data))>>0)


#define GP1DATO                                                                      0x1801BC1C
#define GP1DATO_reg_addr                                                             "0xB801BC1C"
#define GP1DATO_reg                                                                  0xB801BC1C
#define set_GP1DATO_reg(data)   (*((volatile unsigned int*) GP1DATO_reg)=data)
#define get_GP1DATO_reg   (*((volatile unsigned int*) GP1DATO_reg))
#define GP1DATO_inst_adr                                                             "0x0007"
#define GP1DATO_inst                                                                 0x0007
#define GP1DATO_GPDATO_shift                                                         (0)
#define GP1DATO_GPDATO_mask                                                          (0xFFFFFFFF)
#define GP1DATO_GPDATO(data)                                                         (0xFFFFFFFF&((data)<<0))
#define GP1DATO_GPDATO_src(data)                                                     ((0xFFFFFFFF&(data))>>0)
#define GP1DATO_get_GPDATO(data)                                                     ((0xFFFFFFFF&(data))>>0)


#define GP2DATO                                                                      0x1801BC20
#define GP2DATO_reg_addr                                                             "0xB801BC20"
#define GP2DATO_reg                                                                  0xB801BC20
#define set_GP2DATO_reg(data)   (*((volatile unsigned int*) GP2DATO_reg)=data)
#define get_GP2DATO_reg   (*((volatile unsigned int*) GP2DATO_reg))
#define GP2DATO_inst_adr                                                             "0x0008"
#define GP2DATO_inst                                                                 0x0008
#define GP2DATO_GPDATO_shift                                                         (0)
#define GP2DATO_GPDATO_mask                                                          (0xFFFFFFFF)
#define GP2DATO_GPDATO(data)                                                         (0xFFFFFFFF&((data)<<0))
#define GP2DATO_GPDATO_src(data)                                                     ((0xFFFFFFFF&(data))>>0)
#define GP2DATO_get_GPDATO(data)                                                     ((0xFFFFFFFF&(data))>>0)


#define GP3DATO                                                                      0x1801BC24
#define GP3DATO_reg_addr                                                             "0xB801BC24"
#define GP3DATO_reg                                                                  0xB801BC24
#define set_GP3DATO_reg(data)   (*((volatile unsigned int*) GP3DATO_reg)=data)
#define get_GP3DATO_reg   (*((volatile unsigned int*) GP3DATO_reg))
#define GP3DATO_inst_adr                                                             "0x0009"
#define GP3DATO_inst                                                                 0x0009
#define GP3DATO_GPDATO_shift                                                         (0)
#define GP3DATO_GPDATO_mask                                                          (0xFFFFFFFF)
#define GP3DATO_GPDATO(data)                                                         (0xFFFFFFFF&((data)<<0))
#define GP3DATO_GPDATO_src(data)                                                     ((0xFFFFFFFF&(data))>>0)
#define GP3DATO_get_GPDATO(data)                                                     ((0xFFFFFFFF&(data))>>0)


#define GP4DATO                                                                      0x1801BC28
#define GP4DATO_reg_addr                                                             "0xB801BC28"
#define GP4DATO_reg                                                                  0xB801BC28
#define set_GP4DATO_reg(data)   (*((volatile unsigned int*) GP4DATO_reg)=data)
#define get_GP4DATO_reg   (*((volatile unsigned int*) GP4DATO_reg))
#define GP4DATO_inst_adr                                                             "0x000A"
#define GP4DATO_inst                                                                 0x000A
#define GP4DATO_GPDATO_shift                                                         (0)
#define GP4DATO_GPDATO_mask                                                          (0xFFFFFFFF)
#define GP4DATO_GPDATO(data)                                                         (0xFFFFFFFF&((data)<<0))
#define GP4DATO_GPDATO_src(data)                                                     ((0xFFFFFFFF&(data))>>0)
#define GP4DATO_get_GPDATO(data)                                                     ((0xFFFFFFFF&(data))>>0)


#define GP5DATO                                                                      0x1801BC2C
#define GP5DATO_reg_addr                                                             "0xB801BC2C"
#define GP5DATO_reg                                                                  0xB801BC2C
#define set_GP5DATO_reg(data)   (*((volatile unsigned int*) GP5DATO_reg)=data)
#define get_GP5DATO_reg   (*((volatile unsigned int*) GP5DATO_reg))
#define GP5DATO_inst_adr                                                             "0x000B"
#define GP5DATO_inst                                                                 0x000B
#define GP5DATO_GPDATO_shift                                                         (0)
#define GP5DATO_GPDATO_mask                                                          (0x000003FF)
#define GP5DATO_GPDATO(data)                                                         (0x000003FF&((data)<<0))
#define GP5DATO_GPDATO_src(data)                                                     ((0x000003FF&(data))>>0)
#define GP5DATO_get_GPDATO(data)                                                     ((0x000003FF&(data))>>0)


#define GP0DATI                                                                      0x1801BC30
#define GP0DATI_reg_addr                                                             "0xB801BC30"
#define GP0DATI_reg                                                                  0xB801BC30
#define set_GP0DATI_reg(data)   (*((volatile unsigned int*) GP0DATI_reg)=data)
#define get_GP0DATI_reg   (*((volatile unsigned int*) GP0DATI_reg))
#define GP0DATI_inst_adr                                                             "0x000C"
#define GP0DATI_inst                                                                 0x000C
#define GP0DATI_GPDATI_shift                                                         (0)
#define GP0DATI_GPDATI_mask                                                          (0xFFFFFFFF)
#define GP0DATI_GPDATI(data)                                                         (0xFFFFFFFF&((data)<<0))
#define GP0DATI_GPDATI_src(data)                                                     ((0xFFFFFFFF&(data))>>0)
#define GP0DATI_get_GPDATI(data)                                                     ((0xFFFFFFFF&(data))>>0)


#define GP1DATI                                                                      0x1801BC34
#define GP1DATI_reg_addr                                                             "0xB801BC34"
#define GP1DATI_reg                                                                  0xB801BC34
#define set_GP1DATI_reg(data)   (*((volatile unsigned int*) GP1DATI_reg)=data)
#define get_GP1DATI_reg   (*((volatile unsigned int*) GP1DATI_reg))
#define GP1DATI_inst_adr                                                             "0x000D"
#define GP1DATI_inst                                                                 0x000D
#define GP1DATI_GPDATI_shift                                                         (0)
#define GP1DATI_GPDATI_mask                                                          (0xFFFFFFFF)
#define GP1DATI_GPDATI(data)                                                         (0xFFFFFFFF&((data)<<0))
#define GP1DATI_GPDATI_src(data)                                                     ((0xFFFFFFFF&(data))>>0)
#define GP1DATI_get_GPDATI(data)                                                     ((0xFFFFFFFF&(data))>>0)


#define GP2DATI                                                                      0x1801BC38
#define GP2DATI_reg_addr                                                             "0xB801BC38"
#define GP2DATI_reg                                                                  0xB801BC38
#define set_GP2DATI_reg(data)   (*((volatile unsigned int*) GP2DATI_reg)=data)
#define get_GP2DATI_reg   (*((volatile unsigned int*) GP2DATI_reg))
#define GP2DATI_inst_adr                                                             "0x000E"
#define GP2DATI_inst                                                                 0x000E
#define GP2DATI_GPDATI_shift                                                         (0)
#define GP2DATI_GPDATI_mask                                                          (0xFFFFFFFF)
#define GP2DATI_GPDATI(data)                                                         (0xFFFFFFFF&((data)<<0))
#define GP2DATI_GPDATI_src(data)                                                     ((0xFFFFFFFF&(data))>>0)
#define GP2DATI_get_GPDATI(data)                                                     ((0xFFFFFFFF&(data))>>0)


#define GP3DATI                                                                      0x1801BC3C
#define GP3DATI_reg_addr                                                             "0xB801BC3C"
#define GP3DATI_reg                                                                  0xB801BC3C
#define set_GP3DATI_reg(data)   (*((volatile unsigned int*) GP3DATI_reg)=data)
#define get_GP3DATI_reg   (*((volatile unsigned int*) GP3DATI_reg))
#define GP3DATI_inst_adr                                                             "0x000F"
#define GP3DATI_inst                                                                 0x000F
#define GP3DATI_GPDATI_shift                                                         (0)
#define GP3DATI_GPDATI_mask                                                          (0xFFFFFFFF)
#define GP3DATI_GPDATI(data)                                                         (0xFFFFFFFF&((data)<<0))
#define GP3DATI_GPDATI_src(data)                                                     ((0xFFFFFFFF&(data))>>0)
#define GP3DATI_get_GPDATI(data)                                                     ((0xFFFFFFFF&(data))>>0)


#define GP4DATI                                                                      0x1801BC40
#define GP4DATI_reg_addr                                                             "0xB801BC40"
#define GP4DATI_reg                                                                  0xB801BC40
#define set_GP4DATI_reg(data)   (*((volatile unsigned int*) GP4DATI_reg)=data)
#define get_GP4DATI_reg   (*((volatile unsigned int*) GP4DATI_reg))
#define GP4DATI_inst_adr                                                             "0x0010"
#define GP4DATI_inst                                                                 0x0010
#define GP4DATI_GPDATI_shift                                                         (0)
#define GP4DATI_GPDATI_mask                                                          (0xFFFFFFFF)
#define GP4DATI_GPDATI(data)                                                         (0xFFFFFFFF&((data)<<0))
#define GP4DATI_GPDATI_src(data)                                                     ((0xFFFFFFFF&(data))>>0)
#define GP4DATI_get_GPDATI(data)                                                     ((0xFFFFFFFF&(data))>>0)


#define GP5DATI                                                                      0x1801BC44
#define GP5DATI_reg_addr                                                             "0xB801BC44"
#define GP5DATI_reg                                                                  0xB801BC44
#define set_GP5DATI_reg(data)   (*((volatile unsigned int*) GP5DATI_reg)=data)
#define get_GP5DATI_reg   (*((volatile unsigned int*) GP5DATI_reg))
#define GP5DATI_inst_adr                                                             "0x0011"
#define GP5DATI_inst                                                                 0x0011
#define GP5DATI_GPDATI_shift                                                         (0)
#define GP5DATI_GPDATI_mask                                                          (0x000003FF)
#define GP5DATI_GPDATI(data)                                                         (0x000003FF&((data)<<0))
#define GP5DATI_GPDATI_src(data)                                                     ((0x000003FF&(data))>>0)
#define GP5DATI_get_GPDATI(data)                                                     ((0x000003FF&(data))>>0)


#define GP0IE                                                                        0x1801BC48
#define GP0IE_reg_addr                                                               "0xB801BC48"
#define GP0IE_reg                                                                    0xB801BC48
#define set_GP0IE_reg(data)   (*((volatile unsigned int*) GP0IE_reg)=data)
#define get_GP0IE_reg   (*((volatile unsigned int*) GP0IE_reg))
#define GP0IE_inst_adr                                                               "0x0012"
#define GP0IE_inst                                                                   0x0012
#define GP0IE_GP_shift                                                               (0)
#define GP0IE_GP_mask                                                                (0xFFFFFFFF)
#define GP0IE_GP(data)                                                               (0xFFFFFFFF&((data)<<0))
#define GP0IE_GP_src(data)                                                           ((0xFFFFFFFF&(data))>>0)
#define GP0IE_get_GP(data)                                                           ((0xFFFFFFFF&(data))>>0)


#define GP1IE                                                                        0x1801BC4C
#define GP1IE_reg_addr                                                               "0xB801BC4C"
#define GP1IE_reg                                                                    0xB801BC4C
#define set_GP1IE_reg(data)   (*((volatile unsigned int*) GP1IE_reg)=data)
#define get_GP1IE_reg   (*((volatile unsigned int*) GP1IE_reg))
#define GP1IE_inst_adr                                                               "0x0013"
#define GP1IE_inst                                                                   0x0013
#define GP1IE_GP_shift                                                               (0)
#define GP1IE_GP_mask                                                                (0xFFFFFFFF)
#define GP1IE_GP(data)                                                               (0xFFFFFFFF&((data)<<0))
#define GP1IE_GP_src(data)                                                           ((0xFFFFFFFF&(data))>>0)
#define GP1IE_get_GP(data)                                                           ((0xFFFFFFFF&(data))>>0)


#define GP2IE                                                                        0x1801BC50
#define GP2IE_reg_addr                                                               "0xB801BC50"
#define GP2IE_reg                                                                    0xB801BC50
#define set_GP2IE_reg(data)   (*((volatile unsigned int*) GP2IE_reg)=data)
#define get_GP2IE_reg   (*((volatile unsigned int*) GP2IE_reg))
#define GP2IE_inst_adr                                                               "0x0014"
#define GP2IE_inst                                                                   0x0014
#define GP2IE_GP_shift                                                               (0)
#define GP2IE_GP_mask                                                                (0xFFFFFFFF)
#define GP2IE_GP(data)                                                               (0xFFFFFFFF&((data)<<0))
#define GP2IE_GP_src(data)                                                           ((0xFFFFFFFF&(data))>>0)
#define GP2IE_get_GP(data)                                                           ((0xFFFFFFFF&(data))>>0)


#define GP3IE                                                                        0x1801BC54
#define GP3IE_reg_addr                                                               "0xB801BC54"
#define GP3IE_reg                                                                    0xB801BC54
#define set_GP3IE_reg(data)   (*((volatile unsigned int*) GP3IE_reg)=data)
#define get_GP3IE_reg   (*((volatile unsigned int*) GP3IE_reg))
#define GP3IE_inst_adr                                                               "0x0015"
#define GP3IE_inst                                                                   0x0015
#define GP3IE_GP_shift                                                               (0)
#define GP3IE_GP_mask                                                                (0xFFFFFFFF)
#define GP3IE_GP(data)                                                               (0xFFFFFFFF&((data)<<0))
#define GP3IE_GP_src(data)                                                           ((0xFFFFFFFF&(data))>>0)
#define GP3IE_get_GP(data)                                                           ((0xFFFFFFFF&(data))>>0)


#define GP4IE                                                                        0x1801BC58
#define GP4IE_reg_addr                                                               "0xB801BC58"
#define GP4IE_reg                                                                    0xB801BC58
#define set_GP4IE_reg(data)   (*((volatile unsigned int*) GP4IE_reg)=data)
#define get_GP4IE_reg   (*((volatile unsigned int*) GP4IE_reg))
#define GP4IE_inst_adr                                                               "0x0016"
#define GP4IE_inst                                                                   0x0016
#define GP4IE_GP_shift                                                               (0)
#define GP4IE_GP_mask                                                                (0xFFFFFFFF)
#define GP4IE_GP(data)                                                               (0xFFFFFFFF&((data)<<0))
#define GP4IE_GP_src(data)                                                           ((0xFFFFFFFF&(data))>>0)
#define GP4IE_get_GP(data)                                                           ((0xFFFFFFFF&(data))>>0)


#define GP5IE                                                                        0x1801BC5C
#define GP5IE_reg_addr                                                               "0xB801BC5C"
#define GP5IE_reg                                                                    0xB801BC5C
#define set_GP5IE_reg(data)   (*((volatile unsigned int*) GP5IE_reg)=data)
#define get_GP5IE_reg   (*((volatile unsigned int*) GP5IE_reg))
#define GP5IE_inst_adr                                                               "0x0017"
#define GP5IE_inst                                                                   0x0017
#define GP5IE_GP_shift                                                               (0)
#define GP5IE_GP_mask                                                                (0x000003FF)
#define GP5IE_GP(data)                                                               (0x000003FF&((data)<<0))
#define GP5IE_GP_src(data)                                                           ((0x000003FF&(data))>>0)
#define GP5IE_get_GP(data)                                                           ((0x000003FF&(data))>>0)


#define GP0DP                                                                        0x1801BC60
#define GP0DP_reg_addr                                                               "0xB801BC60"
#define GP0DP_reg                                                                    0xB801BC60
#define set_GP0DP_reg(data)   (*((volatile unsigned int*) GP0DP_reg)=data)
#define get_GP0DP_reg   (*((volatile unsigned int*) GP0DP_reg))
#define GP0DP_inst_adr                                                               "0x0018"
#define GP0DP_inst                                                                   0x0018
#define GP0DP_GPHA_shift                                                             (0)
#define GP0DP_GPHA_mask                                                              (0xFFFFFFFF)
#define GP0DP_GPHA(data)                                                             (0xFFFFFFFF&((data)<<0))
#define GP0DP_GPHA_src(data)                                                         ((0xFFFFFFFF&(data))>>0)
#define GP0DP_get_GPHA(data)                                                         ((0xFFFFFFFF&(data))>>0)


#define GP1DP                                                                        0x1801BC64
#define GP1DP_reg_addr                                                               "0xB801BC64"
#define GP1DP_reg                                                                    0xB801BC64
#define set_GP1DP_reg(data)   (*((volatile unsigned int*) GP1DP_reg)=data)
#define get_GP1DP_reg   (*((volatile unsigned int*) GP1DP_reg))
#define GP1DP_inst_adr                                                               "0x0019"
#define GP1DP_inst                                                                   0x0019
#define GP1DP_GPHA_shift                                                             (0)
#define GP1DP_GPHA_mask                                                              (0xFFFFFFFF)
#define GP1DP_GPHA(data)                                                             (0xFFFFFFFF&((data)<<0))
#define GP1DP_GPHA_src(data)                                                         ((0xFFFFFFFF&(data))>>0)
#define GP1DP_get_GPHA(data)                                                         ((0xFFFFFFFF&(data))>>0)


#define GP2DP                                                                        0x1801BC68
#define GP2DP_reg_addr                                                               "0xB801BC68"
#define GP2DP_reg                                                                    0xB801BC68
#define set_GP2DP_reg(data)   (*((volatile unsigned int*) GP2DP_reg)=data)
#define get_GP2DP_reg   (*((volatile unsigned int*) GP2DP_reg))
#define GP2DP_inst_adr                                                               "0x001A"
#define GP2DP_inst                                                                   0x001A
#define GP2DP_GPHA_shift                                                             (0)
#define GP2DP_GPHA_mask                                                              (0xFFFFFFFF)
#define GP2DP_GPHA(data)                                                             (0xFFFFFFFF&((data)<<0))
#define GP2DP_GPHA_src(data)                                                         ((0xFFFFFFFF&(data))>>0)
#define GP2DP_get_GPHA(data)                                                         ((0xFFFFFFFF&(data))>>0)


#define GP3DP                                                                        0x1801BC6C
#define GP3DP_reg_addr                                                               "0xB801BC6C"
#define GP3DP_reg                                                                    0xB801BC6C
#define set_GP3DP_reg(data)   (*((volatile unsigned int*) GP3DP_reg)=data)
#define get_GP3DP_reg   (*((volatile unsigned int*) GP3DP_reg))
#define GP3DP_inst_adr                                                               "0x001B"
#define GP3DP_inst                                                                   0x001B
#define GP3DP_GPHA_shift                                                             (0)
#define GP3DP_GPHA_mask                                                              (0xFFFFFFFF)
#define GP3DP_GPHA(data)                                                             (0xFFFFFFFF&((data)<<0))
#define GP3DP_GPHA_src(data)                                                         ((0xFFFFFFFF&(data))>>0)
#define GP3DP_get_GPHA(data)                                                         ((0xFFFFFFFF&(data))>>0)


#define GP4DP                                                                        0x1801BC70
#define GP4DP_reg_addr                                                               "0xB801BC70"
#define GP4DP_reg                                                                    0xB801BC70
#define set_GP4DP_reg(data)   (*((volatile unsigned int*) GP4DP_reg)=data)
#define get_GP4DP_reg   (*((volatile unsigned int*) GP4DP_reg))
#define GP4DP_inst_adr                                                               "0x001C"
#define GP4DP_inst                                                                   0x001C
#define GP4DP_GPHA_shift                                                             (0)
#define GP4DP_GPHA_mask                                                              (0xFFFFFFFF)
#define GP4DP_GPHA(data)                                                             (0xFFFFFFFF&((data)<<0))
#define GP4DP_GPHA_src(data)                                                         ((0xFFFFFFFF&(data))>>0)
#define GP4DP_get_GPHA(data)                                                         ((0xFFFFFFFF&(data))>>0)


#define GP5DP                                                                        0x1801BC74
#define GP5DP_reg_addr                                                               "0xB801BC74"
#define GP5DP_reg                                                                    0xB801BC74
#define set_GP5DP_reg(data)   (*((volatile unsigned int*) GP5DP_reg)=data)
#define get_GP5DP_reg   (*((volatile unsigned int*) GP5DP_reg))
#define GP5DP_inst_adr                                                               "0x001D"
#define GP5DP_inst                                                                   0x001D
#define GP5DP_GPHA_shift                                                             (0)
#define GP5DP_GPHA_mask                                                              (0x000003FF)
#define GP5DP_GPHA(data)                                                             (0x000003FF&((data)<<0))
#define GP5DP_GPHA_src(data)                                                         ((0x000003FF&(data))>>0)
#define GP5DP_get_GPHA(data)                                                         ((0x000003FF&(data))>>0)


#define GPDEB                                                                        0x1801BC78
#define GPDEB_reg_addr                                                               "0xB801BC78"
#define GPDEB_reg                                                                    0xB801BC78
#define set_GPDEB_reg(data)   (*((volatile unsigned int*) GPDEB_reg)=data)
#define get_GPDEB_reg   (*((volatile unsigned int*) GPDEB_reg))
#define GPDEB_inst_adr                                                               "0x001E"
#define GPDEB_inst                                                                   0x001E
#define GPDEB_write_enable8_shift                                                    (31)
#define GPDEB_write_enable8_mask                                                     (0x80000000)
#define GPDEB_write_enable8(data)                                                    (0x80000000&((data)<<31))
#define GPDEB_write_enable8_src(data)                                                ((0x80000000&(data))>>31)
#define GPDEB_get_write_enable8(data)                                                ((0x80000000&(data))>>31)
#define GPDEB_CLK8_shift                                                             (28)
#define GPDEB_CLK8_mask                                                              (0x70000000)
#define GPDEB_CLK8(data)                                                             (0x70000000&((data)<<28))
#define GPDEB_CLK8_src(data)                                                         ((0x70000000&(data))>>28)
#define GPDEB_get_CLK8(data)                                                         ((0x70000000&(data))>>28)
#define GPDEB_write_enable7_shift                                                    (27)
#define GPDEB_write_enable7_mask                                                     (0x08000000)
#define GPDEB_write_enable7(data)                                                    (0x08000000&((data)<<27))
#define GPDEB_write_enable7_src(data)                                                ((0x08000000&(data))>>27)
#define GPDEB_get_write_enable7(data)                                                ((0x08000000&(data))>>27)
#define GPDEB_CLK7_shift                                                             (24)
#define GPDEB_CLK7_mask                                                              (0x07000000)
#define GPDEB_CLK7(data)                                                             (0x07000000&((data)<<24))
#define GPDEB_CLK7_src(data)                                                         ((0x07000000&(data))>>24)
#define GPDEB_get_CLK7(data)                                                         ((0x07000000&(data))>>24)
#define GPDEB_write_enable6_shift                                                    (23)
#define GPDEB_write_enable6_mask                                                     (0x00800000)
#define GPDEB_write_enable6(data)                                                    (0x00800000&((data)<<23))
#define GPDEB_write_enable6_src(data)                                                ((0x00800000&(data))>>23)
#define GPDEB_get_write_enable6(data)                                                ((0x00800000&(data))>>23)
#define GPDEB_CLK6_shift                                                             (20)
#define GPDEB_CLK6_mask                                                              (0x00700000)
#define GPDEB_CLK6(data)                                                             (0x00700000&((data)<<20))
#define GPDEB_CLK6_src(data)                                                         ((0x00700000&(data))>>20)
#define GPDEB_get_CLK6(data)                                                         ((0x00700000&(data))>>20)
#define GPDEB_write_enable5_shift                                                    (19)
#define GPDEB_write_enable5_mask                                                     (0x00080000)
#define GPDEB_write_enable5(data)                                                    (0x00080000&((data)<<19))
#define GPDEB_write_enable5_src(data)                                                ((0x00080000&(data))>>19)
#define GPDEB_get_write_enable5(data)                                                ((0x00080000&(data))>>19)
#define GPDEB_CLK5_shift                                                             (16)
#define GPDEB_CLK5_mask                                                              (0x00070000)
#define GPDEB_CLK5(data)                                                             (0x00070000&((data)<<16))
#define GPDEB_CLK5_src(data)                                                         ((0x00070000&(data))>>16)
#define GPDEB_get_CLK5(data)                                                         ((0x00070000&(data))>>16)
#define GPDEB_write_enable4_shift                                                    (15)
#define GPDEB_write_enable4_mask                                                     (0x00008000)
#define GPDEB_write_enable4(data)                                                    (0x00008000&((data)<<15))
#define GPDEB_write_enable4_src(data)                                                ((0x00008000&(data))>>15)
#define GPDEB_get_write_enable4(data)                                                ((0x00008000&(data))>>15)
#define GPDEB_CLK4_shift                                                             (12)
#define GPDEB_CLK4_mask                                                              (0x00007000)
#define GPDEB_CLK4(data)                                                             (0x00007000&((data)<<12))
#define GPDEB_CLK4_src(data)                                                         ((0x00007000&(data))>>12)
#define GPDEB_get_CLK4(data)                                                         ((0x00007000&(data))>>12)
#define GPDEB_write_enable3_shift                                                    (11)
#define GPDEB_write_enable3_mask                                                     (0x00000800)
#define GPDEB_write_enable3(data)                                                    (0x00000800&((data)<<11))
#define GPDEB_write_enable3_src(data)                                                ((0x00000800&(data))>>11)
#define GPDEB_get_write_enable3(data)                                                ((0x00000800&(data))>>11)
#define GPDEB_CLK3_shift                                                             (8)
#define GPDEB_CLK3_mask                                                              (0x00000700)
#define GPDEB_CLK3(data)                                                             (0x00000700&((data)<<8))
#define GPDEB_CLK3_src(data)                                                         ((0x00000700&(data))>>8)
#define GPDEB_get_CLK3(data)                                                         ((0x00000700&(data))>>8)
#define GPDEB_write_enable2_shift                                                    (7)
#define GPDEB_write_enable2_mask                                                     (0x00000080)
#define GPDEB_write_enable2(data)                                                    (0x00000080&((data)<<7))
#define GPDEB_write_enable2_src(data)                                                ((0x00000080&(data))>>7)
#define GPDEB_get_write_enable2(data)                                                ((0x00000080&(data))>>7)
#define GPDEB_CLK2_shift                                                             (4)
#define GPDEB_CLK2_mask                                                              (0x00000070)
#define GPDEB_CLK2(data)                                                             (0x00000070&((data)<<4))
#define GPDEB_CLK2_src(data)                                                         ((0x00000070&(data))>>4)
#define GPDEB_get_CLK2(data)                                                         ((0x00000070&(data))>>4)
#define GPDEB_write_enable1_shift                                                    (3)
#define GPDEB_write_enable1_mask                                                     (0x00000008)
#define GPDEB_write_enable1(data)                                                    (0x00000008&((data)<<3))
#define GPDEB_write_enable1_src(data)                                                ((0x00000008&(data))>>3)
#define GPDEB_get_write_enable1(data)                                                ((0x00000008&(data))>>3)
#define GPDEB_CLK1_shift                                                             (0)
#define GPDEB_CLK1_mask                                                              (0x00000007)
#define GPDEB_CLK1(data)                                                             (0x00000007&((data)<<0))
#define GPDEB_CLK1_src(data)                                                         ((0x00000007&(data))>>0)
#define GPDEB_get_CLK1(data)                                                         ((0x00000007&(data))>>0)


#define GPDEB_1                                                                      0x1801BC7C
#define GPDEB_1_reg_addr                                                             "0xB801BC7C"
#define GPDEB_1_reg                                                                  0xB801BC7C
#define set_GPDEB_1_reg(data)   (*((volatile unsigned int*) GPDEB_1_reg)=data)
#define get_GPDEB_1_reg   (*((volatile unsigned int*) GPDEB_1_reg))
#define GPDEB_1_inst_adr                                                             "0x001F"
#define GPDEB_1_inst                                                                 0x001F
#define GPDEB_1_write_enable3_shift                                                  (11)
#define GPDEB_1_write_enable3_mask                                                   (0x00000800)
#define GPDEB_1_write_enable3(data)                                                  (0x00000800&((data)<<11))
#define GPDEB_1_write_enable3_src(data)                                              ((0x00000800&(data))>>11)
#define GPDEB_1_get_write_enable3(data)                                              ((0x00000800&(data))>>11)
#define GPDEB_1_CLK3_shift                                                           (8)
#define GPDEB_1_CLK3_mask                                                            (0x00000700)
#define GPDEB_1_CLK3(data)                                                           (0x00000700&((data)<<8))
#define GPDEB_1_CLK3_src(data)                                                       ((0x00000700&(data))>>8)
#define GPDEB_1_get_CLK3(data)                                                       ((0x00000700&(data))>>8)
#define GPDEB_1_write_enable2_shift                                                  (7)
#define GPDEB_1_write_enable2_mask                                                   (0x00000080)
#define GPDEB_1_write_enable2(data)                                                  (0x00000080&((data)<<7))
#define GPDEB_1_write_enable2_src(data)                                              ((0x00000080&(data))>>7)
#define GPDEB_1_get_write_enable2(data)                                              ((0x00000080&(data))>>7)
#define GPDEB_1_CLK2_shift                                                           (4)
#define GPDEB_1_CLK2_mask                                                            (0x00000070)
#define GPDEB_1_CLK2(data)                                                           (0x00000070&((data)<<4))
#define GPDEB_1_CLK2_src(data)                                                       ((0x00000070&(data))>>4)
#define GPDEB_1_get_CLK2(data)                                                       ((0x00000070&(data))>>4)
#define GPDEB_1_write_enable1_shift                                                  (3)
#define GPDEB_1_write_enable1_mask                                                   (0x00000008)
#define GPDEB_1_write_enable1(data)                                                  (0x00000008&((data)<<3))
#define GPDEB_1_write_enable1_src(data)                                              ((0x00000008&(data))>>3)
#define GPDEB_1_get_write_enable1(data)                                              ((0x00000008&(data))>>3)
#define GPDEB_1_CLK1_shift                                                           (0)
#define GPDEB_1_CLK1_mask                                                            (0x00000007)
#define GPDEB_1_CLK1(data)                                                           (0x00000007&((data)<<0))
#define GPDEB_1_CLK1_src(data)                                                       ((0x00000007&(data))>>0)
#define GPDEB_1_get_CLK1(data)                                                       ((0x00000007&(data))>>0)


#define U1RBR_THR_DLL                                                                0x1801B100
#define U1RBR_THR_DLL_reg_addr                                                       "0xB801B100"
#define U1RBR_THR_DLL_reg                                                            0xB801B100
#define set_U1RBR_THR_DLL_reg(data)   (*((volatile unsigned int*) U1RBR_THR_DLL_reg)=data)
#define get_U1RBR_THR_DLL_reg   (*((volatile unsigned int*) U1RBR_THR_DLL_reg))
#define U1RBR_THR_DLL_inst_adr                                                       "0x0040"
#define U1RBR_THR_DLL_inst                                                           0x0040
#define U1RBR_THR_DLL_DLL_shift                                                      (0)
#define U1RBR_THR_DLL_DLL_mask                                                       (0x000000FF)
#define U1RBR_THR_DLL_DLL(data)                                                      (0x000000FF&((data)<<0))
#define U1RBR_THR_DLL_DLL_src(data)                                                  ((0x000000FF&(data))>>0)
#define U1RBR_THR_DLL_get_DLL(data)                                                  ((0x000000FF&(data))>>0)


#define U1IER_DLH                                                                    0x1801B104
#define U1IER_DLH_reg_addr                                                           "0xB801B104"
#define U1IER_DLH_reg                                                                0xB801B104
#define set_U1IER_DLH_reg(data)   (*((volatile unsigned int*) U1IER_DLH_reg)=data)
#define get_U1IER_DLH_reg   (*((volatile unsigned int*) U1IER_DLH_reg))
#define U1IER_DLH_inst_adr                                                           "0x0041"
#define U1IER_DLH_inst                                                               0x0041
#define U1IER_DLH_DLH_shift                                                          (0)
#define U1IER_DLH_DLH_mask                                                           (0x000000FF)
#define U1IER_DLH_DLH(data)                                                          (0x000000FF&((data)<<0))
#define U1IER_DLH_DLH_src(data)                                                      ((0x000000FF&(data))>>0)
#define U1IER_DLH_get_DLH(data)                                                      ((0x000000FF&(data))>>0)


#define U1IIR_FCR                                                                    0x1801B108
#define U1IIR_FCR_reg_addr                                                           "0xB801B108"
#define U1IIR_FCR_reg                                                                0xB801B108
#define set_U1IIR_FCR_reg(data)   (*((volatile unsigned int*) U1IIR_FCR_reg)=data)
#define get_U1IIR_FCR_reg   (*((volatile unsigned int*) U1IIR_FCR_reg))
#define U1IIR_FCR_inst_adr                                                           "0x0042"
#define U1IIR_FCR_inst                                                               0x0042
#define U1IIR_FCR_FIFO16_shift                                                       (6)
#define U1IIR_FCR_FIFO16_mask                                                        (0x000000C0)
#define U1IIR_FCR_FIFO16(data)                                                       (0x000000C0&((data)<<6))
#define U1IIR_FCR_FIFO16_src(data)                                                   ((0x000000C0&(data))>>6)
#define U1IIR_FCR_get_FIFO16(data)                                                   ((0x000000C0&(data))>>6)
#define U1IIR_FCR_IID_shift                                                          (0)
#define U1IIR_FCR_IID_mask                                                           (0x0000000F)
#define U1IIR_FCR_IID(data)                                                          (0x0000000F&((data)<<0))
#define U1IIR_FCR_IID_src(data)                                                      ((0x0000000F&(data))>>0)
#define U1IIR_FCR_get_IID(data)                                                      ((0x0000000F&(data))>>0)


#define U1LCR                                                                        0x1801B10C
#define U1LCR_reg_addr                                                               "0xB801B10C"
#define U1LCR_reg                                                                    0xB801B10C
#define set_U1LCR_reg(data)   (*((volatile unsigned int*) U1LCR_reg)=data)
#define get_U1LCR_reg   (*((volatile unsigned int*) U1LCR_reg))
#define U1LCR_inst_adr                                                               "0x0043"
#define U1LCR_inst                                                                   0x0043
#define U1LCR_DLAB_shift                                                             (7)
#define U1LCR_DLAB_mask                                                              (0x00000080)
#define U1LCR_DLAB(data)                                                             (0x00000080&((data)<<7))
#define U1LCR_DLAB_src(data)                                                         ((0x00000080&(data))>>7)
#define U1LCR_get_DLAB(data)                                                         ((0x00000080&(data))>>7)
#define U1LCR_BRK_shift                                                              (6)
#define U1LCR_BRK_mask                                                               (0x00000040)
#define U1LCR_BRK(data)                                                              (0x00000040&((data)<<6))
#define U1LCR_BRK_src(data)                                                          ((0x00000040&(data))>>6)
#define U1LCR_get_BRK(data)                                                          ((0x00000040&(data))>>6)
#define U1LCR_EPS_shift                                                              (4)
#define U1LCR_EPS_mask                                                               (0x00000030)
#define U1LCR_EPS(data)                                                              (0x00000030&((data)<<4))
#define U1LCR_EPS_src(data)                                                          ((0x00000030&(data))>>4)
#define U1LCR_get_EPS(data)                                                          ((0x00000030&(data))>>4)
#define U1LCR_PEN_shift                                                              (3)
#define U1LCR_PEN_mask                                                               (0x00000008)
#define U1LCR_PEN(data)                                                              (0x00000008&((data)<<3))
#define U1LCR_PEN_src(data)                                                          ((0x00000008&(data))>>3)
#define U1LCR_get_PEN(data)                                                          ((0x00000008&(data))>>3)
#define U1LCR_STB_shift                                                              (2)
#define U1LCR_STB_mask                                                               (0x00000004)
#define U1LCR_STB(data)                                                              (0x00000004&((data)<<2))
#define U1LCR_STB_src(data)                                                          ((0x00000004&(data))>>2)
#define U1LCR_get_STB(data)                                                          ((0x00000004&(data))>>2)
#define U1LCR_WLS_shift                                                              (0)
#define U1LCR_WLS_mask                                                               (0x00000003)
#define U1LCR_WLS(data)                                                              (0x00000003&((data)<<0))
#define U1LCR_WLS_src(data)                                                          ((0x00000003&(data))>>0)
#define U1LCR_get_WLS(data)                                                          ((0x00000003&(data))>>0)


#define U1MCR                                                                        0x1801B110
#define U1MCR_reg_addr                                                               "0xB801B110"
#define U1MCR_reg                                                                    0xB801B110
#define set_U1MCR_reg(data)   (*((volatile unsigned int*) U1MCR_reg)=data)
#define get_U1MCR_reg   (*((volatile unsigned int*) U1MCR_reg))
#define U1MCR_inst_adr                                                               "0x0044"
#define U1MCR_inst                                                                   0x0044
#define U1MCR_LOOP_shift                                                             (4)
#define U1MCR_LOOP_mask                                                              (0x00000010)
#define U1MCR_LOOP(data)                                                             (0x00000010&((data)<<4))
#define U1MCR_LOOP_src(data)                                                         ((0x00000010&(data))>>4)
#define U1MCR_get_LOOP(data)                                                         ((0x00000010&(data))>>4)
#define U1MCR_RTS_shift                                                              (1)
#define U1MCR_RTS_mask                                                               (0x00000002)
#define U1MCR_RTS(data)                                                              (0x00000002&((data)<<1))
#define U1MCR_RTS_src(data)                                                          ((0x00000002&(data))>>1)
#define U1MCR_get_RTS(data)                                                          ((0x00000002&(data))>>1)
#define U1MCR_DTR_shift                                                              (0)
#define U1MCR_DTR_mask                                                               (0x00000001)
#define U1MCR_DTR(data)                                                              (0x00000001&((data)<<0))
#define U1MCR_DTR_src(data)                                                          ((0x00000001&(data))>>0)
#define U1MCR_get_DTR(data)                                                          ((0x00000001&(data))>>0)


#define U1LSR                                                                        0x1801B114
#define U1LSR_reg_addr                                                               "0xB801B114"
#define U1LSR_reg                                                                    0xB801B114
#define set_U1LSR_reg(data)   (*((volatile unsigned int*) U1LSR_reg)=data)
#define get_U1LSR_reg   (*((volatile unsigned int*) U1LSR_reg))
#define U1LSR_inst_adr                                                               "0x0045"
#define U1LSR_inst                                                                   0x0045
#define U1LSR_RFE_shift                                                              (7)
#define U1LSR_RFE_mask                                                               (0x00000080)
#define U1LSR_RFE(data)                                                              (0x00000080&((data)<<7))
#define U1LSR_RFE_src(data)                                                          ((0x00000080&(data))>>7)
#define U1LSR_get_RFE(data)                                                          ((0x00000080&(data))>>7)
#define U1LSR_TEMT_shift                                                             (6)
#define U1LSR_TEMT_mask                                                              (0x00000040)
#define U1LSR_TEMT(data)                                                             (0x00000040&((data)<<6))
#define U1LSR_TEMT_src(data)                                                         ((0x00000040&(data))>>6)
#define U1LSR_get_TEMT(data)                                                         ((0x00000040&(data))>>6)
#define U1LSR_THRE_shift                                                             (5)
#define U1LSR_THRE_mask                                                              (0x00000020)
#define U1LSR_THRE(data)                                                             (0x00000020&((data)<<5))
#define U1LSR_THRE_src(data)                                                         ((0x00000020&(data))>>5)
#define U1LSR_get_THRE(data)                                                         ((0x00000020&(data))>>5)
#define U1LSR_BI_shift                                                               (4)
#define U1LSR_BI_mask                                                                (0x00000010)
#define U1LSR_BI(data)                                                               (0x00000010&((data)<<4))
#define U1LSR_BI_src(data)                                                           ((0x00000010&(data))>>4)
#define U1LSR_get_BI(data)                                                           ((0x00000010&(data))>>4)
#define U1LSR_FE_shift                                                               (3)
#define U1LSR_FE_mask                                                                (0x00000008)
#define U1LSR_FE(data)                                                               (0x00000008&((data)<<3))
#define U1LSR_FE_src(data)                                                           ((0x00000008&(data))>>3)
#define U1LSR_get_FE(data)                                                           ((0x00000008&(data))>>3)
#define U1LSR_PE_shift                                                               (2)
#define U1LSR_PE_mask                                                                (0x00000004)
#define U1LSR_PE(data)                                                               (0x00000004&((data)<<2))
#define U1LSR_PE_src(data)                                                           ((0x00000004&(data))>>2)
#define U1LSR_get_PE(data)                                                           ((0x00000004&(data))>>2)
#define U1LSR_OE_shift                                                               (1)
#define U1LSR_OE_mask                                                                (0x00000002)
#define U1LSR_OE(data)                                                               (0x00000002&((data)<<1))
#define U1LSR_OE_src(data)                                                           ((0x00000002&(data))>>1)
#define U1LSR_get_OE(data)                                                           ((0x00000002&(data))>>1)
#define U1LSR_DR_shift                                                               (0)
#define U1LSR_DR_mask                                                                (0x00000001)
#define U1LSR_DR(data)                                                               (0x00000001&((data)<<0))
#define U1LSR_DR_src(data)                                                           ((0x00000001&(data))>>0)
#define U1LSR_get_DR(data)                                                           ((0x00000001&(data))>>0)


#define U1MSR                                                                        0x1801B118
#define U1MSR_reg_addr                                                               "0xB801B118"
#define U1MSR_reg                                                                    0xB801B118
#define set_U1MSR_reg(data)   (*((volatile unsigned int*) U1MSR_reg)=data)
#define get_U1MSR_reg   (*((volatile unsigned int*) U1MSR_reg))
#define U1MSR_inst_adr                                                               "0x0046"
#define U1MSR_inst                                                                   0x0046
#define U1MSR_DCD_shift                                                              (7)
#define U1MSR_DCD_mask                                                               (0x00000080)
#define U1MSR_DCD(data)                                                              (0x00000080&((data)<<7))
#define U1MSR_DCD_src(data)                                                          ((0x00000080&(data))>>7)
#define U1MSR_get_DCD(data)                                                          ((0x00000080&(data))>>7)
#define U1MSR_RI_shift                                                               (6)
#define U1MSR_RI_mask                                                                (0x00000040)
#define U1MSR_RI(data)                                                               (0x00000040&((data)<<6))
#define U1MSR_RI_src(data)                                                           ((0x00000040&(data))>>6)
#define U1MSR_get_RI(data)                                                           ((0x00000040&(data))>>6)
#define U1MSR_DSR_shift                                                              (5)
#define U1MSR_DSR_mask                                                               (0x00000020)
#define U1MSR_DSR(data)                                                              (0x00000020&((data)<<5))
#define U1MSR_DSR_src(data)                                                          ((0x00000020&(data))>>5)
#define U1MSR_get_DSR(data)                                                          ((0x00000020&(data))>>5)
#define U1MSR_CTS_shift                                                              (4)
#define U1MSR_CTS_mask                                                               (0x00000010)
#define U1MSR_CTS(data)                                                              (0x00000010&((data)<<4))
#define U1MSR_CTS_src(data)                                                          ((0x00000010&(data))>>4)
#define U1MSR_get_CTS(data)                                                          ((0x00000010&(data))>>4)
#define U1MSR_DDCD_shift                                                             (3)
#define U1MSR_DDCD_mask                                                              (0x00000008)
#define U1MSR_DDCD(data)                                                             (0x00000008&((data)<<3))
#define U1MSR_DDCD_src(data)                                                         ((0x00000008&(data))>>3)
#define U1MSR_get_DDCD(data)                                                         ((0x00000008&(data))>>3)
#define U1MSR_TERI_shift                                                             (2)
#define U1MSR_TERI_mask                                                              (0x00000004)
#define U1MSR_TERI(data)                                                             (0x00000004&((data)<<2))
#define U1MSR_TERI_src(data)                                                         ((0x00000004&(data))>>2)
#define U1MSR_get_TERI(data)                                                         ((0x00000004&(data))>>2)
#define U1MSR_DDSR_shift                                                             (1)
#define U1MSR_DDSR_mask                                                              (0x00000002)
#define U1MSR_DDSR(data)                                                             (0x00000002&((data)<<1))
#define U1MSR_DDSR_src(data)                                                         ((0x00000002&(data))>>1)
#define U1MSR_get_DDSR(data)                                                         ((0x00000002&(data))>>1)
#define U1MSR_DCTS_shift                                                             (0)
#define U1MSR_DCTS_mask                                                              (0x00000001)
#define U1MSR_DCTS(data)                                                             (0x00000001&((data)<<0))
#define U1MSR_DCTS_src(data)                                                         ((0x00000001&(data))>>0)
#define U1MSR_get_DCTS(data)                                                         ((0x00000001&(data))>>0)


#define U1SCR                                                                        0x1801B11C
#define U1SCR_reg_addr                                                               "0xB801B11C"
#define U1SCR_reg                                                                    0xB801B11C
#define set_U1SCR_reg(data)   (*((volatile unsigned int*) U1SCR_reg)=data)
#define get_U1SCR_reg   (*((volatile unsigned int*) U1SCR_reg))
#define U1SCR_inst_adr                                                               "0x0047"
#define U1SCR_inst                                                                   0x0047
#define U1SCR_SCR_shift                                                              (0)
#define U1SCR_SCR_mask                                                               (0x000000FF)
#define U1SCR_SCR(data)                                                              (0x000000FF&((data)<<0))
#define U1SCR_SCR_src(data)                                                          ((0x000000FF&(data))>>0)
#define U1SCR_get_SCR(data)                                                          ((0x000000FF&(data))>>0)


#define U2RBR_THR_DLL                                                                0x1801B200
#define U2RBR_THR_DLL_reg_addr                                                       "0xB801B200"
#define U2RBR_THR_DLL_reg                                                            0xB801B200
#define set_U2RBR_THR_DLL_reg(data)   (*((volatile unsigned int*) U2RBR_THR_DLL_reg)=data)
#define get_U2RBR_THR_DLL_reg   (*((volatile unsigned int*) U2RBR_THR_DLL_reg))
#define U2RBR_THR_DLL_inst_adr                                                       "0x0080"
#define U2RBR_THR_DLL_inst                                                           0x0080
#define U2RBR_THR_DLL_DLL_shift                                                      (0)
#define U2RBR_THR_DLL_DLL_mask                                                       (0x000000FF)
#define U2RBR_THR_DLL_DLL(data)                                                      (0x000000FF&((data)<<0))
#define U2RBR_THR_DLL_DLL_src(data)                                                  ((0x000000FF&(data))>>0)
#define U2RBR_THR_DLL_get_DLL(data)                                                  ((0x000000FF&(data))>>0)


#define U2IER_DLH                                                                    0x1801B204
#define U2IER_DLH_reg_addr                                                           "0xB801B204"
#define U2IER_DLH_reg                                                                0xB801B204
#define set_U2IER_DLH_reg(data)   (*((volatile unsigned int*) U2IER_DLH_reg)=data)
#define get_U2IER_DLH_reg   (*((volatile unsigned int*) U2IER_DLH_reg))
#define U2IER_DLH_inst_adr                                                           "0x0081"
#define U2IER_DLH_inst                                                               0x0081
#define U2IER_DLH_DLH_shift                                                          (0)
#define U2IER_DLH_DLH_mask                                                           (0x000000FF)
#define U2IER_DLH_DLH(data)                                                          (0x000000FF&((data)<<0))
#define U2IER_DLH_DLH_src(data)                                                      ((0x000000FF&(data))>>0)
#define U2IER_DLH_get_DLH(data)                                                      ((0x000000FF&(data))>>0)


#define U2IIR_FCR                                                                    0x1801B208
#define U2IIR_FCR_reg_addr                                                           "0xB801B208"
#define U2IIR_FCR_reg                                                                0xB801B208
#define set_U2IIR_FCR_reg(data)   (*((volatile unsigned int*) U2IIR_FCR_reg)=data)
#define get_U2IIR_FCR_reg   (*((volatile unsigned int*) U2IIR_FCR_reg))
#define U2IIR_FCR_inst_adr                                                           "0x0082"
#define U2IIR_FCR_inst                                                               0x0082
#define U2IIR_FCR_FIFO16_shift                                                       (6)
#define U2IIR_FCR_FIFO16_mask                                                        (0x000000C0)
#define U2IIR_FCR_FIFO16(data)                                                       (0x000000C0&((data)<<6))
#define U2IIR_FCR_FIFO16_src(data)                                                   ((0x000000C0&(data))>>6)
#define U2IIR_FCR_get_FIFO16(data)                                                   ((0x000000C0&(data))>>6)
#define U2IIR_FCR_IID_shift                                                          (0)
#define U2IIR_FCR_IID_mask                                                           (0x0000000F)
#define U2IIR_FCR_IID(data)                                                          (0x0000000F&((data)<<0))
#define U2IIR_FCR_IID_src(data)                                                      ((0x0000000F&(data))>>0)
#define U2IIR_FCR_get_IID(data)                                                      ((0x0000000F&(data))>>0)


#define U2LCR                                                                        0x1801B20C
#define U2LCR_reg_addr                                                               "0xB801B20C"
#define U2LCR_reg                                                                    0xB801B20C
#define set_U2LCR_reg(data)   (*((volatile unsigned int*) U2LCR_reg)=data)
#define get_U2LCR_reg   (*((volatile unsigned int*) U2LCR_reg))
#define U2LCR_inst_adr                                                               "0x0083"
#define U2LCR_inst                                                                   0x0083
#define U2LCR_DLAB_shift                                                             (7)
#define U2LCR_DLAB_mask                                                              (0x00000080)
#define U2LCR_DLAB(data)                                                             (0x00000080&((data)<<7))
#define U2LCR_DLAB_src(data)                                                         ((0x00000080&(data))>>7)
#define U2LCR_get_DLAB(data)                                                         ((0x00000080&(data))>>7)
#define U2LCR_BRK_shift                                                              (6)
#define U2LCR_BRK_mask                                                               (0x00000040)
#define U2LCR_BRK(data)                                                              (0x00000040&((data)<<6))
#define U2LCR_BRK_src(data)                                                          ((0x00000040&(data))>>6)
#define U2LCR_get_BRK(data)                                                          ((0x00000040&(data))>>6)
#define U2LCR_EPS_shift                                                              (4)
#define U2LCR_EPS_mask                                                               (0x00000030)
#define U2LCR_EPS(data)                                                              (0x00000030&((data)<<4))
#define U2LCR_EPS_src(data)                                                          ((0x00000030&(data))>>4)
#define U2LCR_get_EPS(data)                                                          ((0x00000030&(data))>>4)
#define U2LCR_PEN_shift                                                              (3)
#define U2LCR_PEN_mask                                                               (0x00000008)
#define U2LCR_PEN(data)                                                              (0x00000008&((data)<<3))
#define U2LCR_PEN_src(data)                                                          ((0x00000008&(data))>>3)
#define U2LCR_get_PEN(data)                                                          ((0x00000008&(data))>>3)
#define U2LCR_STB_shift                                                              (2)
#define U2LCR_STB_mask                                                               (0x00000004)
#define U2LCR_STB(data)                                                              (0x00000004&((data)<<2))
#define U2LCR_STB_src(data)                                                          ((0x00000004&(data))>>2)
#define U2LCR_get_STB(data)                                                          ((0x00000004&(data))>>2)
#define U2LCR_WLS_shift                                                              (0)
#define U2LCR_WLS_mask                                                               (0x00000003)
#define U2LCR_WLS(data)                                                              (0x00000003&((data)<<0))
#define U2LCR_WLS_src(data)                                                          ((0x00000003&(data))>>0)
#define U2LCR_get_WLS(data)                                                          ((0x00000003&(data))>>0)


#define U2MCR                                                                        0x1801B210
#define U2MCR_reg_addr                                                               "0xB801B210"
#define U2MCR_reg                                                                    0xB801B210
#define set_U2MCR_reg(data)   (*((volatile unsigned int*) U2MCR_reg)=data)
#define get_U2MCR_reg   (*((volatile unsigned int*) U2MCR_reg))
#define U2MCR_inst_adr                                                               "0x0084"
#define U2MCR_inst                                                                   0x0084
#define U2MCR_LOOP_shift                                                             (4)
#define U2MCR_LOOP_mask                                                              (0x00000010)
#define U2MCR_LOOP(data)                                                             (0x00000010&((data)<<4))
#define U2MCR_LOOP_src(data)                                                         ((0x00000010&(data))>>4)
#define U2MCR_get_LOOP(data)                                                         ((0x00000010&(data))>>4)
#define U2MCR_RTS_shift                                                              (1)
#define U2MCR_RTS_mask                                                               (0x00000002)
#define U2MCR_RTS(data)                                                              (0x00000002&((data)<<1))
#define U2MCR_RTS_src(data)                                                          ((0x00000002&(data))>>1)
#define U2MCR_get_RTS(data)                                                          ((0x00000002&(data))>>1)
#define U2MCR_DTR_shift                                                              (0)
#define U2MCR_DTR_mask                                                               (0x00000001)
#define U2MCR_DTR(data)                                                              (0x00000001&((data)<<0))
#define U2MCR_DTR_src(data)                                                          ((0x00000001&(data))>>0)
#define U2MCR_get_DTR(data)                                                          ((0x00000001&(data))>>0)


#define U2LSR                                                                        0x1801B214
#define U2LSR_reg_addr                                                               "0xB801B214"
#define U2LSR_reg                                                                    0xB801B214
#define set_U2LSR_reg(data)   (*((volatile unsigned int*) U2LSR_reg)=data)
#define get_U2LSR_reg   (*((volatile unsigned int*) U2LSR_reg))
#define U2LSR_inst_adr                                                               "0x0085"
#define U2LSR_inst                                                                   0x0085
#define U2LSR_RFE_shift                                                              (7)
#define U2LSR_RFE_mask                                                               (0x00000080)
#define U2LSR_RFE(data)                                                              (0x00000080&((data)<<7))
#define U2LSR_RFE_src(data)                                                          ((0x00000080&(data))>>7)
#define U2LSR_get_RFE(data)                                                          ((0x00000080&(data))>>7)
#define U2LSR_TEMT_shift                                                             (6)
#define U2LSR_TEMT_mask                                                              (0x00000040)
#define U2LSR_TEMT(data)                                                             (0x00000040&((data)<<6))
#define U2LSR_TEMT_src(data)                                                         ((0x00000040&(data))>>6)
#define U2LSR_get_TEMT(data)                                                         ((0x00000040&(data))>>6)
#define U2LSR_THRE_shift                                                             (5)
#define U2LSR_THRE_mask                                                              (0x00000020)
#define U2LSR_THRE(data)                                                             (0x00000020&((data)<<5))
#define U2LSR_THRE_src(data)                                                         ((0x00000020&(data))>>5)
#define U2LSR_get_THRE(data)                                                         ((0x00000020&(data))>>5)
#define U2LSR_BI_shift                                                               (4)
#define U2LSR_BI_mask                                                                (0x00000010)
#define U2LSR_BI(data)                                                               (0x00000010&((data)<<4))
#define U2LSR_BI_src(data)                                                           ((0x00000010&(data))>>4)
#define U2LSR_get_BI(data)                                                           ((0x00000010&(data))>>4)
#define U2LSR_FE_shift                                                               (3)
#define U2LSR_FE_mask                                                                (0x00000008)
#define U2LSR_FE(data)                                                               (0x00000008&((data)<<3))
#define U2LSR_FE_src(data)                                                           ((0x00000008&(data))>>3)
#define U2LSR_get_FE(data)                                                           ((0x00000008&(data))>>3)
#define U2LSR_PE_shift                                                               (2)
#define U2LSR_PE_mask                                                                (0x00000004)
#define U2LSR_PE(data)                                                               (0x00000004&((data)<<2))
#define U2LSR_PE_src(data)                                                           ((0x00000004&(data))>>2)
#define U2LSR_get_PE(data)                                                           ((0x00000004&(data))>>2)
#define U2LSR_OE_shift                                                               (1)
#define U2LSR_OE_mask                                                                (0x00000002)
#define U2LSR_OE(data)                                                               (0x00000002&((data)<<1))
#define U2LSR_OE_src(data)                                                           ((0x00000002&(data))>>1)
#define U2LSR_get_OE(data)                                                           ((0x00000002&(data))>>1)
#define U2LSR_DR_shift                                                               (0)
#define U2LSR_DR_mask                                                                (0x00000001)
#define U2LSR_DR(data)                                                               (0x00000001&((data)<<0))
#define U2LSR_DR_src(data)                                                           ((0x00000001&(data))>>0)
#define U2LSR_get_DR(data)                                                           ((0x00000001&(data))>>0)


#define U2MSR                                                                        0x1801B218
#define U2MSR_reg_addr                                                               "0xB801B218"
#define U2MSR_reg                                                                    0xB801B218
#define set_U2MSR_reg(data)   (*((volatile unsigned int*) U2MSR_reg)=data)
#define get_U2MSR_reg   (*((volatile unsigned int*) U2MSR_reg))
#define U2MSR_inst_adr                                                               "0x0086"
#define U2MSR_inst                                                                   0x0086
#define U2MSR_DCD_shift                                                              (7)
#define U2MSR_DCD_mask                                                               (0x00000080)
#define U2MSR_DCD(data)                                                              (0x00000080&((data)<<7))
#define U2MSR_DCD_src(data)                                                          ((0x00000080&(data))>>7)
#define U2MSR_get_DCD(data)                                                          ((0x00000080&(data))>>7)
#define U2MSR_RI_shift                                                               (6)
#define U2MSR_RI_mask                                                                (0x00000040)
#define U2MSR_RI(data)                                                               (0x00000040&((data)<<6))
#define U2MSR_RI_src(data)                                                           ((0x00000040&(data))>>6)
#define U2MSR_get_RI(data)                                                           ((0x00000040&(data))>>6)
#define U2MSR_DSR_shift                                                              (5)
#define U2MSR_DSR_mask                                                               (0x00000020)
#define U2MSR_DSR(data)                                                              (0x00000020&((data)<<5))
#define U2MSR_DSR_src(data)                                                          ((0x00000020&(data))>>5)
#define U2MSR_get_DSR(data)                                                          ((0x00000020&(data))>>5)
#define U2MSR_CTS_shift                                                              (4)
#define U2MSR_CTS_mask                                                               (0x00000010)
#define U2MSR_CTS(data)                                                              (0x00000010&((data)<<4))
#define U2MSR_CTS_src(data)                                                          ((0x00000010&(data))>>4)
#define U2MSR_get_CTS(data)                                                          ((0x00000010&(data))>>4)
#define U2MSR_DDCD_shift                                                             (3)
#define U2MSR_DDCD_mask                                                              (0x00000008)
#define U2MSR_DDCD(data)                                                             (0x00000008&((data)<<3))
#define U2MSR_DDCD_src(data)                                                         ((0x00000008&(data))>>3)
#define U2MSR_get_DDCD(data)                                                         ((0x00000008&(data))>>3)
#define U2MSR_TERI_shift                                                             (2)
#define U2MSR_TERI_mask                                                              (0x00000004)
#define U2MSR_TERI(data)                                                             (0x00000004&((data)<<2))
#define U2MSR_TERI_src(data)                                                         ((0x00000004&(data))>>2)
#define U2MSR_get_TERI(data)                                                         ((0x00000004&(data))>>2)
#define U2MSR_DDSR_shift                                                             (1)
#define U2MSR_DDSR_mask                                                              (0x00000002)
#define U2MSR_DDSR(data)                                                             (0x00000002&((data)<<1))
#define U2MSR_DDSR_src(data)                                                         ((0x00000002&(data))>>1)
#define U2MSR_get_DDSR(data)                                                         ((0x00000002&(data))>>1)
#define U2MSR_DCTS_shift                                                             (0)
#define U2MSR_DCTS_mask                                                              (0x00000001)
#define U2MSR_DCTS(data)                                                             (0x00000001&((data)<<0))
#define U2MSR_DCTS_src(data)                                                         ((0x00000001&(data))>>0)
#define U2MSR_get_DCTS(data)                                                         ((0x00000001&(data))>>0)


#define U2SCR                                                                        0x1801B21C
#define U2SCR_reg_addr                                                               "0xB801B21C"
#define U2SCR_reg                                                                    0xB801B21C
#define set_U2SCR_reg(data)   (*((volatile unsigned int*) U2SCR_reg)=data)
#define get_U2SCR_reg   (*((volatile unsigned int*) U2SCR_reg))
#define U2SCR_inst_adr                                                               "0x0087"
#define U2SCR_inst                                                                   0x0087
#define U2SCR_SCR_shift                                                              (0)
#define U2SCR_SCR_mask                                                               (0x000000FF)
#define U2SCR_SCR(data)                                                              (0x000000FF&((data)<<0))
#define U2SCR_SCR_src(data)                                                          ((0x000000FF&(data))>>0)
#define U2SCR_get_SCR(data)                                                          ((0x000000FF&(data))>>0)


#define U3RBR_THR_DLL                                                                0x1801B300
#define U3RBR_THR_DLL_reg_addr                                                       "0xB801B300"
#define U3RBR_THR_DLL_reg                                                            0xB801B300
#define set_U3RBR_THR_DLL_reg(data)   (*((volatile unsigned int*) U3RBR_THR_DLL_reg)=data)
#define get_U3RBR_THR_DLL_reg   (*((volatile unsigned int*) U3RBR_THR_DLL_reg))
#define U3RBR_THR_DLL_inst_adr                                                       "0x00C0"
#define U3RBR_THR_DLL_inst                                                           0x00C0
#define U3RBR_THR_DLL_DLL_shift                                                      (0)
#define U3RBR_THR_DLL_DLL_mask                                                       (0x000000FF)
#define U3RBR_THR_DLL_DLL(data)                                                      (0x000000FF&((data)<<0))
#define U3RBR_THR_DLL_DLL_src(data)                                                  ((0x000000FF&(data))>>0)
#define U3RBR_THR_DLL_get_DLL(data)                                                  ((0x000000FF&(data))>>0)


#define U3IER_DLH                                                                    0x1801B304
#define U3IER_DLH_reg_addr                                                           "0xB801B304"
#define U3IER_DLH_reg                                                                0xB801B304
#define set_U3IER_DLH_reg(data)   (*((volatile unsigned int*) U3IER_DLH_reg)=data)
#define get_U3IER_DLH_reg   (*((volatile unsigned int*) U3IER_DLH_reg))
#define U3IER_DLH_inst_adr                                                           "0x00C1"
#define U3IER_DLH_inst                                                               0x00C1
#define U3IER_DLH_DLH_shift                                                          (0)
#define U3IER_DLH_DLH_mask                                                           (0x000000FF)
#define U3IER_DLH_DLH(data)                                                          (0x000000FF&((data)<<0))
#define U3IER_DLH_DLH_src(data)                                                      ((0x000000FF&(data))>>0)
#define U3IER_DLH_get_DLH(data)                                                      ((0x000000FF&(data))>>0)


#define U3IIR_FCR                                                                    0x1801B308
#define U3IIR_FCR_reg_addr                                                           "0xB801B308"
#define U3IIR_FCR_reg                                                                0xB801B308
#define set_U3IIR_FCR_reg(data)   (*((volatile unsigned int*) U3IIR_FCR_reg)=data)
#define get_U3IIR_FCR_reg   (*((volatile unsigned int*) U3IIR_FCR_reg))
#define U3IIR_FCR_inst_adr                                                           "0x00C2"
#define U3IIR_FCR_inst                                                               0x00C2
#define U3IIR_FCR_FIFO16_shift                                                       (6)
#define U3IIR_FCR_FIFO16_mask                                                        (0x000000C0)
#define U3IIR_FCR_FIFO16(data)                                                       (0x000000C0&((data)<<6))
#define U3IIR_FCR_FIFO16_src(data)                                                   ((0x000000C0&(data))>>6)
#define U3IIR_FCR_get_FIFO16(data)                                                   ((0x000000C0&(data))>>6)
#define U3IIR_FCR_IID_shift                                                          (0)
#define U3IIR_FCR_IID_mask                                                           (0x0000000F)
#define U3IIR_FCR_IID(data)                                                          (0x0000000F&((data)<<0))
#define U3IIR_FCR_IID_src(data)                                                      ((0x0000000F&(data))>>0)
#define U3IIR_FCR_get_IID(data)                                                      ((0x0000000F&(data))>>0)


#define U3LCR                                                                        0x1801B30C
#define U3LCR_reg_addr                                                               "0xB801B30C"
#define U3LCR_reg                                                                    0xB801B30C
#define set_U3LCR_reg(data)   (*((volatile unsigned int*) U3LCR_reg)=data)
#define get_U3LCR_reg   (*((volatile unsigned int*) U3LCR_reg))
#define U3LCR_inst_adr                                                               "0x00C3"
#define U3LCR_inst                                                                   0x00C3
#define U3LCR_DLAB_shift                                                             (7)
#define U3LCR_DLAB_mask                                                              (0x00000080)
#define U3LCR_DLAB(data)                                                             (0x00000080&((data)<<7))
#define U3LCR_DLAB_src(data)                                                         ((0x00000080&(data))>>7)
#define U3LCR_get_DLAB(data)                                                         ((0x00000080&(data))>>7)
#define U3LCR_BRK_shift                                                              (6)
#define U3LCR_BRK_mask                                                               (0x00000040)
#define U3LCR_BRK(data)                                                              (0x00000040&((data)<<6))
#define U3LCR_BRK_src(data)                                                          ((0x00000040&(data))>>6)
#define U3LCR_get_BRK(data)                                                          ((0x00000040&(data))>>6)
#define U3LCR_EPS_shift                                                              (4)
#define U3LCR_EPS_mask                                                               (0x00000010)
#define U3LCR_EPS(data)                                                              (0x00000010&((data)<<4))
#define U3LCR_EPS_src(data)                                                          ((0x00000010&(data))>>4)
#define U3LCR_get_EPS(data)                                                          ((0x00000010&(data))>>4)
#define U3LCR_PEN_shift                                                              (3)
#define U3LCR_PEN_mask                                                               (0x00000008)
#define U3LCR_PEN(data)                                                              (0x00000008&((data)<<3))
#define U3LCR_PEN_src(data)                                                          ((0x00000008&(data))>>3)
#define U3LCR_get_PEN(data)                                                          ((0x00000008&(data))>>3)
#define U3LCR_STB_shift                                                              (2)
#define U3LCR_STB_mask                                                               (0x00000004)
#define U3LCR_STB(data)                                                              (0x00000004&((data)<<2))
#define U3LCR_STB_src(data)                                                          ((0x00000004&(data))>>2)
#define U3LCR_get_STB(data)                                                          ((0x00000004&(data))>>2)
#define U3LCR_WLS_shift                                                              (0)
#define U3LCR_WLS_mask                                                               (0x00000003)
#define U3LCR_WLS(data)                                                              (0x00000003&((data)<<0))
#define U3LCR_WLS_src(data)                                                          ((0x00000003&(data))>>0)
#define U3LCR_get_WLS(data)                                                          ((0x00000003&(data))>>0)


#define U3MCR                                                                        0x1801B310
#define U3MCR_reg_addr                                                               "0xB801B310"
#define U3MCR_reg                                                                    0xB801B310
#define set_U3MCR_reg(data)   (*((volatile unsigned int*) U3MCR_reg)=data)
#define get_U3MCR_reg   (*((volatile unsigned int*) U3MCR_reg))
#define U3MCR_inst_adr                                                               "0x00C4"
#define U3MCR_inst                                                                   0x00C4
#define U3MCR_AFCE_shift                                                             (5)
#define U3MCR_AFCE_mask                                                              (0x00000020)
#define U3MCR_AFCE(data)                                                             (0x00000020&((data)<<5))
#define U3MCR_AFCE_src(data)                                                         ((0x00000020&(data))>>5)
#define U3MCR_get_AFCE(data)                                                         ((0x00000020&(data))>>5)
#define U3MCR_LOOP_shift                                                             (4)
#define U3MCR_LOOP_mask                                                              (0x00000010)
#define U3MCR_LOOP(data)                                                             (0x00000010&((data)<<4))
#define U3MCR_LOOP_src(data)                                                         ((0x00000010&(data))>>4)
#define U3MCR_get_LOOP(data)                                                         ((0x00000010&(data))>>4)
#define U3MCR_RTS_shift                                                              (1)
#define U3MCR_RTS_mask                                                               (0x00000002)
#define U3MCR_RTS(data)                                                              (0x00000002&((data)<<1))
#define U3MCR_RTS_src(data)                                                          ((0x00000002&(data))>>1)
#define U3MCR_get_RTS(data)                                                          ((0x00000002&(data))>>1)
#define U3MCR_DTR_shift                                                              (0)
#define U3MCR_DTR_mask                                                               (0x00000001)
#define U3MCR_DTR(data)                                                              (0x00000001&((data)<<0))
#define U3MCR_DTR_src(data)                                                          ((0x00000001&(data))>>0)
#define U3MCR_get_DTR(data)                                                          ((0x00000001&(data))>>0)


#define U3LSR                                                                        0x1801B314
#define U3LSR_reg_addr                                                               "0xB801B314"
#define U3LSR_reg                                                                    0xB801B314
#define set_U3LSR_reg(data)   (*((volatile unsigned int*) U3LSR_reg)=data)
#define get_U3LSR_reg   (*((volatile unsigned int*) U3LSR_reg))
#define U3LSR_inst_adr                                                               "0x00C5"
#define U3LSR_inst                                                                   0x00C5
#define U3LSR_RFE_shift                                                              (7)
#define U3LSR_RFE_mask                                                               (0x00000080)
#define U3LSR_RFE(data)                                                              (0x00000080&((data)<<7))
#define U3LSR_RFE_src(data)                                                          ((0x00000080&(data))>>7)
#define U3LSR_get_RFE(data)                                                          ((0x00000080&(data))>>7)
#define U3LSR_TEMT_shift                                                             (6)
#define U3LSR_TEMT_mask                                                              (0x00000040)
#define U3LSR_TEMT(data)                                                             (0x00000040&((data)<<6))
#define U3LSR_TEMT_src(data)                                                         ((0x00000040&(data))>>6)
#define U3LSR_get_TEMT(data)                                                         ((0x00000040&(data))>>6)
#define U3LSR_THRE_shift                                                             (5)
#define U3LSR_THRE_mask                                                              (0x00000020)
#define U3LSR_THRE(data)                                                             (0x00000020&((data)<<5))
#define U3LSR_THRE_src(data)                                                         ((0x00000020&(data))>>5)
#define U3LSR_get_THRE(data)                                                         ((0x00000020&(data))>>5)
#define U3LSR_BI_shift                                                               (4)
#define U3LSR_BI_mask                                                                (0x00000010)
#define U3LSR_BI(data)                                                               (0x00000010&((data)<<4))
#define U3LSR_BI_src(data)                                                           ((0x00000010&(data))>>4)
#define U3LSR_get_BI(data)                                                           ((0x00000010&(data))>>4)
#define U3LSR_FE_shift                                                               (3)
#define U3LSR_FE_mask                                                                (0x00000008)
#define U3LSR_FE(data)                                                               (0x00000008&((data)<<3))
#define U3LSR_FE_src(data)                                                           ((0x00000008&(data))>>3)
#define U3LSR_get_FE(data)                                                           ((0x00000008&(data))>>3)
#define U3LSR_PE_shift                                                               (2)
#define U3LSR_PE_mask                                                                (0x00000004)
#define U3LSR_PE(data)                                                               (0x00000004&((data)<<2))
#define U3LSR_PE_src(data)                                                           ((0x00000004&(data))>>2)
#define U3LSR_get_PE(data)                                                           ((0x00000004&(data))>>2)
#define U3LSR_OE_shift                                                               (1)
#define U3LSR_OE_mask                                                                (0x00000002)
#define U3LSR_OE(data)                                                               (0x00000002&((data)<<1))
#define U3LSR_OE_src(data)                                                           ((0x00000002&(data))>>1)
#define U3LSR_get_OE(data)                                                           ((0x00000002&(data))>>1)
#define U3LSR_DR_shift                                                               (0)
#define U3LSR_DR_mask                                                                (0x00000001)
#define U3LSR_DR(data)                                                               (0x00000001&((data)<<0))
#define U3LSR_DR_src(data)                                                           ((0x00000001&(data))>>0)
#define U3LSR_get_DR(data)                                                           ((0x00000001&(data))>>0)


#define U3MSR                                                                        0x1801B318
#define U3MSR_reg_addr                                                               "0xB801B318"
#define U3MSR_reg                                                                    0xB801B318
#define set_U3MSR_reg(data)   (*((volatile unsigned int*) U3MSR_reg)=data)
#define get_U3MSR_reg   (*((volatile unsigned int*) U3MSR_reg))
#define U3MSR_inst_adr                                                               "0x00C6"
#define U3MSR_inst                                                                   0x00C6
#define U3MSR_DCD_shift                                                              (7)
#define U3MSR_DCD_mask                                                               (0x00000080)
#define U3MSR_DCD(data)                                                              (0x00000080&((data)<<7))
#define U3MSR_DCD_src(data)                                                          ((0x00000080&(data))>>7)
#define U3MSR_get_DCD(data)                                                          ((0x00000080&(data))>>7)
#define U3MSR_RI_shift                                                               (6)
#define U3MSR_RI_mask                                                                (0x00000040)
#define U3MSR_RI(data)                                                               (0x00000040&((data)<<6))
#define U3MSR_RI_src(data)                                                           ((0x00000040&(data))>>6)
#define U3MSR_get_RI(data)                                                           ((0x00000040&(data))>>6)
#define U3MSR_DSR_shift                                                              (5)
#define U3MSR_DSR_mask                                                               (0x00000020)
#define U3MSR_DSR(data)                                                              (0x00000020&((data)<<5))
#define U3MSR_DSR_src(data)                                                          ((0x00000020&(data))>>5)
#define U3MSR_get_DSR(data)                                                          ((0x00000020&(data))>>5)
#define U3MSR_CTS_shift                                                              (4)
#define U3MSR_CTS_mask                                                               (0x00000010)
#define U3MSR_CTS(data)                                                              (0x00000010&((data)<<4))
#define U3MSR_CTS_src(data)                                                          ((0x00000010&(data))>>4)
#define U3MSR_get_CTS(data)                                                          ((0x00000010&(data))>>4)
#define U3MSR_DDCD_shift                                                             (3)
#define U3MSR_DDCD_mask                                                              (0x00000008)
#define U3MSR_DDCD(data)                                                             (0x00000008&((data)<<3))
#define U3MSR_DDCD_src(data)                                                         ((0x00000008&(data))>>3)
#define U3MSR_get_DDCD(data)                                                         ((0x00000008&(data))>>3)
#define U3MSR_TERI_shift                                                             (2)
#define U3MSR_TERI_mask                                                              (0x00000004)
#define U3MSR_TERI(data)                                                             (0x00000004&((data)<<2))
#define U3MSR_TERI_src(data)                                                         ((0x00000004&(data))>>2)
#define U3MSR_get_TERI(data)                                                         ((0x00000004&(data))>>2)
#define U3MSR_DDSR_shift                                                             (1)
#define U3MSR_DDSR_mask                                                              (0x00000002)
#define U3MSR_DDSR(data)                                                             (0x00000002&((data)<<1))
#define U3MSR_DDSR_src(data)                                                         ((0x00000002&(data))>>1)
#define U3MSR_get_DDSR(data)                                                         ((0x00000002&(data))>>1)
#define U3MSR_DCTS_shift                                                             (0)
#define U3MSR_DCTS_mask                                                              (0x00000001)
#define U3MSR_DCTS(data)                                                             (0x00000001&((data)<<0))
#define U3MSR_DCTS_src(data)                                                         ((0x00000001&(data))>>0)
#define U3MSR_get_DCTS(data)                                                         ((0x00000001&(data))>>0)


#define U3SCR                                                                        0x1801B31C
#define U3SCR_reg_addr                                                               "0xB801B31C"
#define U3SCR_reg                                                                    0xB801B31C
#define set_U3SCR_reg(data)   (*((volatile unsigned int*) U3SCR_reg)=data)
#define get_U3SCR_reg   (*((volatile unsigned int*) U3SCR_reg))
#define U3SCR_inst_adr                                                               "0x00C7"
#define U3SCR_inst                                                                   0x00C7
#define U3SCR_SCR_shift                                                              (0)
#define U3SCR_SCR_mask                                                               (0x000000FF)
#define U3SCR_SCR(data)                                                              (0x000000FF&((data)<<0))
#define U3SCR_SCR_src(data)                                                          ((0x000000FF&(data))>>0)
#define U3SCR_get_SCR(data)                                                          ((0x000000FF&(data))>>0)


#define U3SRBR_0                                                                     0x1801B330
#define U3SRBR_1                                                                     0x1801B334
#define U3SRBR_2                                                                     0x1801B338
#define U3SRBR_3                                                                     0x1801B33C
#define U3SRBR_4                                                                     0x1801B340
#define U3SRBR_5                                                                     0x1801B344
#define U3SRBR_6                                                                     0x1801B348
#define U3SRBR_7                                                                     0x1801B34C
#define U3SRBR_8                                                                     0x1801B350
#define U3SRBR_9                                                                     0x1801B354
#define U3SRBR_10                                                                     0x1801B358
#define U3SRBR_11                                                                     0x1801B35C
#define U3SRBR_12                                                                     0x1801B360
#define U3SRBR_13                                                                     0x1801B364
#define U3SRBR_14                                                                     0x1801B368
#define U3SRBR_15                                                                     0x1801B36C
#define U3SRBR_0_reg_addr                                                            "0xB801B330"
#define U3SRBR_1_reg_addr                                                            "0xB801B334"
#define U3SRBR_2_reg_addr                                                            "0xB801B338"
#define U3SRBR_3_reg_addr                                                            "0xB801B33C"
#define U3SRBR_4_reg_addr                                                            "0xB801B340"
#define U3SRBR_5_reg_addr                                                            "0xB801B344"
#define U3SRBR_6_reg_addr                                                            "0xB801B348"
#define U3SRBR_7_reg_addr                                                            "0xB801B34C"
#define U3SRBR_8_reg_addr                                                            "0xB801B350"
#define U3SRBR_9_reg_addr                                                            "0xB801B354"
#define U3SRBR_10_reg_addr                                                            "0xB801B358"
#define U3SRBR_11_reg_addr                                                            "0xB801B35C"
#define U3SRBR_12_reg_addr                                                            "0xB801B360"
#define U3SRBR_13_reg_addr                                                            "0xB801B364"
#define U3SRBR_14_reg_addr                                                            "0xB801B368"
#define U3SRBR_15_reg_addr                                                            "0xB801B36C"
#define U3SRBR_0_reg                                                                 0xB801B330
#define U3SRBR_1_reg                                                                 0xB801B334
#define U3SRBR_2_reg                                                                 0xB801B338
#define U3SRBR_3_reg                                                                 0xB801B33C
#define U3SRBR_4_reg                                                                 0xB801B340
#define U3SRBR_5_reg                                                                 0xB801B344
#define U3SRBR_6_reg                                                                 0xB801B348
#define U3SRBR_7_reg                                                                 0xB801B34C
#define U3SRBR_8_reg                                                                 0xB801B350
#define U3SRBR_9_reg                                                                 0xB801B354
#define U3SRBR_10_reg                                                                 0xB801B358
#define U3SRBR_11_reg                                                                 0xB801B35C
#define U3SRBR_12_reg                                                                 0xB801B360
#define U3SRBR_13_reg                                                                 0xB801B364
#define U3SRBR_14_reg                                                                 0xB801B368
#define U3SRBR_15_reg                                                                 0xB801B36C
#define set_U3SRBR_0_reg(data)   (*((volatile unsigned int*) U3SRBR_0_reg)=data)
#define set_U3SRBR_1_reg(data)   (*((volatile unsigned int*) U3SRBR_1_reg)=data)
#define set_U3SRBR_2_reg(data)   (*((volatile unsigned int*) U3SRBR_2_reg)=data)
#define set_U3SRBR_3_reg(data)   (*((volatile unsigned int*) U3SRBR_3_reg)=data)
#define set_U3SRBR_4_reg(data)   (*((volatile unsigned int*) U3SRBR_4_reg)=data)
#define set_U3SRBR_5_reg(data)   (*((volatile unsigned int*) U3SRBR_5_reg)=data)
#define set_U3SRBR_6_reg(data)   (*((volatile unsigned int*) U3SRBR_6_reg)=data)
#define set_U3SRBR_7_reg(data)   (*((volatile unsigned int*) U3SRBR_7_reg)=data)
#define set_U3SRBR_8_reg(data)   (*((volatile unsigned int*) U3SRBR_8_reg)=data)
#define set_U3SRBR_9_reg(data)   (*((volatile unsigned int*) U3SRBR_9_reg)=data)
#define set_U3SRBR_10_reg(data)   (*((volatile unsigned int*) U3SRBR_10_reg)=data)
#define set_U3SRBR_11_reg(data)   (*((volatile unsigned int*) U3SRBR_11_reg)=data)
#define set_U3SRBR_12_reg(data)   (*((volatile unsigned int*) U3SRBR_12_reg)=data)
#define set_U3SRBR_13_reg(data)   (*((volatile unsigned int*) U3SRBR_13_reg)=data)
#define set_U3SRBR_14_reg(data)   (*((volatile unsigned int*) U3SRBR_14_reg)=data)
#define set_U3SRBR_15_reg(data)   (*((volatile unsigned int*) U3SRBR_15_reg)=data)
#define get_U3SRBR_0_reg   (*((volatile unsigned int*) U3SRBR_0_reg))
#define get_U3SRBR_1_reg   (*((volatile unsigned int*) U3SRBR_1_reg))
#define get_U3SRBR_2_reg   (*((volatile unsigned int*) U3SRBR_2_reg))
#define get_U3SRBR_3_reg   (*((volatile unsigned int*) U3SRBR_3_reg))
#define get_U3SRBR_4_reg   (*((volatile unsigned int*) U3SRBR_4_reg))
#define get_U3SRBR_5_reg   (*((volatile unsigned int*) U3SRBR_5_reg))
#define get_U3SRBR_6_reg   (*((volatile unsigned int*) U3SRBR_6_reg))
#define get_U3SRBR_7_reg   (*((volatile unsigned int*) U3SRBR_7_reg))
#define get_U3SRBR_8_reg   (*((volatile unsigned int*) U3SRBR_8_reg))
#define get_U3SRBR_9_reg   (*((volatile unsigned int*) U3SRBR_9_reg))
#define get_U3SRBR_10_reg   (*((volatile unsigned int*) U3SRBR_10_reg))
#define get_U3SRBR_11_reg   (*((volatile unsigned int*) U3SRBR_11_reg))
#define get_U3SRBR_12_reg   (*((volatile unsigned int*) U3SRBR_12_reg))
#define get_U3SRBR_13_reg   (*((volatile unsigned int*) U3SRBR_13_reg))
#define get_U3SRBR_14_reg   (*((volatile unsigned int*) U3SRBR_14_reg))
#define get_U3SRBR_15_reg   (*((volatile unsigned int*) U3SRBR_15_reg))
#define U3SRBR_0_inst_adr                                                            "0x00CC"
#define U3SRBR_1_inst_adr                                                            "0x00CD"
#define U3SRBR_2_inst_adr                                                            "0x00CE"
#define U3SRBR_3_inst_adr                                                            "0x00CF"
#define U3SRBR_4_inst_adr                                                            "0x00D0"
#define U3SRBR_5_inst_adr                                                            "0x00D1"
#define U3SRBR_6_inst_adr                                                            "0x00D2"
#define U3SRBR_7_inst_adr                                                            "0x00D3"
#define U3SRBR_8_inst_adr                                                            "0x00D4"
#define U3SRBR_9_inst_adr                                                            "0x00D5"
#define U3SRBR_10_inst_adr                                                            "0x00D6"
#define U3SRBR_11_inst_adr                                                            "0x00D7"
#define U3SRBR_12_inst_adr                                                            "0x00D8"
#define U3SRBR_13_inst_adr                                                            "0x00D9"
#define U3SRBR_14_inst_adr                                                            "0x00DA"
#define U3SRBR_15_inst_adr                                                            "0x00DB"
#define U3SRBR_0_inst                                                                0x00CC
#define U3SRBR_1_inst                                                                0x00CD
#define U3SRBR_2_inst                                                                0x00CE
#define U3SRBR_3_inst                                                                0x00CF
#define U3SRBR_4_inst                                                                0x00D0
#define U3SRBR_5_inst                                                                0x00D1
#define U3SRBR_6_inst                                                                0x00D2
#define U3SRBR_7_inst                                                                0x00D3
#define U3SRBR_8_inst                                                                0x00D4
#define U3SRBR_9_inst                                                                0x00D5
#define U3SRBR_10_inst                                                                0x00D6
#define U3SRBR_11_inst                                                                0x00D7
#define U3SRBR_12_inst                                                                0x00D8
#define U3SRBR_13_inst                                                                0x00D9
#define U3SRBR_14_inst                                                                0x00DA
#define U3SRBR_15_inst                                                                0x00DB
#define U3SRBR_RBD_shift                                                             (0)
#define U3SRBR_RBD_mask                                                              (0x000000FF)
#define U3SRBR_RBD(data)                                                             (0x000000FF&((data)<<0))
#define U3SRBR_RBD_src(data)                                                         ((0x000000FF&(data))>>0)
#define U3SRBR_get_RBD(data)                                                         ((0x000000FF&(data))>>0)


#define U3FAR                                                                        0x1801B370
#define U3FAR_reg_addr                                                               "0xB801B370"
#define U3FAR_reg                                                                    0xB801B370
#define set_U3FAR_reg(data)   (*((volatile unsigned int*) U3FAR_reg)=data)
#define get_U3FAR_reg   (*((volatile unsigned int*) U3FAR_reg))
#define U3FAR_inst_adr                                                               "0x00DC"
#define U3FAR_inst                                                                   0x00DC
#define U3FAR_FAR_shift                                                              (0)
#define U3FAR_FAR_mask                                                               (0x000000FF)
#define U3FAR_FAR(data)                                                              (0x000000FF&((data)<<0))
#define U3FAR_FAR_src(data)                                                          ((0x000000FF&(data))>>0)
#define U3FAR_get_FAR(data)                                                          ((0x000000FF&(data))>>0)


#define U3TFR                                                                        0x1801B374
#define U3TFR_reg_addr                                                               "0xB801B374"
#define U3TFR_reg                                                                    0xB801B374
#define set_U3TFR_reg(data)   (*((volatile unsigned int*) U3TFR_reg)=data)
#define get_U3TFR_reg   (*((volatile unsigned int*) U3TFR_reg))
#define U3TFR_inst_adr                                                               "0x00DD"
#define U3TFR_inst                                                                   0x00DD
#define U3TFR_FAR_shift                                                              (0)
#define U3TFR_FAR_mask                                                               (0x000000FF)
#define U3TFR_FAR(data)                                                              (0x000000FF&((data)<<0))
#define U3TFR_FAR_src(data)                                                          ((0x000000FF&(data))>>0)
#define U3TFR_get_FAR(data)                                                          ((0x000000FF&(data))>>0)


#define U3RFW                                                                        0x1801B378
#define U3RFW_reg_addr                                                               "0xB801B378"
#define U3RFW_reg                                                                    0xB801B378
#define set_U3RFW_reg(data)   (*((volatile unsigned int*) U3RFW_reg)=data)
#define get_U3RFW_reg   (*((volatile unsigned int*) U3RFW_reg))
#define U3RFW_inst_adr                                                               "0x00DE"
#define U3RFW_inst                                                                   0x00DE
#define U3RFW_RFFE_shift                                                             (9)
#define U3RFW_RFFE_mask                                                              (0x00000200)
#define U3RFW_RFFE(data)                                                             (0x00000200&((data)<<9))
#define U3RFW_RFFE_src(data)                                                         ((0x00000200&(data))>>9)
#define U3RFW_get_RFFE(data)                                                         ((0x00000200&(data))>>9)
#define U3RFW_RFPF_shift                                                             (8)
#define U3RFW_RFPF_mask                                                              (0x00000100)
#define U3RFW_RFPF(data)                                                             (0x00000100&((data)<<8))
#define U3RFW_RFPF_src(data)                                                         ((0x00000100&(data))>>8)
#define U3RFW_get_RFPF(data)                                                         ((0x00000100&(data))>>8)
#define U3RFW_RFWD_shift                                                             (0)
#define U3RFW_RFWD_mask                                                              (0x000000FF)
#define U3RFW_RFWD(data)                                                             (0x000000FF&((data)<<0))
#define U3RFW_RFWD_src(data)                                                         ((0x000000FF&(data))>>0)
#define U3RFW_get_RFWD(data)                                                         ((0x000000FF&(data))>>0)


#define U3USR                                                                        0x1801B37C
#define U3USR_reg_addr                                                               "0xB801B37C"
#define U3USR_reg                                                                    0xB801B37C
#define set_U3USR_reg(data)   (*((volatile unsigned int*) U3USR_reg)=data)
#define get_U3USR_reg   (*((volatile unsigned int*) U3USR_reg))
#define U3USR_inst_adr                                                               "0x00DF"
#define U3USR_inst                                                                   0x00DF
#define U3USR_RFF_shift                                                              (4)
#define U3USR_RFF_mask                                                               (0x00000010)
#define U3USR_RFF(data)                                                              (0x00000010&((data)<<4))
#define U3USR_RFF_src(data)                                                          ((0x00000010&(data))>>4)
#define U3USR_get_RFF(data)                                                          ((0x00000010&(data))>>4)
#define U3USR_RFNE_shift                                                             (3)
#define U3USR_RFNE_mask                                                              (0x00000008)
#define U3USR_RFNE(data)                                                             (0x00000008&((data)<<3))
#define U3USR_RFNE_src(data)                                                         ((0x00000008&(data))>>3)
#define U3USR_get_RFNE(data)                                                         ((0x00000008&(data))>>3)
#define U3USR_TFE_shift                                                              (2)
#define U3USR_TFE_mask                                                               (0x00000004)
#define U3USR_TFE(data)                                                              (0x00000004&((data)<<2))
#define U3USR_TFE_src(data)                                                          ((0x00000004&(data))>>2)
#define U3USR_get_TFE(data)                                                          ((0x00000004&(data))>>2)
#define U3USR_TFNF_shift                                                             (1)
#define U3USR_TFNF_mask                                                              (0x00000002)
#define U3USR_TFNF(data)                                                             (0x00000002&((data)<<1))
#define U3USR_TFNF_src(data)                                                         ((0x00000002&(data))>>1)
#define U3USR_get_TFNF(data)                                                         ((0x00000002&(data))>>1)
#define U3USR_BUSY_shift                                                             (0)
#define U3USR_BUSY_mask                                                              (0x00000001)
#define U3USR_BUSY(data)                                                             (0x00000001&((data)<<0))
#define U3USR_BUSY_src(data)                                                         ((0x00000001&(data))>>0)
#define U3USR_get_BUSY(data)                                                         ((0x00000001&(data))>>0)


#define U3TFL                                                                        0x1801B380
#define U3TFL_reg_addr                                                               "0xB801B380"
#define U3TFL_reg                                                                    0xB801B380
#define set_U3TFL_reg(data)   (*((volatile unsigned int*) U3TFL_reg)=data)
#define get_U3TFL_reg   (*((volatile unsigned int*) U3TFL_reg))
#define U3TFL_inst_adr                                                               "0x00E0"
#define U3TFL_inst                                                                   0x00E0
#define U3TFL_TFL_shift                                                              (0)
#define U3TFL_TFL_mask                                                               (0x000000FF)
#define U3TFL_TFL(data)                                                              (0x000000FF&((data)<<0))
#define U3TFL_TFL_src(data)                                                          ((0x000000FF&(data))>>0)
#define U3TFL_get_TFL(data)                                                          ((0x000000FF&(data))>>0)


#define U3RFL                                                                        0x1801B384
#define U3RFL_reg_addr                                                               "0xB801B384"
#define U3RFL_reg                                                                    0xB801B384
#define set_U3RFL_reg(data)   (*((volatile unsigned int*) U3RFL_reg)=data)
#define get_U3RFL_reg   (*((volatile unsigned int*) U3RFL_reg))
#define U3RFL_inst_adr                                                               "0x00E1"
#define U3RFL_inst                                                                   0x00E1
#define U3RFL_RFL_shift                                                              (0)
#define U3RFL_RFL_mask                                                               (0x000000FF)
#define U3RFL_RFL(data)                                                              (0x000000FF&((data)<<0))
#define U3RFL_RFL_src(data)                                                          ((0x000000FF&(data))>>0)
#define U3RFL_get_RFL(data)                                                          ((0x000000FF&(data))>>0)


#define U3SRR                                                                        0x1801B388
#define U3SRR_reg_addr                                                               "0xB801B388"
#define U3SRR_reg                                                                    0xB801B388
#define set_U3SRR_reg(data)   (*((volatile unsigned int*) U3SRR_reg)=data)
#define get_U3SRR_reg   (*((volatile unsigned int*) U3SRR_reg))
#define U3SRR_inst_adr                                                               "0x00E2"
#define U3SRR_inst                                                                   0x00E2
#define U3SRR_XFR_shift                                                              (2)
#define U3SRR_XFR_mask                                                               (0x00000004)
#define U3SRR_XFR(data)                                                              (0x00000004&((data)<<2))
#define U3SRR_XFR_src(data)                                                          ((0x00000004&(data))>>2)
#define U3SRR_get_XFR(data)                                                          ((0x00000004&(data))>>2)
#define U3SRR_RFR_shift                                                              (1)
#define U3SRR_RFR_mask                                                               (0x00000002)
#define U3SRR_RFR(data)                                                              (0x00000002&((data)<<1))
#define U3SRR_RFR_src(data)                                                          ((0x00000002&(data))>>1)
#define U3SRR_get_RFR(data)                                                          ((0x00000002&(data))>>1)
#define U3SRR_UR_shift                                                               (0)
#define U3SRR_UR_mask                                                                (0x00000001)
#define U3SRR_UR(data)                                                               (0x00000001&((data)<<0))
#define U3SRR_UR_src(data)                                                           ((0x00000001&(data))>>0)
#define U3SRR_get_UR(data)                                                           ((0x00000001&(data))>>0)


#define U3SBCR                                                                       0x1801B390
#define U3SBCR_reg_addr                                                              "0xB801B390"
#define U3SBCR_reg                                                                   0xB801B390
#define set_U3SBCR_reg(data)   (*((volatile unsigned int*) U3SBCR_reg)=data)
#define get_U3SBCR_reg   (*((volatile unsigned int*) U3SBCR_reg))
#define U3SBCR_inst_adr                                                              "0x00E4"
#define U3SBCR_inst                                                                  0x00E4
#define U3SBCR_SBCR_shift                                                            (0)
#define U3SBCR_SBCR_mask                                                             (0x00000001)
#define U3SBCR_SBCR(data)                                                            (0x00000001&((data)<<0))
#define U3SBCR_SBCR_src(data)                                                        ((0x00000001&(data))>>0)
#define U3SBCR_get_SBCR(data)                                                        ((0x00000001&(data))>>0)


#define U3SDMAM                                                                      0x1801B394
#define U3SDMAM_reg_addr                                                             "0xB801B394"
#define U3SDMAM_reg                                                                  0xB801B394
#define set_U3SDMAM_reg(data)   (*((volatile unsigned int*) U3SDMAM_reg)=data)
#define get_U3SDMAM_reg   (*((volatile unsigned int*) U3SDMAM_reg))
#define U3SDMAM_inst_adr                                                             "0x00E5"
#define U3SDMAM_inst                                                                 0x00E5
#define U3SDMAM_SDMAM_shift                                                          (0)
#define U3SDMAM_SDMAM_mask                                                           (0x00000001)
#define U3SDMAM_SDMAM(data)                                                          (0x00000001&((data)<<0))
#define U3SDMAM_SDMAM_src(data)                                                      ((0x00000001&(data))>>0)
#define U3SDMAM_get_SDMAM(data)                                                      ((0x00000001&(data))>>0)


#define U3SFE                                                                        0x1801B398
#define U3SFE_reg_addr                                                               "0xB801B398"
#define U3SFE_reg                                                                    0xB801B398
#define set_U3SFE_reg(data)   (*((volatile unsigned int*) U3SFE_reg)=data)
#define get_U3SFE_reg   (*((volatile unsigned int*) U3SFE_reg))
#define U3SFE_inst_adr                                                               "0x00E6"
#define U3SFE_inst                                                                   0x00E6
#define U3SFE_SFE_shift                                                              (0)
#define U3SFE_SFE_mask                                                               (0x00000001)
#define U3SFE_SFE(data)                                                              (0x00000001&((data)<<0))
#define U3SFE_SFE_src(data)                                                          ((0x00000001&(data))>>0)
#define U3SFE_get_SFE(data)                                                          ((0x00000001&(data))>>0)


#define U3SRT                                                                        0x1801B39C
#define U3SRT_reg_addr                                                               "0xB801B39C"
#define U3SRT_reg                                                                    0xB801B39C
#define set_U3SRT_reg(data)   (*((volatile unsigned int*) U3SRT_reg)=data)
#define get_U3SRT_reg   (*((volatile unsigned int*) U3SRT_reg))
#define U3SRT_inst_adr                                                               "0x00E7"
#define U3SRT_inst                                                                   0x00E7
#define U3SRT_SRT_shift                                                              (0)
#define U3SRT_SRT_mask                                                               (0x00000003)
#define U3SRT_SRT(data)                                                              (0x00000003&((data)<<0))
#define U3SRT_SRT_src(data)                                                          ((0x00000003&(data))>>0)
#define U3SRT_get_SRT(data)                                                          ((0x00000003&(data))>>0)


#define U3STET                                                                       0x1801B3A0
#define U3STET_reg_addr                                                              "0xB801B3A0"
#define U3STET_reg                                                                   0xB801B3A0
#define set_U3STET_reg(data)   (*((volatile unsigned int*) U3STET_reg)=data)
#define get_U3STET_reg   (*((volatile unsigned int*) U3STET_reg))
#define U3STET_inst_adr                                                              "0x00E8"
#define U3STET_inst                                                                  0x00E8
#define U3STET_STET_shift                                                            (0)
#define U3STET_STET_mask                                                             (0x00000003)
#define U3STET_STET(data)                                                            (0x00000003&((data)<<0))
#define U3STET_STET_src(data)                                                        ((0x00000003&(data))>>0)
#define U3STET_get_STET(data)                                                        ((0x00000003&(data))>>0)


#define U3HTX                                                                        0x1801B3A4
#define U3HTX_reg_addr                                                               "0xB801B3A4"
#define U3HTX_reg                                                                    0xB801B3A4
#define set_U3HTX_reg(data)   (*((volatile unsigned int*) U3HTX_reg)=data)
#define get_U3HTX_reg   (*((volatile unsigned int*) U3HTX_reg))
#define U3HTX_inst_adr                                                               "0x00E9"
#define U3HTX_inst                                                                   0x00E9
#define U3HTX_HTX_shift                                                              (0)
#define U3HTX_HTX_mask                                                               (0x00000001)
#define U3HTX_HTX(data)                                                              (0x00000001&((data)<<0))
#define U3HTX_HTX_src(data)                                                          ((0x00000001&(data))>>0)
#define U3HTX_get_HTX(data)                                                          ((0x00000001&(data))>>0)


#define U3DMASA                                                                      0x1801B3A8
#define U3DMASA_reg_addr                                                             "0xB801B3A8"
#define U3DMASA_reg                                                                  0xB801B3A8
#define set_U3DMASA_reg(data)   (*((volatile unsigned int*) U3DMASA_reg)=data)
#define get_U3DMASA_reg   (*((volatile unsigned int*) U3DMASA_reg))
#define U3DMASA_inst_adr                                                             "0x00EA"
#define U3DMASA_inst                                                                 0x00EA
#define U3DMASA_DMASA_shift                                                          (0)
#define U3DMASA_DMASA_mask                                                           (0x00000001)
#define U3DMASA_DMASA(data)                                                          (0x00000001&((data)<<0))
#define U3DMASA_DMASA_src(data)                                                      ((0x00000001&(data))>>0)
#define U3DMASA_get_DMASA(data)                                                      ((0x00000001&(data))>>0)


#define U3CPR                                                                        0x1801B3F4
#define U3CPR_reg_addr                                                               "0xB801B3F4"
#define U3CPR_reg                                                                    0xB801B3F4
#define set_U3CPR_reg(data)   (*((volatile unsigned int*) U3CPR_reg)=data)
#define get_U3CPR_reg   (*((volatile unsigned int*) U3CPR_reg))
#define U3CPR_inst_adr                                                               "0x00FD"
#define U3CPR_inst                                                                   0x00FD
#define U3CPR_FIFO_MODE_shift                                                        (16)
#define U3CPR_FIFO_MODE_mask                                                         (0x00FF0000)
#define U3CPR_FIFO_MODE(data)                                                        (0x00FF0000&((data)<<16))
#define U3CPR_FIFO_MODE_src(data)                                                    ((0x00FF0000&(data))>>16)
#define U3CPR_get_FIFO_MODE(data)                                                    ((0x00FF0000&(data))>>16)
#define U3CPR_DMA_EXTRA_shift                                                        (13)
#define U3CPR_DMA_EXTRA_mask                                                         (0x00002000)
#define U3CPR_DMA_EXTRA(data)                                                        (0x00002000&((data)<<13))
#define U3CPR_DMA_EXTRA_src(data)                                                    ((0x00002000&(data))>>13)
#define U3CPR_get_DMA_EXTRA(data)                                                    ((0x00002000&(data))>>13)
#define U3CPR_UART_ADD_ENCODED_PARAMS_shift                                          (12)
#define U3CPR_UART_ADD_ENCODED_PARAMS_mask                                           (0x00001000)
#define U3CPR_UART_ADD_ENCODED_PARAMS(data)                                          (0x00001000&((data)<<12))
#define U3CPR_UART_ADD_ENCODED_PARAMS_src(data)                                      ((0x00001000&(data))>>12)
#define U3CPR_get_UART_ADD_ENCODED_PARAMS(data)                                      ((0x00001000&(data))>>12)
#define U3CPR_SHADOW_shift                                                           (11)
#define U3CPR_SHADOW_mask                                                            (0x00000800)
#define U3CPR_SHADOW(data)                                                           (0x00000800&((data)<<11))
#define U3CPR_SHADOW_src(data)                                                       ((0x00000800&(data))>>11)
#define U3CPR_get_SHADOW(data)                                                       ((0x00000800&(data))>>11)
#define U3CPR_FIFO_STAT_shift                                                        (10)
#define U3CPR_FIFO_STAT_mask                                                         (0x00000400)
#define U3CPR_FIFO_STAT(data)                                                        (0x00000400&((data)<<10))
#define U3CPR_FIFO_STAT_src(data)                                                    ((0x00000400&(data))>>10)
#define U3CPR_get_FIFO_STAT(data)                                                    ((0x00000400&(data))>>10)
#define U3CPR_FIFO_ACCESS_shift                                                      (9)
#define U3CPR_FIFO_ACCESS_mask                                                       (0x00000200)
#define U3CPR_FIFO_ACCESS(data)                                                      (0x00000200&((data)<<9))
#define U3CPR_FIFO_ACCESS_src(data)                                                  ((0x00000200&(data))>>9)
#define U3CPR_get_FIFO_ACCESS(data)                                                  ((0x00000200&(data))>>9)
#define U3CPR_ADDITIONAL_FEAT_shift                                                  (8)
#define U3CPR_ADDITIONAL_FEAT_mask                                                   (0x00000100)
#define U3CPR_ADDITIONAL_FEAT(data)                                                  (0x00000100&((data)<<8))
#define U3CPR_ADDITIONAL_FEAT_src(data)                                              ((0x00000100&(data))>>8)
#define U3CPR_get_ADDITIONAL_FEAT(data)                                              ((0x00000100&(data))>>8)
#define U3CPR_SIR_LP_MODE_shift                                                      (7)
#define U3CPR_SIR_LP_MODE_mask                                                       (0x00000080)
#define U3CPR_SIR_LP_MODE(data)                                                      (0x00000080&((data)<<7))
#define U3CPR_SIR_LP_MODE_src(data)                                                  ((0x00000080&(data))>>7)
#define U3CPR_get_SIR_LP_MODE(data)                                                  ((0x00000080&(data))>>7)
#define U3CPR_SIR_MODE_shift                                                         (6)
#define U3CPR_SIR_MODE_mask                                                          (0x00000040)
#define U3CPR_SIR_MODE(data)                                                         (0x00000040&((data)<<6))
#define U3CPR_SIR_MODE_src(data)                                                     ((0x00000040&(data))>>6)
#define U3CPR_get_SIR_MODE(data)                                                     ((0x00000040&(data))>>6)
#define U3CPR_THRE_MODE_shift                                                        (5)
#define U3CPR_THRE_MODE_mask                                                         (0x00000020)
#define U3CPR_THRE_MODE(data)                                                        (0x00000020&((data)<<5))
#define U3CPR_THRE_MODE_src(data)                                                    ((0x00000020&(data))>>5)
#define U3CPR_get_THRE_MODE(data)                                                    ((0x00000020&(data))>>5)
#define U3CPR_AFCE_MODE_shift                                                        (4)
#define U3CPR_AFCE_MODE_mask                                                         (0x00000010)
#define U3CPR_AFCE_MODE(data)                                                        (0x00000010&((data)<<4))
#define U3CPR_AFCE_MODE_src(data)                                                    ((0x00000010&(data))>>4)
#define U3CPR_get_AFCE_MODE(data)                                                    ((0x00000010&(data))>>4)
#define U3CPR_APB_DATA_WIDTH_shift                                                   (0)
#define U3CPR_APB_DATA_WIDTH_mask                                                    (0x00000003)
#define U3CPR_APB_DATA_WIDTH(data)                                                   (0x00000003&((data)<<0))
#define U3CPR_APB_DATA_WIDTH_src(data)                                               ((0x00000003&(data))>>0)
#define U3CPR_get_APB_DATA_WIDTH(data)                                               ((0x00000003&(data))>>0)


#define U3UCV                                                                        0x1801B3F8
#define U3UCV_reg_addr                                                               "0xB801B3F8"
#define U3UCV_reg                                                                    0xB801B3F8
#define set_U3UCV_reg(data)   (*((volatile unsigned int*) U3UCV_reg)=data)
#define get_U3UCV_reg   (*((volatile unsigned int*) U3UCV_reg))
#define U3UCV_inst_adr                                                               "0x00FE"
#define U3UCV_inst                                                                   0x00FE
#define U3UCV_UCV_shift                                                              (0)
#define U3UCV_UCV_mask                                                               (0xFFFFFFFF)
#define U3UCV_UCV(data)                                                              (0xFFFFFFFF&((data)<<0))
#define U3UCV_UCV_src(data)                                                          ((0xFFFFFFFF&(data))>>0)
#define U3UCV_get_UCV(data)                                                          ((0xFFFFFFFF&(data))>>0)


#define U3CTR                                                                        0x1801B3FC
#define U3CTR_reg_addr                                                               "0xB801B3FC"
#define U3CTR_reg                                                                    0xB801B3FC
#define set_U3CTR_reg(data)   (*((volatile unsigned int*) U3CTR_reg)=data)
#define get_U3CTR_reg   (*((volatile unsigned int*) U3CTR_reg))
#define U3CTR_inst_adr                                                               "0x00FF"
#define U3CTR_inst                                                                   0x00FF
#define U3CTR_CTR_shift                                                              (0)
#define U3CTR_CTR_mask                                                               (0xFFFFFFFF)
#define U3CTR_CTR(data)                                                              (0xFFFFFFFF&((data)<<0))
#define U3CTR_CTR_src(data)                                                          ((0xFFFFFFFF&(data))>>0)
#define U3CTR_get_CTR(data)                                                          ((0xFFFFFFFF&(data))>>0)


#define IC1_CON                                                                      0x1801B400
#define IC1_CON_reg_addr                                                             "0xB801B400"
#define IC1_CON_reg                                                                  0xB801B400
#define set_IC1_CON_reg(data)   (*((volatile unsigned int*) IC1_CON_reg)=data)
#define get_IC1_CON_reg   (*((volatile unsigned int*) IC1_CON_reg))
#define IC1_CON_inst_adr                                                             "0x0000"
#define IC1_CON_inst                                                                 0x0000
#define IC1_CON_IC_SLAVE_DISABLE_shift                                               (6)
#define IC1_CON_IC_SLAVE_DISABLE_mask                                                (0x00000040)
#define IC1_CON_IC_SLAVE_DISABLE(data)                                               (0x00000040&((data)<<6))
#define IC1_CON_IC_SLAVE_DISABLE_src(data)                                           ((0x00000040&(data))>>6)
#define IC1_CON_get_IC_SLAVE_DISABLE(data)                                           ((0x00000040&(data))>>6)
#define IC1_CON_IC_RESTART_EN_shift                                                  (5)
#define IC1_CON_IC_RESTART_EN_mask                                                   (0x00000020)
#define IC1_CON_IC_RESTART_EN(data)                                                  (0x00000020&((data)<<5))
#define IC1_CON_IC_RESTART_EN_src(data)                                              ((0x00000020&(data))>>5)
#define IC1_CON_get_IC_RESTART_EN(data)                                              ((0x00000020&(data))>>5)
#define IC1_CON_IC_10BITADDR_MASTER_shift                                            (4)
#define IC1_CON_IC_10BITADDR_MASTER_mask                                             (0x00000010)
#define IC1_CON_IC_10BITADDR_MASTER(data)                                            (0x00000010&((data)<<4))
#define IC1_CON_IC_10BITADDR_MASTER_src(data)                                        ((0x00000010&(data))>>4)
#define IC1_CON_get_IC_10BITADDR_MASTER(data)                                        ((0x00000010&(data))>>4)
#define IC1_CON_IC_10BITADDR_SLAVE_shift                                             (3)
#define IC1_CON_IC_10BITADDR_SLAVE_mask                                              (0x00000008)
#define IC1_CON_IC_10BITADDR_SLAVE(data)                                             (0x00000008&((data)<<3))
#define IC1_CON_IC_10BITADDR_SLAVE_src(data)                                         ((0x00000008&(data))>>3)
#define IC1_CON_get_IC_10BITADDR_SLAVE(data)                                         ((0x00000008&(data))>>3)
#define IC1_CON_SPEED_shift                                                          (1)
#define IC1_CON_SPEED_mask                                                           (0x00000006)
#define IC1_CON_SPEED(data)                                                          (0x00000006&((data)<<1))
#define IC1_CON_SPEED_src(data)                                                      ((0x00000006&(data))>>1)
#define IC1_CON_get_SPEED(data)                                                      ((0x00000006&(data))>>1)
#define IC1_CON_MASTER_MODE_shift                                                    (0)
#define IC1_CON_MASTER_MODE_mask                                                     (0x00000001)
#define IC1_CON_MASTER_MODE(data)                                                    (0x00000001&((data)<<0))
#define IC1_CON_MASTER_MODE_src(data)                                                ((0x00000001&(data))>>0)
#define IC1_CON_get_MASTER_MODE(data)                                                ((0x00000001&(data))>>0)


#define IC1_TAR                                                                      0x1801B404
#define IC1_TAR_reg_addr                                                             "0xB801B404"
#define IC1_TAR_reg                                                                  0xB801B404
#define set_IC1_TAR_reg(data)   (*((volatile unsigned int*) IC1_TAR_reg)=data)
#define get_IC1_TAR_reg   (*((volatile unsigned int*) IC1_TAR_reg))
#define IC1_TAR_inst_adr                                                             "0x0001"
#define IC1_TAR_inst                                                                 0x0001
#define IC1_TAR_IC_10BITADDR_MASTER_shift                                            (12)
#define IC1_TAR_IC_10BITADDR_MASTER_mask                                             (0x00001000)
#define IC1_TAR_IC_10BITADDR_MASTER(data)                                            (0x00001000&((data)<<12))
#define IC1_TAR_IC_10BITADDR_MASTER_src(data)                                        ((0x00001000&(data))>>12)
#define IC1_TAR_get_IC_10BITADDR_MASTER(data)                                        ((0x00001000&(data))>>12)
#define IC1_TAR_SPECIAL_shift                                                        (11)
#define IC1_TAR_SPECIAL_mask                                                         (0x00000800)
#define IC1_TAR_SPECIAL(data)                                                        (0x00000800&((data)<<11))
#define IC1_TAR_SPECIAL_src(data)                                                    ((0x00000800&(data))>>11)
#define IC1_TAR_get_SPECIAL(data)                                                    ((0x00000800&(data))>>11)
#define IC1_TAR_GC_OR_START_shift                                                    (10)
#define IC1_TAR_GC_OR_START_mask                                                     (0x00000400)
#define IC1_TAR_GC_OR_START(data)                                                    (0x00000400&((data)<<10))
#define IC1_TAR_GC_OR_START_src(data)                                                ((0x00000400&(data))>>10)
#define IC1_TAR_get_GC_OR_START(data)                                                ((0x00000400&(data))>>10)
#define IC1_TAR_IC_TAR_shift                                                         (0)
#define IC1_TAR_IC_TAR_mask                                                          (0x000003FF)
#define IC1_TAR_IC_TAR(data)                                                         (0x000003FF&((data)<<0))
#define IC1_TAR_IC_TAR_src(data)                                                     ((0x000003FF&(data))>>0)
#define IC1_TAR_get_IC_TAR(data)                                                     ((0x000003FF&(data))>>0)


#define IC1_SAR                                                                      0x1801B408
#define IC1_SAR_reg_addr                                                             "0xB801B408"
#define IC1_SAR_reg                                                                  0xB801B408
#define set_IC1_SAR_reg(data)   (*((volatile unsigned int*) IC1_SAR_reg)=data)
#define get_IC1_SAR_reg   (*((volatile unsigned int*) IC1_SAR_reg))
#define IC1_SAR_inst_adr                                                             "0x0002"
#define IC1_SAR_inst                                                                 0x0002
#define IC1_SAR_IC_SAR_shift                                                         (0)
#define IC1_SAR_IC_SAR_mask                                                          (0x000003FF)
#define IC1_SAR_IC_SAR(data)                                                         (0x000003FF&((data)<<0))
#define IC1_SAR_IC_SAR_src(data)                                                     ((0x000003FF&(data))>>0)
#define IC1_SAR_get_IC_SAR(data)                                                     ((0x000003FF&(data))>>0)


#define IC1_HS_MADDR                                                                 0x1801B40C
#define IC1_HS_MADDR_reg_addr                                                        "0xB801B40C"
#define IC1_HS_MADDR_reg                                                             0xB801B40C
#define set_IC1_HS_MADDR_reg(data)   (*((volatile unsigned int*) IC1_HS_MADDR_reg)=data)
#define get_IC1_HS_MADDR_reg   (*((volatile unsigned int*) IC1_HS_MADDR_reg))
#define IC1_HS_MADDR_inst_adr                                                        "0x0003"
#define IC1_HS_MADDR_inst                                                            0x0003
#define IC1_HS_MADDR_IC_HS_MAR_shift                                                 (0)
#define IC1_HS_MADDR_IC_HS_MAR_mask                                                  (0x00000007)
#define IC1_HS_MADDR_IC_HS_MAR(data)                                                 (0x00000007&((data)<<0))
#define IC1_HS_MADDR_IC_HS_MAR_src(data)                                             ((0x00000007&(data))>>0)
#define IC1_HS_MADDR_get_IC_HS_MAR(data)                                             ((0x00000007&(data))>>0)


#define IC1_DATA_CMD                                                                 0x1801B410
#define IC1_DATA_CMD_reg_addr                                                        "0xB801B410"
#define IC1_DATA_CMD_reg                                                             0xB801B410
#define set_IC1_DATA_CMD_reg(data)   (*((volatile unsigned int*) IC1_DATA_CMD_reg)=data)
#define get_IC1_DATA_CMD_reg   (*((volatile unsigned int*) IC1_DATA_CMD_reg))
#define IC1_DATA_CMD_inst_adr                                                        "0x0004"
#define IC1_DATA_CMD_inst                                                            0x0004
#define IC1_DATA_CMD_CMD_shift                                                       (8)
#define IC1_DATA_CMD_CMD_mask                                                        (0x00000100)
#define IC1_DATA_CMD_CMD(data)                                                       (0x00000100&((data)<<8))
#define IC1_DATA_CMD_CMD_src(data)                                                   ((0x00000100&(data))>>8)
#define IC1_DATA_CMD_get_CMD(data)                                                   ((0x00000100&(data))>>8)
#define IC1_DATA_CMD_DAT_shift                                                       (0)
#define IC1_DATA_CMD_DAT_mask                                                        (0x000000FF)
#define IC1_DATA_CMD_DAT(data)                                                       (0x000000FF&((data)<<0))
#define IC1_DATA_CMD_DAT_src(data)                                                   ((0x000000FF&(data))>>0)
#define IC1_DATA_CMD_get_DAT(data)                                                   ((0x000000FF&(data))>>0)


#define IC1_SS_SCL_HCNT                                                              0x1801B414
#define IC1_SS_SCL_HCNT_reg_addr                                                     "0xB801B414"
#define IC1_SS_SCL_HCNT_reg                                                          0xB801B414
#define set_IC1_SS_SCL_HCNT_reg(data)   (*((volatile unsigned int*) IC1_SS_SCL_HCNT_reg)=data)
#define get_IC1_SS_SCL_HCNT_reg   (*((volatile unsigned int*) IC1_SS_SCL_HCNT_reg))
#define IC1_SS_SCL_HCNT_inst_adr                                                     "0x0005"
#define IC1_SS_SCL_HCNT_inst                                                         0x0005
#define IC1_SS_SCL_HCNT_IC_SS_SCL_HCNT_shift                                         (0)
#define IC1_SS_SCL_HCNT_IC_SS_SCL_HCNT_mask                                          (0x0000FFFF)
#define IC1_SS_SCL_HCNT_IC_SS_SCL_HCNT(data)                                         (0x0000FFFF&((data)<<0))
#define IC1_SS_SCL_HCNT_IC_SS_SCL_HCNT_src(data)                                     ((0x0000FFFF&(data))>>0)
#define IC1_SS_SCL_HCNT_get_IC_SS_SCL_HCNT(data)                                     ((0x0000FFFF&(data))>>0)


#define IC1_SS_SCL_LCNT                                                              0x1801B418
#define IC1_SS_SCL_LCNT_reg_addr                                                     "0xB801B418"
#define IC1_SS_SCL_LCNT_reg                                                          0xB801B418
#define set_IC1_SS_SCL_LCNT_reg(data)   (*((volatile unsigned int*) IC1_SS_SCL_LCNT_reg)=data)
#define get_IC1_SS_SCL_LCNT_reg   (*((volatile unsigned int*) IC1_SS_SCL_LCNT_reg))
#define IC1_SS_SCL_LCNT_inst_adr                                                     "0x0006"
#define IC1_SS_SCL_LCNT_inst                                                         0x0006
#define IC1_SS_SCL_LCNT_IC_SS_SCL_LCNT_shift                                         (0)
#define IC1_SS_SCL_LCNT_IC_SS_SCL_LCNT_mask                                          (0x0000FFFF)
#define IC1_SS_SCL_LCNT_IC_SS_SCL_LCNT(data)                                         (0x0000FFFF&((data)<<0))
#define IC1_SS_SCL_LCNT_IC_SS_SCL_LCNT_src(data)                                     ((0x0000FFFF&(data))>>0)
#define IC1_SS_SCL_LCNT_get_IC_SS_SCL_LCNT(data)                                     ((0x0000FFFF&(data))>>0)


#define IC1_FS_SCL_HCNT                                                              0x1801B41C
#define IC1_FS_SCL_HCNT_reg_addr                                                     "0xB801B41C"
#define IC1_FS_SCL_HCNT_reg                                                          0xB801B41C
#define set_IC1_FS_SCL_HCNT_reg(data)   (*((volatile unsigned int*) IC1_FS_SCL_HCNT_reg)=data)
#define get_IC1_FS_SCL_HCNT_reg   (*((volatile unsigned int*) IC1_FS_SCL_HCNT_reg))
#define IC1_FS_SCL_HCNT_inst_adr                                                     "0x0007"
#define IC1_FS_SCL_HCNT_inst                                                         0x0007
#define IC1_FS_SCL_HCNT_IC_FS_SCL_HCNT_shift                                         (0)
#define IC1_FS_SCL_HCNT_IC_FS_SCL_HCNT_mask                                          (0x0000FFFF)
#define IC1_FS_SCL_HCNT_IC_FS_SCL_HCNT(data)                                         (0x0000FFFF&((data)<<0))
#define IC1_FS_SCL_HCNT_IC_FS_SCL_HCNT_src(data)                                     ((0x0000FFFF&(data))>>0)
#define IC1_FS_SCL_HCNT_get_IC_FS_SCL_HCNT(data)                                     ((0x0000FFFF&(data))>>0)


#define IC1_FS_SCL_LCNT                                                              0x1801B420
#define IC1_FS_SCL_LCNT_reg_addr                                                     "0xB801B420"
#define IC1_FS_SCL_LCNT_reg                                                          0xB801B420
#define set_IC1_FS_SCL_LCNT_reg(data)   (*((volatile unsigned int*) IC1_FS_SCL_LCNT_reg)=data)
#define get_IC1_FS_SCL_LCNT_reg   (*((volatile unsigned int*) IC1_FS_SCL_LCNT_reg))
#define IC1_FS_SCL_LCNT_inst_adr                                                     "0x0008"
#define IC1_FS_SCL_LCNT_inst                                                         0x0008
#define IC1_FS_SCL_LCNT_IC_FS_SCL_LCNT_shift                                         (0)
#define IC1_FS_SCL_LCNT_IC_FS_SCL_LCNT_mask                                          (0x0000FFFF)
#define IC1_FS_SCL_LCNT_IC_FS_SCL_LCNT(data)                                         (0x0000FFFF&((data)<<0))
#define IC1_FS_SCL_LCNT_IC_FS_SCL_LCNT_src(data)                                     ((0x0000FFFF&(data))>>0)
#define IC1_FS_SCL_LCNT_get_IC_FS_SCL_LCNT(data)                                     ((0x0000FFFF&(data))>>0)


#define IC1_INTR_STAT                                                                0x1801B42C
#define IC1_INTR_STAT_reg_addr                                                       "0xB801B42C"
#define IC1_INTR_STAT_reg                                                            0xB801B42C
#define set_IC1_INTR_STAT_reg(data)   (*((volatile unsigned int*) IC1_INTR_STAT_reg)=data)
#define get_IC1_INTR_STAT_reg   (*((volatile unsigned int*) IC1_INTR_STAT_reg))
#define IC1_INTR_STAT_inst_adr                                                       "0x000B"
#define IC1_INTR_STAT_inst                                                           0x000B
#define IC1_INTR_STAT_R_GEN_CALL_shift                                               (11)
#define IC1_INTR_STAT_R_GEN_CALL_mask                                                (0x00000800)
#define IC1_INTR_STAT_R_GEN_CALL(data)                                               (0x00000800&((data)<<11))
#define IC1_INTR_STAT_R_GEN_CALL_src(data)                                           ((0x00000800&(data))>>11)
#define IC1_INTR_STAT_get_R_GEN_CALL(data)                                           ((0x00000800&(data))>>11)
#define IC1_INTR_STAT_R_START_DET_shift                                              (10)
#define IC1_INTR_STAT_R_START_DET_mask                                               (0x00000400)
#define IC1_INTR_STAT_R_START_DET(data)                                              (0x00000400&((data)<<10))
#define IC1_INTR_STAT_R_START_DET_src(data)                                          ((0x00000400&(data))>>10)
#define IC1_INTR_STAT_get_R_START_DET(data)                                          ((0x00000400&(data))>>10)
#define IC1_INTR_STAT_R_STOP_DET_shift                                               (9)
#define IC1_INTR_STAT_R_STOP_DET_mask                                                (0x00000200)
#define IC1_INTR_STAT_R_STOP_DET(data)                                               (0x00000200&((data)<<9))
#define IC1_INTR_STAT_R_STOP_DET_src(data)                                           ((0x00000200&(data))>>9)
#define IC1_INTR_STAT_get_R_STOP_DET(data)                                           ((0x00000200&(data))>>9)
#define IC1_INTR_STAT_R_ACTIVITY_shift                                               (8)
#define IC1_INTR_STAT_R_ACTIVITY_mask                                                (0x00000100)
#define IC1_INTR_STAT_R_ACTIVITY(data)                                               (0x00000100&((data)<<8))
#define IC1_INTR_STAT_R_ACTIVITY_src(data)                                           ((0x00000100&(data))>>8)
#define IC1_INTR_STAT_get_R_ACTIVITY(data)                                           ((0x00000100&(data))>>8)
#define IC1_INTR_STAT_R_RX_DONE_shift                                                (7)
#define IC1_INTR_STAT_R_RX_DONE_mask                                                 (0x00000080)
#define IC1_INTR_STAT_R_RX_DONE(data)                                                (0x00000080&((data)<<7))
#define IC1_INTR_STAT_R_RX_DONE_src(data)                                            ((0x00000080&(data))>>7)
#define IC1_INTR_STAT_get_R_RX_DONE(data)                                            ((0x00000080&(data))>>7)
#define IC1_INTR_STAT_R_TX_ABRT_shift                                                (6)
#define IC1_INTR_STAT_R_TX_ABRT_mask                                                 (0x00000040)
#define IC1_INTR_STAT_R_TX_ABRT(data)                                                (0x00000040&((data)<<6))
#define IC1_INTR_STAT_R_TX_ABRT_src(data)                                            ((0x00000040&(data))>>6)
#define IC1_INTR_STAT_get_R_TX_ABRT(data)                                            ((0x00000040&(data))>>6)
#define IC1_INTR_STAT_R_RD_REQ_shift                                                 (5)
#define IC1_INTR_STAT_R_RD_REQ_mask                                                  (0x00000020)
#define IC1_INTR_STAT_R_RD_REQ(data)                                                 (0x00000020&((data)<<5))
#define IC1_INTR_STAT_R_RD_REQ_src(data)                                             ((0x00000020&(data))>>5)
#define IC1_INTR_STAT_get_R_RD_REQ(data)                                             ((0x00000020&(data))>>5)
#define IC1_INTR_STAT_R_TX_EMPTY_shift                                               (4)
#define IC1_INTR_STAT_R_TX_EMPTY_mask                                                (0x00000010)
#define IC1_INTR_STAT_R_TX_EMPTY(data)                                               (0x00000010&((data)<<4))
#define IC1_INTR_STAT_R_TX_EMPTY_src(data)                                           ((0x00000010&(data))>>4)
#define IC1_INTR_STAT_get_R_TX_EMPTY(data)                                           ((0x00000010&(data))>>4)
#define IC1_INTR_STAT_R_TX_OVER_shift                                                (3)
#define IC1_INTR_STAT_R_TX_OVER_mask                                                 (0x00000008)
#define IC1_INTR_STAT_R_TX_OVER(data)                                                (0x00000008&((data)<<3))
#define IC1_INTR_STAT_R_TX_OVER_src(data)                                            ((0x00000008&(data))>>3)
#define IC1_INTR_STAT_get_R_TX_OVER(data)                                            ((0x00000008&(data))>>3)
#define IC1_INTR_STAT_R_RX_FULL_shift                                                (2)
#define IC1_INTR_STAT_R_RX_FULL_mask                                                 (0x00000004)
#define IC1_INTR_STAT_R_RX_FULL(data)                                                (0x00000004&((data)<<2))
#define IC1_INTR_STAT_R_RX_FULL_src(data)                                            ((0x00000004&(data))>>2)
#define IC1_INTR_STAT_get_R_RX_FULL(data)                                            ((0x00000004&(data))>>2)
#define IC1_INTR_STAT_R_RX_OVER_shift                                                (1)
#define IC1_INTR_STAT_R_RX_OVER_mask                                                 (0x00000002)
#define IC1_INTR_STAT_R_RX_OVER(data)                                                (0x00000002&((data)<<1))
#define IC1_INTR_STAT_R_RX_OVER_src(data)                                            ((0x00000002&(data))>>1)
#define IC1_INTR_STAT_get_R_RX_OVER(data)                                            ((0x00000002&(data))>>1)
#define IC1_INTR_STAT_R_RX_UNDER_shift                                               (0)
#define IC1_INTR_STAT_R_RX_UNDER_mask                                                (0x00000001)
#define IC1_INTR_STAT_R_RX_UNDER(data)                                               (0x00000001&((data)<<0))
#define IC1_INTR_STAT_R_RX_UNDER_src(data)                                           ((0x00000001&(data))>>0)
#define IC1_INTR_STAT_get_R_RX_UNDER(data)                                           ((0x00000001&(data))>>0)


#define IC1_INTR_MASK                                                                0x1801B430
#define IC1_INTR_MASK_reg_addr                                                       "0xB801B430"
#define IC1_INTR_MASK_reg                                                            0xB801B430
#define set_IC1_INTR_MASK_reg(data)   (*((volatile unsigned int*) IC1_INTR_MASK_reg)=data)
#define get_IC1_INTR_MASK_reg   (*((volatile unsigned int*) IC1_INTR_MASK_reg))
#define IC1_INTR_MASK_inst_adr                                                       "0x000C"
#define IC1_INTR_MASK_inst                                                           0x000C
#define IC1_INTR_MASK_M_GEN_CALL_shift                                               (11)
#define IC1_INTR_MASK_M_GEN_CALL_mask                                                (0x00000800)
#define IC1_INTR_MASK_M_GEN_CALL(data)                                               (0x00000800&((data)<<11))
#define IC1_INTR_MASK_M_GEN_CALL_src(data)                                           ((0x00000800&(data))>>11)
#define IC1_INTR_MASK_get_M_GEN_CALL(data)                                           ((0x00000800&(data))>>11)
#define IC1_INTR_MASK_M_START_DET_shift                                              (10)
#define IC1_INTR_MASK_M_START_DET_mask                                               (0x00000400)
#define IC1_INTR_MASK_M_START_DET(data)                                              (0x00000400&((data)<<10))
#define IC1_INTR_MASK_M_START_DET_src(data)                                          ((0x00000400&(data))>>10)
#define IC1_INTR_MASK_get_M_START_DET(data)                                          ((0x00000400&(data))>>10)
#define IC1_INTR_MASK_M_STOP_DET_shift                                               (9)
#define IC1_INTR_MASK_M_STOP_DET_mask                                                (0x00000200)
#define IC1_INTR_MASK_M_STOP_DET(data)                                               (0x00000200&((data)<<9))
#define IC1_INTR_MASK_M_STOP_DET_src(data)                                           ((0x00000200&(data))>>9)
#define IC1_INTR_MASK_get_M_STOP_DET(data)                                           ((0x00000200&(data))>>9)
#define IC1_INTR_MASK_M_ACTIVITY_shift                                               (8)
#define IC1_INTR_MASK_M_ACTIVITY_mask                                                (0x00000100)
#define IC1_INTR_MASK_M_ACTIVITY(data)                                               (0x00000100&((data)<<8))
#define IC1_INTR_MASK_M_ACTIVITY_src(data)                                           ((0x00000100&(data))>>8)
#define IC1_INTR_MASK_get_M_ACTIVITY(data)                                           ((0x00000100&(data))>>8)
#define IC1_INTR_MASK_M_RX_DONE_shift                                                (7)
#define IC1_INTR_MASK_M_RX_DONE_mask                                                 (0x00000080)
#define IC1_INTR_MASK_M_RX_DONE(data)                                                (0x00000080&((data)<<7))
#define IC1_INTR_MASK_M_RX_DONE_src(data)                                            ((0x00000080&(data))>>7)
#define IC1_INTR_MASK_get_M_RX_DONE(data)                                            ((0x00000080&(data))>>7)
#define IC1_INTR_MASK_M_TX_ABRT_shift                                                (6)
#define IC1_INTR_MASK_M_TX_ABRT_mask                                                 (0x00000040)
#define IC1_INTR_MASK_M_TX_ABRT(data)                                                (0x00000040&((data)<<6))
#define IC1_INTR_MASK_M_TX_ABRT_src(data)                                            ((0x00000040&(data))>>6)
#define IC1_INTR_MASK_get_M_TX_ABRT(data)                                            ((0x00000040&(data))>>6)
#define IC1_INTR_MASK_M_RD_REQ_shift                                                 (5)
#define IC1_INTR_MASK_M_RD_REQ_mask                                                  (0x00000020)
#define IC1_INTR_MASK_M_RD_REQ(data)                                                 (0x00000020&((data)<<5))
#define IC1_INTR_MASK_M_RD_REQ_src(data)                                             ((0x00000020&(data))>>5)
#define IC1_INTR_MASK_get_M_RD_REQ(data)                                             ((0x00000020&(data))>>5)
#define IC1_INTR_MASK_M_TX_EMPTY_shift                                               (4)
#define IC1_INTR_MASK_M_TX_EMPTY_mask                                                (0x00000010)
#define IC1_INTR_MASK_M_TX_EMPTY(data)                                               (0x00000010&((data)<<4))
#define IC1_INTR_MASK_M_TX_EMPTY_src(data)                                           ((0x00000010&(data))>>4)
#define IC1_INTR_MASK_get_M_TX_EMPTY(data)                                           ((0x00000010&(data))>>4)
#define IC1_INTR_MASK_M_TX_OVER_shift                                                (3)
#define IC1_INTR_MASK_M_TX_OVER_mask                                                 (0x00000008)
#define IC1_INTR_MASK_M_TX_OVER(data)                                                (0x00000008&((data)<<3))
#define IC1_INTR_MASK_M_TX_OVER_src(data)                                            ((0x00000008&(data))>>3)
#define IC1_INTR_MASK_get_M_TX_OVER(data)                                            ((0x00000008&(data))>>3)
#define IC1_INTR_MASK_M_RX_FULL_shift                                                (2)
#define IC1_INTR_MASK_M_RX_FULL_mask                                                 (0x00000004)
#define IC1_INTR_MASK_M_RX_FULL(data)                                                (0x00000004&((data)<<2))
#define IC1_INTR_MASK_M_RX_FULL_src(data)                                            ((0x00000004&(data))>>2)
#define IC1_INTR_MASK_get_M_RX_FULL(data)                                            ((0x00000004&(data))>>2)
#define IC1_INTR_MASK_M_RX_OVER_shift                                                (1)
#define IC1_INTR_MASK_M_RX_OVER_mask                                                 (0x00000002)
#define IC1_INTR_MASK_M_RX_OVER(data)                                                (0x00000002&((data)<<1))
#define IC1_INTR_MASK_M_RX_OVER_src(data)                                            ((0x00000002&(data))>>1)
#define IC1_INTR_MASK_get_M_RX_OVER(data)                                            ((0x00000002&(data))>>1)
#define IC1_INTR_MASK_M_RX_UNDER_shift                                               (0)
#define IC1_INTR_MASK_M_RX_UNDER_mask                                                (0x00000001)
#define IC1_INTR_MASK_M_RX_UNDER(data)                                               (0x00000001&((data)<<0))
#define IC1_INTR_MASK_M_RX_UNDER_src(data)                                           ((0x00000001&(data))>>0)
#define IC1_INTR_MASK_get_M_RX_UNDER(data)                                           ((0x00000001&(data))>>0)


#define IC1_RAW_INTR_STAT                                                            0x1801B434
#define IC1_RAW_INTR_STAT_reg_addr                                                   "0xB801B434"
#define IC1_RAW_INTR_STAT_reg                                                        0xB801B434
#define set_IC1_RAW_INTR_STAT_reg(data)   (*((volatile unsigned int*) IC1_RAW_INTR_STAT_reg)=data)
#define get_IC1_RAW_INTR_STAT_reg   (*((volatile unsigned int*) IC1_RAW_INTR_STAT_reg))
#define IC1_RAW_INTR_STAT_inst_adr                                                   "0x000D"
#define IC1_RAW_INTR_STAT_inst                                                       0x000D
#define IC1_RAW_INTR_STAT_GEN_CALL_shift                                             (11)
#define IC1_RAW_INTR_STAT_GEN_CALL_mask                                              (0x00000800)
#define IC1_RAW_INTR_STAT_GEN_CALL(data)                                             (0x00000800&((data)<<11))
#define IC1_RAW_INTR_STAT_GEN_CALL_src(data)                                         ((0x00000800&(data))>>11)
#define IC1_RAW_INTR_STAT_get_GEN_CALL(data)                                         ((0x00000800&(data))>>11)
#define IC1_RAW_INTR_STAT_START_DET_shift                                            (10)
#define IC1_RAW_INTR_STAT_START_DET_mask                                             (0x00000400)
#define IC1_RAW_INTR_STAT_START_DET(data)                                            (0x00000400&((data)<<10))
#define IC1_RAW_INTR_STAT_START_DET_src(data)                                        ((0x00000400&(data))>>10)
#define IC1_RAW_INTR_STAT_get_START_DET(data)                                        ((0x00000400&(data))>>10)
#define IC1_RAW_INTR_STAT_STOP_DET_shift                                             (9)
#define IC1_RAW_INTR_STAT_STOP_DET_mask                                              (0x00000200)
#define IC1_RAW_INTR_STAT_STOP_DET(data)                                             (0x00000200&((data)<<9))
#define IC1_RAW_INTR_STAT_STOP_DET_src(data)                                         ((0x00000200&(data))>>9)
#define IC1_RAW_INTR_STAT_get_STOP_DET(data)                                         ((0x00000200&(data))>>9)
#define IC1_RAW_INTR_STAT_ACTIVITY_shift                                             (8)
#define IC1_RAW_INTR_STAT_ACTIVITY_mask                                              (0x00000100)
#define IC1_RAW_INTR_STAT_ACTIVITY(data)                                             (0x00000100&((data)<<8))
#define IC1_RAW_INTR_STAT_ACTIVITY_src(data)                                         ((0x00000100&(data))>>8)
#define IC1_RAW_INTR_STAT_get_ACTIVITY(data)                                         ((0x00000100&(data))>>8)
#define IC1_RAW_INTR_STAT_RX_DONE_shift                                              (7)
#define IC1_RAW_INTR_STAT_RX_DONE_mask                                               (0x00000080)
#define IC1_RAW_INTR_STAT_RX_DONE(data)                                              (0x00000080&((data)<<7))
#define IC1_RAW_INTR_STAT_RX_DONE_src(data)                                          ((0x00000080&(data))>>7)
#define IC1_RAW_INTR_STAT_get_RX_DONE(data)                                          ((0x00000080&(data))>>7)
#define IC1_RAW_INTR_STAT_TX_ABRT_shift                                              (6)
#define IC1_RAW_INTR_STAT_TX_ABRT_mask                                               (0x00000040)
#define IC1_RAW_INTR_STAT_TX_ABRT(data)                                              (0x00000040&((data)<<6))
#define IC1_RAW_INTR_STAT_TX_ABRT_src(data)                                          ((0x00000040&(data))>>6)
#define IC1_RAW_INTR_STAT_get_TX_ABRT(data)                                          ((0x00000040&(data))>>6)
#define IC1_RAW_INTR_STAT_RD_REQ_shift                                               (5)
#define IC1_RAW_INTR_STAT_RD_REQ_mask                                                (0x00000020)
#define IC1_RAW_INTR_STAT_RD_REQ(data)                                               (0x00000020&((data)<<5))
#define IC1_RAW_INTR_STAT_RD_REQ_src(data)                                           ((0x00000020&(data))>>5)
#define IC1_RAW_INTR_STAT_get_RD_REQ(data)                                           ((0x00000020&(data))>>5)
#define IC1_RAW_INTR_STAT_TX_EMPTY_shift                                             (4)
#define IC1_RAW_INTR_STAT_TX_EMPTY_mask                                              (0x00000010)
#define IC1_RAW_INTR_STAT_TX_EMPTY(data)                                             (0x00000010&((data)<<4))
#define IC1_RAW_INTR_STAT_TX_EMPTY_src(data)                                         ((0x00000010&(data))>>4)
#define IC1_RAW_INTR_STAT_get_TX_EMPTY(data)                                         ((0x00000010&(data))>>4)
#define IC1_RAW_INTR_STAT_TX_OVER_shift                                              (3)
#define IC1_RAW_INTR_STAT_TX_OVER_mask                                               (0x00000008)
#define IC1_RAW_INTR_STAT_TX_OVER(data)                                              (0x00000008&((data)<<3))
#define IC1_RAW_INTR_STAT_TX_OVER_src(data)                                          ((0x00000008&(data))>>3)
#define IC1_RAW_INTR_STAT_get_TX_OVER(data)                                          ((0x00000008&(data))>>3)
#define IC1_RAW_INTR_STAT_RX_FULL_shift                                              (2)
#define IC1_RAW_INTR_STAT_RX_FULL_mask                                               (0x00000004)
#define IC1_RAW_INTR_STAT_RX_FULL(data)                                              (0x00000004&((data)<<2))
#define IC1_RAW_INTR_STAT_RX_FULL_src(data)                                          ((0x00000004&(data))>>2)
#define IC1_RAW_INTR_STAT_get_RX_FULL(data)                                          ((0x00000004&(data))>>2)
#define IC1_RAW_INTR_STAT_RX_OVER_shift                                              (1)
#define IC1_RAW_INTR_STAT_RX_OVER_mask                                               (0x00000002)
#define IC1_RAW_INTR_STAT_RX_OVER(data)                                              (0x00000002&((data)<<1))
#define IC1_RAW_INTR_STAT_RX_OVER_src(data)                                          ((0x00000002&(data))>>1)
#define IC1_RAW_INTR_STAT_get_RX_OVER(data)                                          ((0x00000002&(data))>>1)
#define IC1_RAW_INTR_STAT_RX_UNDER_shift                                             (0)
#define IC1_RAW_INTR_STAT_RX_UNDER_mask                                              (0x00000001)
#define IC1_RAW_INTR_STAT_RX_UNDER(data)                                             (0x00000001&((data)<<0))
#define IC1_RAW_INTR_STAT_RX_UNDER_src(data)                                         ((0x00000001&(data))>>0)
#define IC1_RAW_INTR_STAT_get_RX_UNDER(data)                                         ((0x00000001&(data))>>0)


#define IC1_RX_TL                                                                    0x1801B438
#define IC1_RX_TL_reg_addr                                                           "0xB801B438"
#define IC1_RX_TL_reg                                                                0xB801B438
#define set_IC1_RX_TL_reg(data)   (*((volatile unsigned int*) IC1_RX_TL_reg)=data)
#define get_IC1_RX_TL_reg   (*((volatile unsigned int*) IC1_RX_TL_reg))
#define IC1_RX_TL_inst_adr                                                           "0x000E"
#define IC1_RX_TL_inst                                                               0x000E
#define IC1_RX_TL_RX_TL_shift                                                        (0)
#define IC1_RX_TL_RX_TL_mask                                                         (0x000000FF)
#define IC1_RX_TL_RX_TL(data)                                                        (0x000000FF&((data)<<0))
#define IC1_RX_TL_RX_TL_src(data)                                                    ((0x000000FF&(data))>>0)
#define IC1_RX_TL_get_RX_TL(data)                                                    ((0x000000FF&(data))>>0)


#define IC1_TX_TL                                                                    0x1801B43C
#define IC1_TX_TL_reg_addr                                                           "0xB801B43C"
#define IC1_TX_TL_reg                                                                0xB801B43C
#define set_IC1_TX_TL_reg(data)   (*((volatile unsigned int*) IC1_TX_TL_reg)=data)
#define get_IC1_TX_TL_reg   (*((volatile unsigned int*) IC1_TX_TL_reg))
#define IC1_TX_TL_inst_adr                                                           "0x000F"
#define IC1_TX_TL_inst                                                               0x000F
#define IC1_TX_TL_TX_TL_shift                                                        (0)
#define IC1_TX_TL_TX_TL_mask                                                         (0x000000FF)
#define IC1_TX_TL_TX_TL(data)                                                        (0x000000FF&((data)<<0))
#define IC1_TX_TL_TX_TL_src(data)                                                    ((0x000000FF&(data))>>0)
#define IC1_TX_TL_get_TX_TL(data)                                                    ((0x000000FF&(data))>>0)


#define IC1_CLR_INTR                                                                 0x1801B440
#define IC1_CLR_INTR_reg_addr                                                        "0xB801B440"
#define IC1_CLR_INTR_reg                                                             0xB801B440
#define set_IC1_CLR_INTR_reg(data)   (*((volatile unsigned int*) IC1_CLR_INTR_reg)=data)
#define get_IC1_CLR_INTR_reg   (*((volatile unsigned int*) IC1_CLR_INTR_reg))
#define IC1_CLR_INTR_inst_adr                                                        "0x0010"
#define IC1_CLR_INTR_inst                                                            0x0010
#define IC1_CLR_INTR_CLR_INTR_shift                                                  (0)
#define IC1_CLR_INTR_CLR_INTR_mask                                                   (0x00000001)
#define IC1_CLR_INTR_CLR_INTR(data)                                                  (0x00000001&((data)<<0))
#define IC1_CLR_INTR_CLR_INTR_src(data)                                              ((0x00000001&(data))>>0)
#define IC1_CLR_INTR_get_CLR_INTR(data)                                              ((0x00000001&(data))>>0)


#define IC1_CLR_RX_UNDER                                                             0x1801B444
#define IC1_CLR_RX_UNDER_reg_addr                                                    "0xB801B444"
#define IC1_CLR_RX_UNDER_reg                                                         0xB801B444
#define set_IC1_CLR_RX_UNDER_reg(data)   (*((volatile unsigned int*) IC1_CLR_RX_UNDER_reg)=data)
#define get_IC1_CLR_RX_UNDER_reg   (*((volatile unsigned int*) IC1_CLR_RX_UNDER_reg))
#define IC1_CLR_RX_UNDER_inst_adr                                                    "0x0011"
#define IC1_CLR_RX_UNDER_inst                                                        0x0011
#define IC1_CLR_RX_UNDER_CLR_RX_UNDER_shift                                          (0)
#define IC1_CLR_RX_UNDER_CLR_RX_UNDER_mask                                           (0x00000001)
#define IC1_CLR_RX_UNDER_CLR_RX_UNDER(data)                                          (0x00000001&((data)<<0))
#define IC1_CLR_RX_UNDER_CLR_RX_UNDER_src(data)                                      ((0x00000001&(data))>>0)
#define IC1_CLR_RX_UNDER_get_CLR_RX_UNDER(data)                                      ((0x00000001&(data))>>0)


#define IC1_CLR_RX_OVER                                                              0x1801B448
#define IC1_CLR_RX_OVER_reg_addr                                                     "0xB801B448"
#define IC1_CLR_RX_OVER_reg                                                          0xB801B448
#define set_IC1_CLR_RX_OVER_reg(data)   (*((volatile unsigned int*) IC1_CLR_RX_OVER_reg)=data)
#define get_IC1_CLR_RX_OVER_reg   (*((volatile unsigned int*) IC1_CLR_RX_OVER_reg))
#define IC1_CLR_RX_OVER_inst_adr                                                     "0x0012"
#define IC1_CLR_RX_OVER_inst                                                         0x0012
#define IC1_CLR_RX_OVER_CLR_RX_OVER_shift                                            (0)
#define IC1_CLR_RX_OVER_CLR_RX_OVER_mask                                             (0x00000001)
#define IC1_CLR_RX_OVER_CLR_RX_OVER(data)                                            (0x00000001&((data)<<0))
#define IC1_CLR_RX_OVER_CLR_RX_OVER_src(data)                                        ((0x00000001&(data))>>0)
#define IC1_CLR_RX_OVER_get_CLR_RX_OVER(data)                                        ((0x00000001&(data))>>0)


#define IC1_CLR_TX_OVER                                                              0x1801B44C
#define IC1_CLR_TX_OVER_reg_addr                                                     "0xB801B44C"
#define IC1_CLR_TX_OVER_reg                                                          0xB801B44C
#define set_IC1_CLR_TX_OVER_reg(data)   (*((volatile unsigned int*) IC1_CLR_TX_OVER_reg)=data)
#define get_IC1_CLR_TX_OVER_reg   (*((volatile unsigned int*) IC1_CLR_TX_OVER_reg))
#define IC1_CLR_TX_OVER_inst_adr                                                     "0x0013"
#define IC1_CLR_TX_OVER_inst                                                         0x0013
#define IC1_CLR_TX_OVER_CLR_TX_OVER_shift                                            (0)
#define IC1_CLR_TX_OVER_CLR_TX_OVER_mask                                             (0x00000001)
#define IC1_CLR_TX_OVER_CLR_TX_OVER(data)                                            (0x00000001&((data)<<0))
#define IC1_CLR_TX_OVER_CLR_TX_OVER_src(data)                                        ((0x00000001&(data))>>0)
#define IC1_CLR_TX_OVER_get_CLR_TX_OVER(data)                                        ((0x00000001&(data))>>0)


#define IC1_CLR_RD_REQ                                                               0x1801B450
#define IC1_CLR_RD_REQ_reg_addr                                                      "0xB801B450"
#define IC1_CLR_RD_REQ_reg                                                           0xB801B450
#define set_IC1_CLR_RD_REQ_reg(data)   (*((volatile unsigned int*) IC1_CLR_RD_REQ_reg)=data)
#define get_IC1_CLR_RD_REQ_reg   (*((volatile unsigned int*) IC1_CLR_RD_REQ_reg))
#define IC1_CLR_RD_REQ_inst_adr                                                      "0x0014"
#define IC1_CLR_RD_REQ_inst                                                          0x0014
#define IC1_CLR_RD_REQ_CLR_RD_REQ_shift                                              (0)
#define IC1_CLR_RD_REQ_CLR_RD_REQ_mask                                               (0x00000001)
#define IC1_CLR_RD_REQ_CLR_RD_REQ(data)                                              (0x00000001&((data)<<0))
#define IC1_CLR_RD_REQ_CLR_RD_REQ_src(data)                                          ((0x00000001&(data))>>0)
#define IC1_CLR_RD_REQ_get_CLR_RD_REQ(data)                                          ((0x00000001&(data))>>0)


#define IC1_CLR_TX_ABRT                                                              0x1801B454
#define IC1_CLR_TX_ABRT_reg_addr                                                     "0xB801B454"
#define IC1_CLR_TX_ABRT_reg                                                          0xB801B454
#define set_IC1_CLR_TX_ABRT_reg(data)   (*((volatile unsigned int*) IC1_CLR_TX_ABRT_reg)=data)
#define get_IC1_CLR_TX_ABRT_reg   (*((volatile unsigned int*) IC1_CLR_TX_ABRT_reg))
#define IC1_CLR_TX_ABRT_inst_adr                                                     "0x0015"
#define IC1_CLR_TX_ABRT_inst                                                         0x0015
#define IC1_CLR_TX_ABRT_CLR_TX_ABRT_shift                                            (0)
#define IC1_CLR_TX_ABRT_CLR_TX_ABRT_mask                                             (0x00000001)
#define IC1_CLR_TX_ABRT_CLR_TX_ABRT(data)                                            (0x00000001&((data)<<0))
#define IC1_CLR_TX_ABRT_CLR_TX_ABRT_src(data)                                        ((0x00000001&(data))>>0)
#define IC1_CLR_TX_ABRT_get_CLR_TX_ABRT(data)                                        ((0x00000001&(data))>>0)


#define IC1_CLR_RX_DONE                                                              0x1801B458
#define IC1_CLR_RX_DONE_reg_addr                                                     "0xB801B458"
#define IC1_CLR_RX_DONE_reg                                                          0xB801B458
#define set_IC1_CLR_RX_DONE_reg(data)   (*((volatile unsigned int*) IC1_CLR_RX_DONE_reg)=data)
#define get_IC1_CLR_RX_DONE_reg   (*((volatile unsigned int*) IC1_CLR_RX_DONE_reg))
#define IC1_CLR_RX_DONE_inst_adr                                                     "0x0016"
#define IC1_CLR_RX_DONE_inst                                                         0x0016
#define IC1_CLR_RX_DONE_CLR_RX_DONE_shift                                            (0)
#define IC1_CLR_RX_DONE_CLR_RX_DONE_mask                                             (0x00000001)
#define IC1_CLR_RX_DONE_CLR_RX_DONE(data)                                            (0x00000001&((data)<<0))
#define IC1_CLR_RX_DONE_CLR_RX_DONE_src(data)                                        ((0x00000001&(data))>>0)
#define IC1_CLR_RX_DONE_get_CLR_RX_DONE(data)                                        ((0x00000001&(data))>>0)


#define IC1_CLR_ACTIVITY                                                             0x1801B45C
#define IC1_CLR_ACTIVITY_reg_addr                                                    "0xB801B45C"
#define IC1_CLR_ACTIVITY_reg                                                         0xB801B45C
#define set_IC1_CLR_ACTIVITY_reg(data)   (*((volatile unsigned int*) IC1_CLR_ACTIVITY_reg)=data)
#define get_IC1_CLR_ACTIVITY_reg   (*((volatile unsigned int*) IC1_CLR_ACTIVITY_reg))
#define IC1_CLR_ACTIVITY_inst_adr                                                    "0x0017"
#define IC1_CLR_ACTIVITY_inst                                                        0x0017
#define IC1_CLR_ACTIVITY_CLR_ACTIVITY_shift                                          (0)
#define IC1_CLR_ACTIVITY_CLR_ACTIVITY_mask                                           (0x00000001)
#define IC1_CLR_ACTIVITY_CLR_ACTIVITY(data)                                          (0x00000001&((data)<<0))
#define IC1_CLR_ACTIVITY_CLR_ACTIVITY_src(data)                                      ((0x00000001&(data))>>0)
#define IC1_CLR_ACTIVITY_get_CLR_ACTIVITY(data)                                      ((0x00000001&(data))>>0)


#define IC1_CLR_STOP_DET                                                             0x1801B460
#define IC1_CLR_STOP_DET_reg_addr                                                    "0xB801B460"
#define IC1_CLR_STOP_DET_reg                                                         0xB801B460
#define set_IC1_CLR_STOP_DET_reg(data)   (*((volatile unsigned int*) IC1_CLR_STOP_DET_reg)=data)
#define get_IC1_CLR_STOP_DET_reg   (*((volatile unsigned int*) IC1_CLR_STOP_DET_reg))
#define IC1_CLR_STOP_DET_inst_adr                                                    "0x0018"
#define IC1_CLR_STOP_DET_inst                                                        0x0018
#define IC1_CLR_STOP_DET_CLR_STOP_DET_shift                                          (0)
#define IC1_CLR_STOP_DET_CLR_STOP_DET_mask                                           (0x00000001)
#define IC1_CLR_STOP_DET_CLR_STOP_DET(data)                                          (0x00000001&((data)<<0))
#define IC1_CLR_STOP_DET_CLR_STOP_DET_src(data)                                      ((0x00000001&(data))>>0)
#define IC1_CLR_STOP_DET_get_CLR_STOP_DET(data)                                      ((0x00000001&(data))>>0)


#define IC1_CLR_START_DET                                                            0x1801B464
#define IC1_CLR_START_DET_reg_addr                                                   "0xB801B464"
#define IC1_CLR_START_DET_reg                                                        0xB801B464
#define set_IC1_CLR_START_DET_reg(data)   (*((volatile unsigned int*) IC1_CLR_START_DET_reg)=data)
#define get_IC1_CLR_START_DET_reg   (*((volatile unsigned int*) IC1_CLR_START_DET_reg))
#define IC1_CLR_START_DET_inst_adr                                                   "0x0019"
#define IC1_CLR_START_DET_inst                                                       0x0019
#define IC1_CLR_START_DET_CLR_START_DET_shift                                        (0)
#define IC1_CLR_START_DET_CLR_START_DET_mask                                         (0x00000001)
#define IC1_CLR_START_DET_CLR_START_DET(data)                                        (0x00000001&((data)<<0))
#define IC1_CLR_START_DET_CLR_START_DET_src(data)                                    ((0x00000001&(data))>>0)
#define IC1_CLR_START_DET_get_CLR_START_DET(data)                                    ((0x00000001&(data))>>0)


#define IC1_CLR_GEN_CALL                                                             0x1801B468
#define IC1_CLR_GEN_CALL_reg_addr                                                    "0xB801B468"
#define IC1_CLR_GEN_CALL_reg                                                         0xB801B468
#define set_IC1_CLR_GEN_CALL_reg(data)   (*((volatile unsigned int*) IC1_CLR_GEN_CALL_reg)=data)
#define get_IC1_CLR_GEN_CALL_reg   (*((volatile unsigned int*) IC1_CLR_GEN_CALL_reg))
#define IC1_CLR_GEN_CALL_inst_adr                                                    "0x001A"
#define IC1_CLR_GEN_CALL_inst                                                        0x001A
#define IC1_CLR_GEN_CALL_CLR_GEN_CALL_shift                                          (0)
#define IC1_CLR_GEN_CALL_CLR_GEN_CALL_mask                                           (0x00000001)
#define IC1_CLR_GEN_CALL_CLR_GEN_CALL(data)                                          (0x00000001&((data)<<0))
#define IC1_CLR_GEN_CALL_CLR_GEN_CALL_src(data)                                      ((0x00000001&(data))>>0)
#define IC1_CLR_GEN_CALL_get_CLR_GEN_CALL(data)                                      ((0x00000001&(data))>>0)


#define IC1_ENABLE                                                                   0x1801B46C
#define IC1_ENABLE_reg_addr                                                          "0xB801B46C"
#define IC1_ENABLE_reg                                                               0xB801B46C
#define set_IC1_ENABLE_reg(data)   (*((volatile unsigned int*) IC1_ENABLE_reg)=data)
#define get_IC1_ENABLE_reg   (*((volatile unsigned int*) IC1_ENABLE_reg))
#define IC1_ENABLE_inst_adr                                                          "0x001B"
#define IC1_ENABLE_inst                                                              0x001B
#define IC1_ENABLE_ENABLE_shift                                                      (0)
#define IC1_ENABLE_ENABLE_mask                                                       (0x00000001)
#define IC1_ENABLE_ENABLE(data)                                                      (0x00000001&((data)<<0))
#define IC1_ENABLE_ENABLE_src(data)                                                  ((0x00000001&(data))>>0)
#define IC1_ENABLE_get_ENABLE(data)                                                  ((0x00000001&(data))>>0)


#define IC1_STATUS                                                                   0x1801B470
#define IC1_STATUS_reg_addr                                                          "0xB801B470"
#define IC1_STATUS_reg                                                               0xB801B470
#define set_IC1_STATUS_reg(data)   (*((volatile unsigned int*) IC1_STATUS_reg)=data)
#define get_IC1_STATUS_reg   (*((volatile unsigned int*) IC1_STATUS_reg))
#define IC1_STATUS_inst_adr                                                          "0x001C"
#define IC1_STATUS_inst                                                              0x001C
#define IC1_STATUS_SLV_ACTIVITY_shift                                                (6)
#define IC1_STATUS_SLV_ACTIVITY_mask                                                 (0x00000040)
#define IC1_STATUS_SLV_ACTIVITY(data)                                                (0x00000040&((data)<<6))
#define IC1_STATUS_SLV_ACTIVITY_src(data)                                            ((0x00000040&(data))>>6)
#define IC1_STATUS_get_SLV_ACTIVITY(data)                                            ((0x00000040&(data))>>6)
#define IC1_STATUS_MST_ACTIVITY_shift                                                (5)
#define IC1_STATUS_MST_ACTIVITY_mask                                                 (0x00000020)
#define IC1_STATUS_MST_ACTIVITY(data)                                                (0x00000020&((data)<<5))
#define IC1_STATUS_MST_ACTIVITY_src(data)                                            ((0x00000020&(data))>>5)
#define IC1_STATUS_get_MST_ACTIVITY(data)                                            ((0x00000020&(data))>>5)
#define IC1_STATUS_RFF_shift                                                         (4)
#define IC1_STATUS_RFF_mask                                                          (0x00000010)
#define IC1_STATUS_RFF(data)                                                         (0x00000010&((data)<<4))
#define IC1_STATUS_RFF_src(data)                                                     ((0x00000010&(data))>>4)
#define IC1_STATUS_get_RFF(data)                                                     ((0x00000010&(data))>>4)
#define IC1_STATUS_RFNE_shift                                                        (3)
#define IC1_STATUS_RFNE_mask                                                         (0x00000008)
#define IC1_STATUS_RFNE(data)                                                        (0x00000008&((data)<<3))
#define IC1_STATUS_RFNE_src(data)                                                    ((0x00000008&(data))>>3)
#define IC1_STATUS_get_RFNE(data)                                                    ((0x00000008&(data))>>3)
#define IC1_STATUS_TFE_shift                                                         (2)
#define IC1_STATUS_TFE_mask                                                          (0x00000004)
#define IC1_STATUS_TFE(data)                                                         (0x00000004&((data)<<2))
#define IC1_STATUS_TFE_src(data)                                                     ((0x00000004&(data))>>2)
#define IC1_STATUS_get_TFE(data)                                                     ((0x00000004&(data))>>2)
#define IC1_STATUS_TFNF_shift                                                        (1)
#define IC1_STATUS_TFNF_mask                                                         (0x00000002)
#define IC1_STATUS_TFNF(data)                                                        (0x00000002&((data)<<1))
#define IC1_STATUS_TFNF_src(data)                                                    ((0x00000002&(data))>>1)
#define IC1_STATUS_get_TFNF(data)                                                    ((0x00000002&(data))>>1)
#define IC1_STATUS_ACTIVITY_shift                                                    (0)
#define IC1_STATUS_ACTIVITY_mask                                                     (0x00000001)
#define IC1_STATUS_ACTIVITY(data)                                                    (0x00000001&((data)<<0))
#define IC1_STATUS_ACTIVITY_src(data)                                                ((0x00000001&(data))>>0)
#define IC1_STATUS_get_ACTIVITY(data)                                                ((0x00000001&(data))>>0)


#define IC1_TXFLR                                                                    0x1801B474
#define IC1_TXFLR_reg_addr                                                           "0xB801B474"
#define IC1_TXFLR_reg                                                                0xB801B474
#define set_IC1_TXFLR_reg(data)   (*((volatile unsigned int*) IC1_TXFLR_reg)=data)
#define get_IC1_TXFLR_reg   (*((volatile unsigned int*) IC1_TXFLR_reg))
#define IC1_TXFLR_inst_adr                                                           "0x001D"
#define IC1_TXFLR_inst                                                               0x001D
#define IC1_TXFLR_TXFLR_shift                                                        (0)
#define IC1_TXFLR_TXFLR_mask                                                         (0x0000000F)
#define IC1_TXFLR_TXFLR(data)                                                        (0x0000000F&((data)<<0))
#define IC1_TXFLR_TXFLR_src(data)                                                    ((0x0000000F&(data))>>0)
#define IC1_TXFLR_get_TXFLR(data)                                                    ((0x0000000F&(data))>>0)


#define IC1_RXFLR                                                                    0x1801B478
#define IC1_RXFLR_reg_addr                                                           "0xB801B478"
#define IC1_RXFLR_reg                                                                0xB801B478
#define set_IC1_RXFLR_reg(data)   (*((volatile unsigned int*) IC1_RXFLR_reg)=data)
#define get_IC1_RXFLR_reg   (*((volatile unsigned int*) IC1_RXFLR_reg))
#define IC1_RXFLR_inst_adr                                                           "0x001E"
#define IC1_RXFLR_inst                                                               0x001E
#define IC1_RXFLR_RXFLR_shift                                                        (0)
#define IC1_RXFLR_RXFLR_mask                                                         (0x0000000F)
#define IC1_RXFLR_RXFLR(data)                                                        (0x0000000F&((data)<<0))
#define IC1_RXFLR_RXFLR_src(data)                                                    ((0x0000000F&(data))>>0)
#define IC1_RXFLR_get_RXFLR(data)                                                    ((0x0000000F&(data))>>0)


#define IC1_TX_ABRT_SOURCE                                                           0x1801B480
#define IC1_TX_ABRT_SOURCE_reg_addr                                                  "0xB801B480"
#define IC1_TX_ABRT_SOURCE_reg                                                       0xB801B480
#define set_IC1_TX_ABRT_SOURCE_reg(data)   (*((volatile unsigned int*) IC1_TX_ABRT_SOURCE_reg)=data)
#define get_IC1_TX_ABRT_SOURCE_reg   (*((volatile unsigned int*) IC1_TX_ABRT_SOURCE_reg))
#define IC1_TX_ABRT_SOURCE_inst_adr                                                  "0x0020"
#define IC1_TX_ABRT_SOURCE_inst                                                      0x0020
#define IC1_TX_ABRT_SOURCE_ABRT_SLVRD_INTX_shift                                     (15)
#define IC1_TX_ABRT_SOURCE_ABRT_SLVRD_INTX_mask                                      (0x00008000)
#define IC1_TX_ABRT_SOURCE_ABRT_SLVRD_INTX(data)                                     (0x00008000&((data)<<15))
#define IC1_TX_ABRT_SOURCE_ABRT_SLVRD_INTX_src(data)                                 ((0x00008000&(data))>>15)
#define IC1_TX_ABRT_SOURCE_get_ABRT_SLVRD_INTX(data)                                 ((0x00008000&(data))>>15)
#define IC1_TX_ABRT_SOURCE_ABRT_SLV_ARBLOST_shift                                    (14)
#define IC1_TX_ABRT_SOURCE_ABRT_SLV_ARBLOST_mask                                     (0x00004000)
#define IC1_TX_ABRT_SOURCE_ABRT_SLV_ARBLOST(data)                                    (0x00004000&((data)<<14))
#define IC1_TX_ABRT_SOURCE_ABRT_SLV_ARBLOST_src(data)                                ((0x00004000&(data))>>14)
#define IC1_TX_ABRT_SOURCE_get_ABRT_SLV_ARBLOST(data)                                ((0x00004000&(data))>>14)
#define IC1_TX_ABRT_SOURCE_ABRT_SLVFLUSH_TXFIFO_shift                                (13)
#define IC1_TX_ABRT_SOURCE_ABRT_SLVFLUSH_TXFIFO_mask                                 (0x00002000)
#define IC1_TX_ABRT_SOURCE_ABRT_SLVFLUSH_TXFIFO(data)                                (0x00002000&((data)<<13))
#define IC1_TX_ABRT_SOURCE_ABRT_SLVFLUSH_TXFIFO_src(data)                            ((0x00002000&(data))>>13)
#define IC1_TX_ABRT_SOURCE_get_ABRT_SLVFLUSH_TXFIFO(data)                            ((0x00002000&(data))>>13)
#define IC1_TX_ABRT_SOURCE_ARB_LOST_shift                                            (12)
#define IC1_TX_ABRT_SOURCE_ARB_LOST_mask                                             (0x00001000)
#define IC1_TX_ABRT_SOURCE_ARB_LOST(data)                                            (0x00001000&((data)<<12))
#define IC1_TX_ABRT_SOURCE_ARB_LOST_src(data)                                        ((0x00001000&(data))>>12)
#define IC1_TX_ABRT_SOURCE_get_ARB_LOST(data)                                        ((0x00001000&(data))>>12)
#define IC1_TX_ABRT_SOURCE_ARB_MASTER_DIS_shift                                      (11)
#define IC1_TX_ABRT_SOURCE_ARB_MASTER_DIS_mask                                       (0x00000800)
#define IC1_TX_ABRT_SOURCE_ARB_MASTER_DIS(data)                                      (0x00000800&((data)<<11))
#define IC1_TX_ABRT_SOURCE_ARB_MASTER_DIS_src(data)                                  ((0x00000800&(data))>>11)
#define IC1_TX_ABRT_SOURCE_get_ARB_MASTER_DIS(data)                                  ((0x00000800&(data))>>11)
#define IC1_TX_ABRT_SOURCE_ABRT_10B_RD_NORSTRT_shift                                 (10)
#define IC1_TX_ABRT_SOURCE_ABRT_10B_RD_NORSTRT_mask                                  (0x00000400)
#define IC1_TX_ABRT_SOURCE_ABRT_10B_RD_NORSTRT(data)                                 (0x00000400&((data)<<10))
#define IC1_TX_ABRT_SOURCE_ABRT_10B_RD_NORSTRT_src(data)                             ((0x00000400&(data))>>10)
#define IC1_TX_ABRT_SOURCE_get_ABRT_10B_RD_NORSTRT(data)                             ((0x00000400&(data))>>10)
#define IC1_TX_ABRT_SOURCE_ABRT_SBYTE_NORSTRT_shift                                  (9)
#define IC1_TX_ABRT_SOURCE_ABRT_SBYTE_NORSTRT_mask                                   (0x00000200)
#define IC1_TX_ABRT_SOURCE_ABRT_SBYTE_NORSTRT(data)                                  (0x00000200&((data)<<9))
#define IC1_TX_ABRT_SOURCE_ABRT_SBYTE_NORSTRT_src(data)                              ((0x00000200&(data))>>9)
#define IC1_TX_ABRT_SOURCE_get_ABRT_SBYTE_NORSTRT(data)                              ((0x00000200&(data))>>9)
#define IC1_TX_ABRT_SOURCE_ABRT_HS_NORSTRT_shift                                     (8)
#define IC1_TX_ABRT_SOURCE_ABRT_HS_NORSTRT_mask                                      (0x00000100)
#define IC1_TX_ABRT_SOURCE_ABRT_HS_NORSTRT(data)                                     (0x00000100&((data)<<8))
#define IC1_TX_ABRT_SOURCE_ABRT_HS_NORSTRT_src(data)                                 ((0x00000100&(data))>>8)
#define IC1_TX_ABRT_SOURCE_get_ABRT_HS_NORSTRT(data)                                 ((0x00000100&(data))>>8)
#define IC1_TX_ABRT_SOURCE_ABRT_SBYTE_ACKDET_shift                                   (7)
#define IC1_TX_ABRT_SOURCE_ABRT_SBYTE_ACKDET_mask                                    (0x00000080)
#define IC1_TX_ABRT_SOURCE_ABRT_SBYTE_ACKDET(data)                                   (0x00000080&((data)<<7))
#define IC1_TX_ABRT_SOURCE_ABRT_SBYTE_ACKDET_src(data)                               ((0x00000080&(data))>>7)
#define IC1_TX_ABRT_SOURCE_get_ABRT_SBYTE_ACKDET(data)                               ((0x00000080&(data))>>7)
#define IC1_TX_ABRT_SOURCE_ABRT_HS_ACKDET_shift                                      (6)
#define IC1_TX_ABRT_SOURCE_ABRT_HS_ACKDET_mask                                       (0x00000040)
#define IC1_TX_ABRT_SOURCE_ABRT_HS_ACKDET(data)                                      (0x00000040&((data)<<6))
#define IC1_TX_ABRT_SOURCE_ABRT_HS_ACKDET_src(data)                                  ((0x00000040&(data))>>6)
#define IC1_TX_ABRT_SOURCE_get_ABRT_HS_ACKDET(data)                                  ((0x00000040&(data))>>6)
#define IC1_TX_ABRT_SOURCE_ABRT_GCALL_READ_shift                                     (5)
#define IC1_TX_ABRT_SOURCE_ABRT_GCALL_READ_mask                                      (0x00000020)
#define IC1_TX_ABRT_SOURCE_ABRT_GCALL_READ(data)                                     (0x00000020&((data)<<5))
#define IC1_TX_ABRT_SOURCE_ABRT_GCALL_READ_src(data)                                 ((0x00000020&(data))>>5)
#define IC1_TX_ABRT_SOURCE_get_ABRT_GCALL_READ(data)                                 ((0x00000020&(data))>>5)
#define IC1_TX_ABRT_SOURCE_ABRT_GCALL_NOACK_shift                                    (4)
#define IC1_TX_ABRT_SOURCE_ABRT_GCALL_NOACK_mask                                     (0x00000010)
#define IC1_TX_ABRT_SOURCE_ABRT_GCALL_NOACK(data)                                    (0x00000010&((data)<<4))
#define IC1_TX_ABRT_SOURCE_ABRT_GCALL_NOACK_src(data)                                ((0x00000010&(data))>>4)
#define IC1_TX_ABRT_SOURCE_get_ABRT_GCALL_NOACK(data)                                ((0x00000010&(data))>>4)
#define IC1_TX_ABRT_SOURCE_ABRT_TXDATA_NOACK_shift                                   (3)
#define IC1_TX_ABRT_SOURCE_ABRT_TXDATA_NOACK_mask                                    (0x00000008)
#define IC1_TX_ABRT_SOURCE_ABRT_TXDATA_NOACK(data)                                   (0x00000008&((data)<<3))
#define IC1_TX_ABRT_SOURCE_ABRT_TXDATA_NOACK_src(data)                               ((0x00000008&(data))>>3)
#define IC1_TX_ABRT_SOURCE_get_ABRT_TXDATA_NOACK(data)                               ((0x00000008&(data))>>3)
#define IC1_TX_ABRT_SOURCE_ABRT_10ADDR2_NOACK_shift                                  (2)
#define IC1_TX_ABRT_SOURCE_ABRT_10ADDR2_NOACK_mask                                   (0x00000004)
#define IC1_TX_ABRT_SOURCE_ABRT_10ADDR2_NOACK(data)                                  (0x00000004&((data)<<2))
#define IC1_TX_ABRT_SOURCE_ABRT_10ADDR2_NOACK_src(data)                              ((0x00000004&(data))>>2)
#define IC1_TX_ABRT_SOURCE_get_ABRT_10ADDR2_NOACK(data)                              ((0x00000004&(data))>>2)
#define IC1_TX_ABRT_SOURCE_ABRT_10ADDR1_NOACK_shift                                  (1)
#define IC1_TX_ABRT_SOURCE_ABRT_10ADDR1_NOACK_mask                                   (0x00000002)
#define IC1_TX_ABRT_SOURCE_ABRT_10ADDR1_NOACK(data)                                  (0x00000002&((data)<<1))
#define IC1_TX_ABRT_SOURCE_ABRT_10ADDR1_NOACK_src(data)                              ((0x00000002&(data))>>1)
#define IC1_TX_ABRT_SOURCE_get_ABRT_10ADDR1_NOACK(data)                              ((0x00000002&(data))>>1)
#define IC1_TX_ABRT_SOURCE_ABRT_7B_ADDR_NOACK_shift                                  (0)
#define IC1_TX_ABRT_SOURCE_ABRT_7B_ADDR_NOACK_mask                                   (0x00000001)
#define IC1_TX_ABRT_SOURCE_ABRT_7B_ADDR_NOACK(data)                                  (0x00000001&((data)<<0))
#define IC1_TX_ABRT_SOURCE_ABRT_7B_ADDR_NOACK_src(data)                              ((0x00000001&(data))>>0)
#define IC1_TX_ABRT_SOURCE_get_ABRT_7B_ADDR_NOACK(data)                              ((0x00000001&(data))>>0)


#define IC1_SLV_DATA_NACK_ONLY                                                       0x1801B484
#define IC1_SLV_DATA_NACK_ONLY_reg_addr                                              "0xB801B484"
#define IC1_SLV_DATA_NACK_ONLY_reg                                                   0xB801B484
#define set_IC1_SLV_DATA_NACK_ONLY_reg(data)   (*((volatile unsigned int*) IC1_SLV_DATA_NACK_ONLY_reg)=data)
#define get_IC1_SLV_DATA_NACK_ONLY_reg   (*((volatile unsigned int*) IC1_SLV_DATA_NACK_ONLY_reg))
#define IC1_SLV_DATA_NACK_ONLY_inst_adr                                              "0x0021"
#define IC1_SLV_DATA_NACK_ONLY_inst                                                  0x0021
#define IC1_SLV_DATA_NACK_ONLY_NACK_shift                                            (0)
#define IC1_SLV_DATA_NACK_ONLY_NACK_mask                                             (0x00000001)
#define IC1_SLV_DATA_NACK_ONLY_NACK(data)                                            (0x00000001&((data)<<0))
#define IC1_SLV_DATA_NACK_ONLY_NACK_src(data)                                        ((0x00000001&(data))>>0)
#define IC1_SLV_DATA_NACK_ONLY_get_NACK(data)                                        ((0x00000001&(data))>>0)


#define IC1_DMA_CR                                                                   0x1801B488
#define IC1_DMA_CR_reg_addr                                                          "0xB801B488"
#define IC1_DMA_CR_reg                                                               0xB801B488
#define set_IC1_DMA_CR_reg(data)   (*((volatile unsigned int*) IC1_DMA_CR_reg)=data)
#define get_IC1_DMA_CR_reg   (*((volatile unsigned int*) IC1_DMA_CR_reg))
#define IC1_DMA_CR_inst_adr                                                          "0x0022"
#define IC1_DMA_CR_inst                                                              0x0022
#define IC1_DMA_CR_TDMAE_shift                                                       (1)
#define IC1_DMA_CR_TDMAE_mask                                                        (0x00000002)
#define IC1_DMA_CR_TDMAE(data)                                                       (0x00000002&((data)<<1))
#define IC1_DMA_CR_TDMAE_src(data)                                                   ((0x00000002&(data))>>1)
#define IC1_DMA_CR_get_TDMAE(data)                                                   ((0x00000002&(data))>>1)
#define IC1_DMA_CR_RDMAE_shift                                                       (0)
#define IC1_DMA_CR_RDMAE_mask                                                        (0x00000001)
#define IC1_DMA_CR_RDMAE(data)                                                       (0x00000001&((data)<<0))
#define IC1_DMA_CR_RDMAE_src(data)                                                   ((0x00000001&(data))>>0)
#define IC1_DMA_CR_get_RDMAE(data)                                                   ((0x00000001&(data))>>0)


#define IC1_DMA_TDLR                                                                 0x1801B48C
#define IC1_DMA_TDLR_reg_addr                                                        "0xB801B48C"
#define IC1_DMA_TDLR_reg                                                             0xB801B48C
#define set_IC1_DMA_TDLR_reg(data)   (*((volatile unsigned int*) IC1_DMA_TDLR_reg)=data)
#define get_IC1_DMA_TDLR_reg   (*((volatile unsigned int*) IC1_DMA_TDLR_reg))
#define IC1_DMA_TDLR_inst_adr                                                        "0x0023"
#define IC1_DMA_TDLR_inst                                                            0x0023
#define IC1_DMA_TDLR_DMATDL_shift                                                    (0)
#define IC1_DMA_TDLR_DMATDL_mask                                                     (0x00000007)
#define IC1_DMA_TDLR_DMATDL(data)                                                    (0x00000007&((data)<<0))
#define IC1_DMA_TDLR_DMATDL_src(data)                                                ((0x00000007&(data))>>0)
#define IC1_DMA_TDLR_get_DMATDL(data)                                                ((0x00000007&(data))>>0)


#define IC1_DMA_RDLR                                                                 0x1801B490
#define IC1_DMA_RDLR_reg_addr                                                        "0xB801B490"
#define IC1_DMA_RDLR_reg                                                             0xB801B490
#define set_IC1_DMA_RDLR_reg(data)   (*((volatile unsigned int*) IC1_DMA_RDLR_reg)=data)
#define get_IC1_DMA_RDLR_reg   (*((volatile unsigned int*) IC1_DMA_RDLR_reg))
#define IC1_DMA_RDLR_inst_adr                                                        "0x0024"
#define IC1_DMA_RDLR_inst                                                            0x0024
#define IC1_DMA_RDLR_DMARDL_shift                                                    (0)
#define IC1_DMA_RDLR_DMARDL_mask                                                     (0x0000000F)
#define IC1_DMA_RDLR_DMARDL(data)                                                    (0x0000000F&((data)<<0))
#define IC1_DMA_RDLR_DMARDL_src(data)                                                ((0x0000000F&(data))>>0)
#define IC1_DMA_RDLR_get_DMARDL(data)                                                ((0x0000000F&(data))>>0)


#define IC1_SDA_SETUP                                                                0x1801B494
#define IC1_SDA_SETUP_reg_addr                                                       "0xB801B494"
#define IC1_SDA_SETUP_reg                                                            0xB801B494
#define set_IC1_SDA_SETUP_reg(data)   (*((volatile unsigned int*) IC1_SDA_SETUP_reg)=data)
#define get_IC1_SDA_SETUP_reg   (*((volatile unsigned int*) IC1_SDA_SETUP_reg))
#define IC1_SDA_SETUP_inst_adr                                                       "0x0025"
#define IC1_SDA_SETUP_inst                                                           0x0025
#define IC1_SDA_SETUP_SDA_SETUP_shift                                                (0)
#define IC1_SDA_SETUP_SDA_SETUP_mask                                                 (0x000000FF)
#define IC1_SDA_SETUP_SDA_SETUP(data)                                                (0x000000FF&((data)<<0))
#define IC1_SDA_SETUP_SDA_SETUP_src(data)                                            ((0x000000FF&(data))>>0)
#define IC1_SDA_SETUP_get_SDA_SETUP(data)                                            ((0x000000FF&(data))>>0)


#define IC1_ACK_GENERAL_CALL                                                         0x1801B498
#define IC1_ACK_GENERAL_CALL_reg_addr                                                "0xB801B498"
#define IC1_ACK_GENERAL_CALL_reg                                                     0xB801B498
#define set_IC1_ACK_GENERAL_CALL_reg(data)   (*((volatile unsigned int*) IC1_ACK_GENERAL_CALL_reg)=data)
#define get_IC1_ACK_GENERAL_CALL_reg   (*((volatile unsigned int*) IC1_ACK_GENERAL_CALL_reg))
#define IC1_ACK_GENERAL_CALL_inst_adr                                                "0x0026"
#define IC1_ACK_GENERAL_CALL_inst                                                    0x0026
#define IC1_ACK_GENERAL_CALL_ACK_GEN_CALL_shift                                      (0)
#define IC1_ACK_GENERAL_CALL_ACK_GEN_CALL_mask                                       (0x00000001)
#define IC1_ACK_GENERAL_CALL_ACK_GEN_CALL(data)                                      (0x00000001&((data)<<0))
#define IC1_ACK_GENERAL_CALL_ACK_GEN_CALL_src(data)                                  ((0x00000001&(data))>>0)
#define IC1_ACK_GENERAL_CALL_get_ACK_GEN_CALL(data)                                  ((0x00000001&(data))>>0)


#define IC1_ENABLE_STATUS                                                            0x1801B49C
#define IC1_ENABLE_STATUS_reg_addr                                                   "0xB801B49C"
#define IC1_ENABLE_STATUS_reg                                                        0xB801B49C
#define set_IC1_ENABLE_STATUS_reg(data)   (*((volatile unsigned int*) IC1_ENABLE_STATUS_reg)=data)
#define get_IC1_ENABLE_STATUS_reg   (*((volatile unsigned int*) IC1_ENABLE_STATUS_reg))
#define IC1_ENABLE_STATUS_inst_adr                                                   "0x0027"
#define IC1_ENABLE_STATUS_inst                                                       0x0027
#define IC1_ENABLE_STATUS_SLV_RX_DATA_LOST_shift                                     (2)
#define IC1_ENABLE_STATUS_SLV_RX_DATA_LOST_mask                                      (0x00000004)
#define IC1_ENABLE_STATUS_SLV_RX_DATA_LOST(data)                                     (0x00000004&((data)<<2))
#define IC1_ENABLE_STATUS_SLV_RX_DATA_LOST_src(data)                                 ((0x00000004&(data))>>2)
#define IC1_ENABLE_STATUS_get_SLV_RX_DATA_LOST(data)                                 ((0x00000004&(data))>>2)
#define IC1_ENABLE_STATUS_SLV_DISABLED_WHI_shift                                     (1)
#define IC1_ENABLE_STATUS_SLV_DISABLED_WHI_mask                                      (0x00000002)
#define IC1_ENABLE_STATUS_SLV_DISABLED_WHI(data)                                     (0x00000002&((data)<<1))
#define IC1_ENABLE_STATUS_SLV_DISABLED_WHI_src(data)                                 ((0x00000002&(data))>>1)
#define IC1_ENABLE_STATUS_get_SLV_DISABLED_WHI(data)                                 ((0x00000002&(data))>>1)
#define IC1_ENABLE_STATUS_IC_EN_shift                                                (0)
#define IC1_ENABLE_STATUS_IC_EN_mask                                                 (0x00000001)
#define IC1_ENABLE_STATUS_IC_EN(data)                                                (0x00000001&((data)<<0))
#define IC1_ENABLE_STATUS_IC_EN_src(data)                                            ((0x00000001&(data))>>0)
#define IC1_ENABLE_STATUS_get_IC_EN(data)                                            ((0x00000001&(data))>>0)


#define IC1_PRE_FIFO                                                                 0x1801B4A0
#define IC1_PRE_FIFO_reg_addr                                                        "0xB801B4A0"
#define IC1_PRE_FIFO_reg                                                             0xB801B4A0
#define set_IC1_PRE_FIFO_reg(data)   (*((volatile unsigned int*) IC1_PRE_FIFO_reg)=data)
#define get_IC1_PRE_FIFO_reg   (*((volatile unsigned int*) IC1_PRE_FIFO_reg))
#define IC1_PRE_FIFO_inst_adr                                                        "0x0028"
#define IC1_PRE_FIFO_inst                                                            0x0028
#define IC1_PRE_FIFO_Prefifoenable_shift                                             (19)
#define IC1_PRE_FIFO_Prefifoenable_mask                                              (0x00080000)
#define IC1_PRE_FIFO_Prefifoenable(data)                                             (0x00080000&((data)<<19))
#define IC1_PRE_FIFO_Prefifoenable_src(data)                                         ((0x00080000&(data))>>19)
#define IC1_PRE_FIFO_get_Prefifoenable(data)                                         ((0x00080000&(data))>>19)
#define IC1_PRE_FIFO_Prefifowritedatastart_shift                                     (18)
#define IC1_PRE_FIFO_Prefifowritedatastart_mask                                      (0x00040000)
#define IC1_PRE_FIFO_Prefifowritedatastart(data)                                     (0x00040000&((data)<<18))
#define IC1_PRE_FIFO_Prefifowritedatastart_src(data)                                 ((0x00040000&(data))>>18)
#define IC1_PRE_FIFO_get_Prefifowritedatastart(data)                                 ((0x00040000&(data))>>18)
#define IC1_PRE_FIFO_Prefifodoneinterruptenable_shift                                (17)
#define IC1_PRE_FIFO_Prefifodoneinterruptenable_mask                                 (0x00020000)
#define IC1_PRE_FIFO_Prefifodoneinterruptenable(data)                                (0x00020000&((data)<<17))
#define IC1_PRE_FIFO_Prefifodoneinterruptenable_src(data)                            ((0x00020000&(data))>>17)
#define IC1_PRE_FIFO_get_Prefifodoneinterruptenable(data)                            ((0x00020000&(data))>>17)
#define IC1_PRE_FIFO_Write_data_shift                                                (0)
#define IC1_PRE_FIFO_Write_data_mask                                                 (0x000000FF)
#define IC1_PRE_FIFO_Write_data(data)                                                (0x000000FF&((data)<<0))
#define IC1_PRE_FIFO_Write_data_src(data)                                            ((0x000000FF&(data))>>0)
#define IC1_PRE_FIFO_get_Write_data(data)                                            ((0x000000FF&(data))>>0)


#define IC1_COMP_PARAM_1                                                             0x1801B4F4
#define IC1_COMP_PARAM_1_reg_addr                                                    "0xB801B4F4"
#define IC1_COMP_PARAM_1_reg                                                         0xB801B4F4
#define set_IC1_COMP_PARAM_1_reg(data)   (*((volatile unsigned int*) IC1_COMP_PARAM_1_reg)=data)
#define get_IC1_COMP_PARAM_1_reg   (*((volatile unsigned int*) IC1_COMP_PARAM_1_reg))
#define IC1_COMP_PARAM_1_inst_adr                                                    "0x003D"
#define IC1_COMP_PARAM_1_inst                                                        0x003D
#define IC1_COMP_PARAM_1_TX_BUFFER_DEPTH_shift                                       (16)
#define IC1_COMP_PARAM_1_TX_BUFFER_DEPTH_mask                                        (0x00FF0000)
#define IC1_COMP_PARAM_1_TX_BUFFER_DEPTH(data)                                       (0x00FF0000&((data)<<16))
#define IC1_COMP_PARAM_1_TX_BUFFER_DEPTH_src(data)                                   ((0x00FF0000&(data))>>16)
#define IC1_COMP_PARAM_1_get_TX_BUFFER_DEPTH(data)                                   ((0x00FF0000&(data))>>16)
#define IC1_COMP_PARAM_1_RX_BUFFER_DEPTH_shift                                       (8)
#define IC1_COMP_PARAM_1_RX_BUFFER_DEPTH_mask                                        (0x0000FF00)
#define IC1_COMP_PARAM_1_RX_BUFFER_DEPTH(data)                                       (0x0000FF00&((data)<<8))
#define IC1_COMP_PARAM_1_RX_BUFFER_DEPTH_src(data)                                   ((0x0000FF00&(data))>>8)
#define IC1_COMP_PARAM_1_get_RX_BUFFER_DEPTH(data)                                   ((0x0000FF00&(data))>>8)
#define IC1_COMP_PARAM_1_ADD_ENCODED_PARAMS_shift                                    (7)
#define IC1_COMP_PARAM_1_ADD_ENCODED_PARAMS_mask                                     (0x00000080)
#define IC1_COMP_PARAM_1_ADD_ENCODED_PARAMS(data)                                    (0x00000080&((data)<<7))
#define IC1_COMP_PARAM_1_ADD_ENCODED_PARAMS_src(data)                                ((0x00000080&(data))>>7)
#define IC1_COMP_PARAM_1_get_ADD_ENCODED_PARAMS(data)                                ((0x00000080&(data))>>7)
#define IC1_COMP_PARAM_1_HAS_DMA_shift                                               (6)
#define IC1_COMP_PARAM_1_HAS_DMA_mask                                                (0x00000040)
#define IC1_COMP_PARAM_1_HAS_DMA(data)                                               (0x00000040&((data)<<6))
#define IC1_COMP_PARAM_1_HAS_DMA_src(data)                                           ((0x00000040&(data))>>6)
#define IC1_COMP_PARAM_1_get_HAS_DMA(data)                                           ((0x00000040&(data))>>6)
#define IC1_COMP_PARAM_1_INTR_IO_shift                                               (5)
#define IC1_COMP_PARAM_1_INTR_IO_mask                                                (0x00000020)
#define IC1_COMP_PARAM_1_INTR_IO(data)                                               (0x00000020&((data)<<5))
#define IC1_COMP_PARAM_1_INTR_IO_src(data)                                           ((0x00000020&(data))>>5)
#define IC1_COMP_PARAM_1_get_INTR_IO(data)                                           ((0x00000020&(data))>>5)
#define IC1_COMP_PARAM_1_HC_COUNT_VALUES_shift                                       (4)
#define IC1_COMP_PARAM_1_HC_COUNT_VALUES_mask                                        (0x00000010)
#define IC1_COMP_PARAM_1_HC_COUNT_VALUES(data)                                       (0x00000010&((data)<<4))
#define IC1_COMP_PARAM_1_HC_COUNT_VALUES_src(data)                                   ((0x00000010&(data))>>4)
#define IC1_COMP_PARAM_1_get_HC_COUNT_VALUES(data)                                   ((0x00000010&(data))>>4)
#define IC1_COMP_PARAM_1_MAX_SPEED_MODE_shift                                        (2)
#define IC1_COMP_PARAM_1_MAX_SPEED_MODE_mask                                         (0x0000000C)
#define IC1_COMP_PARAM_1_MAX_SPEED_MODE(data)                                        (0x0000000C&((data)<<2))
#define IC1_COMP_PARAM_1_MAX_SPEED_MODE_src(data)                                    ((0x0000000C&(data))>>2)
#define IC1_COMP_PARAM_1_get_MAX_SPEED_MODE(data)                                    ((0x0000000C&(data))>>2)
#define IC1_COMP_PARAM_1_APB_DATA_WIDTH_shift                                        (0)
#define IC1_COMP_PARAM_1_APB_DATA_WIDTH_mask                                         (0x00000003)
#define IC1_COMP_PARAM_1_APB_DATA_WIDTH(data)                                        (0x00000003&((data)<<0))
#define IC1_COMP_PARAM_1_APB_DATA_WIDTH_src(data)                                    ((0x00000003&(data))>>0)
#define IC1_COMP_PARAM_1_get_APB_DATA_WIDTH(data)                                    ((0x00000003&(data))>>0)


#define IC1_COMP_VERSION                                                             0x1801B4F8
#define IC1_COMP_VERSION_reg_addr                                                    "0xB801B4F8"
#define IC1_COMP_VERSION_reg                                                         0xB801B4F8
#define set_IC1_COMP_VERSION_reg(data)   (*((volatile unsigned int*) IC1_COMP_VERSION_reg)=data)
#define get_IC1_COMP_VERSION_reg   (*((volatile unsigned int*) IC1_COMP_VERSION_reg))
#define IC1_COMP_VERSION_inst_adr                                                    "0x003E"
#define IC1_COMP_VERSION_inst                                                        0x003E
#define IC1_COMP_VERSION_IC_COMP_VERSION_shift                                       (0)
#define IC1_COMP_VERSION_IC_COMP_VERSION_mask                                        (0xFFFFFFFF)
#define IC1_COMP_VERSION_IC_COMP_VERSION(data)                                       (0xFFFFFFFF&((data)<<0))
#define IC1_COMP_VERSION_IC_COMP_VERSION_src(data)                                   ((0xFFFFFFFF&(data))>>0)
#define IC1_COMP_VERSION_get_IC_COMP_VERSION(data)                                   ((0xFFFFFFFF&(data))>>0)


#define IC1_COMP_TYPE                                                                0x1801B4FC
#define IC1_COMP_TYPE_reg_addr                                                       "0xB801B4FC"
#define IC1_COMP_TYPE_reg                                                            0xB801B4FC
#define set_IC1_COMP_TYPE_reg(data)   (*((volatile unsigned int*) IC1_COMP_TYPE_reg)=data)
#define get_IC1_COMP_TYPE_reg   (*((volatile unsigned int*) IC1_COMP_TYPE_reg))
#define IC1_COMP_TYPE_inst_adr                                                       "0x003F"
#define IC1_COMP_TYPE_inst                                                           0x003F
#define IC1_COMP_TYPE_IC_COMP_TYPE_shift                                             (0)
#define IC1_COMP_TYPE_IC_COMP_TYPE_mask                                              (0xFFFFFFFF)
#define IC1_COMP_TYPE_IC_COMP_TYPE(data)                                             (0xFFFFFFFF&((data)<<0))
#define IC1_COMP_TYPE_IC_COMP_TYPE_src(data)                                         ((0xFFFFFFFF&(data))>>0)
#define IC1_COMP_TYPE_get_IC_COMP_TYPE(data)                                         ((0xFFFFFFFF&(data))>>0)


#define IC2_CON                                                                      0x1801B500
#define IC2_CON_reg_addr                                                             "0xB801B500"
#define IC2_CON_reg                                                                  0xB801B500
#define set_IC2_CON_reg(data)   (*((volatile unsigned int*) IC2_CON_reg)=data)
#define get_IC2_CON_reg   (*((volatile unsigned int*) IC2_CON_reg))
#define IC2_CON_inst_adr                                                             "0x0040"
#define IC2_CON_inst                                                                 0x0040
#define IC2_CON_IC_SLAVE_DISABLE_shift                                               (6)
#define IC2_CON_IC_SLAVE_DISABLE_mask                                                (0x00000040)
#define IC2_CON_IC_SLAVE_DISABLE(data)                                               (0x00000040&((data)<<6))
#define IC2_CON_IC_SLAVE_DISABLE_src(data)                                           ((0x00000040&(data))>>6)
#define IC2_CON_get_IC_SLAVE_DISABLE(data)                                           ((0x00000040&(data))>>6)
#define IC2_CON_IC_RESTART_EN_shift                                                  (5)
#define IC2_CON_IC_RESTART_EN_mask                                                   (0x00000020)
#define IC2_CON_IC_RESTART_EN(data)                                                  (0x00000020&((data)<<5))
#define IC2_CON_IC_RESTART_EN_src(data)                                              ((0x00000020&(data))>>5)
#define IC2_CON_get_IC_RESTART_EN(data)                                              ((0x00000020&(data))>>5)
#define IC2_CON_IC_10BITADDR_MASTER_shift                                            (4)
#define IC2_CON_IC_10BITADDR_MASTER_mask                                             (0x00000010)
#define IC2_CON_IC_10BITADDR_MASTER(data)                                            (0x00000010&((data)<<4))
#define IC2_CON_IC_10BITADDR_MASTER_src(data)                                        ((0x00000010&(data))>>4)
#define IC2_CON_get_IC_10BITADDR_MASTER(data)                                        ((0x00000010&(data))>>4)
#define IC2_CON_IC_10BITADDR_SLAVE_shift                                             (3)
#define IC2_CON_IC_10BITADDR_SLAVE_mask                                              (0x00000008)
#define IC2_CON_IC_10BITADDR_SLAVE(data)                                             (0x00000008&((data)<<3))
#define IC2_CON_IC_10BITADDR_SLAVE_src(data)                                         ((0x00000008&(data))>>3)
#define IC2_CON_get_IC_10BITADDR_SLAVE(data)                                         ((0x00000008&(data))>>3)
#define IC2_CON_SPEED_shift                                                          (1)
#define IC2_CON_SPEED_mask                                                           (0x00000006)
#define IC2_CON_SPEED(data)                                                          (0x00000006&((data)<<1))
#define IC2_CON_SPEED_src(data)                                                      ((0x00000006&(data))>>1)
#define IC2_CON_get_SPEED(data)                                                      ((0x00000006&(data))>>1)
#define IC2_CON_MASTER_MODE_shift                                                    (0)
#define IC2_CON_MASTER_MODE_mask                                                     (0x00000001)
#define IC2_CON_MASTER_MODE(data)                                                    (0x00000001&((data)<<0))
#define IC2_CON_MASTER_MODE_src(data)                                                ((0x00000001&(data))>>0)
#define IC2_CON_get_MASTER_MODE(data)                                                ((0x00000001&(data))>>0)


#define IC2_TAR                                                                      0x1801B504
#define IC2_TAR_reg_addr                                                             "0xB801B504"
#define IC2_TAR_reg                                                                  0xB801B504
#define set_IC2_TAR_reg(data)   (*((volatile unsigned int*) IC2_TAR_reg)=data)
#define get_IC2_TAR_reg   (*((volatile unsigned int*) IC2_TAR_reg))
#define IC2_TAR_inst_adr                                                             "0x0041"
#define IC2_TAR_inst                                                                 0x0041
#define IC2_TAR_SPECIAL_shift                                                        (11)
#define IC2_TAR_SPECIAL_mask                                                         (0x00000800)
#define IC2_TAR_SPECIAL(data)                                                        (0x00000800&((data)<<11))
#define IC2_TAR_SPECIAL_src(data)                                                    ((0x00000800&(data))>>11)
#define IC2_TAR_get_SPECIAL(data)                                                    ((0x00000800&(data))>>11)
#define IC2_TAR_GC_OR_START_shift                                                    (10)
#define IC2_TAR_GC_OR_START_mask                                                     (0x00000400)
#define IC2_TAR_GC_OR_START(data)                                                    (0x00000400&((data)<<10))
#define IC2_TAR_GC_OR_START_src(data)                                                ((0x00000400&(data))>>10)
#define IC2_TAR_get_GC_OR_START(data)                                                ((0x00000400&(data))>>10)
#define IC2_TAR_IC_TAR_shift                                                         (0)
#define IC2_TAR_IC_TAR_mask                                                          (0x000003FF)
#define IC2_TAR_IC_TAR(data)                                                         (0x000003FF&((data)<<0))
#define IC2_TAR_IC_TAR_src(data)                                                     ((0x000003FF&(data))>>0)
#define IC2_TAR_get_IC_TAR(data)                                                     ((0x000003FF&(data))>>0)


#define IC2_SAR                                                                      0x1801B508
#define IC2_SAR_reg_addr                                                             "0xB801B508"
#define IC2_SAR_reg                                                                  0xB801B508
#define set_IC2_SAR_reg(data)   (*((volatile unsigned int*) IC2_SAR_reg)=data)
#define get_IC2_SAR_reg   (*((volatile unsigned int*) IC2_SAR_reg))
#define IC2_SAR_inst_adr                                                             "0x0042"
#define IC2_SAR_inst                                                                 0x0042
#define IC2_SAR_IC_SAR_shift                                                         (0)
#define IC2_SAR_IC_SAR_mask                                                          (0x000003FF)
#define IC2_SAR_IC_SAR(data)                                                         (0x000003FF&((data)<<0))
#define IC2_SAR_IC_SAR_src(data)                                                     ((0x000003FF&(data))>>0)
#define IC2_SAR_get_IC_SAR(data)                                                     ((0x000003FF&(data))>>0)


#define IC2_HS_MADDR                                                                 0x1801B50C
#define IC2_HS_MADDR_reg_addr                                                        "0xB801B50C"
#define IC2_HS_MADDR_reg                                                             0xB801B50C
#define set_IC2_HS_MADDR_reg(data)   (*((volatile unsigned int*) IC2_HS_MADDR_reg)=data)
#define get_IC2_HS_MADDR_reg   (*((volatile unsigned int*) IC2_HS_MADDR_reg))
#define IC2_HS_MADDR_inst_adr                                                        "0x0043"
#define IC2_HS_MADDR_inst                                                            0x0043
#define IC2_HS_MADDR_IC_HS_MAR_shift                                                 (0)
#define IC2_HS_MADDR_IC_HS_MAR_mask                                                  (0x00000007)
#define IC2_HS_MADDR_IC_HS_MAR(data)                                                 (0x00000007&((data)<<0))
#define IC2_HS_MADDR_IC_HS_MAR_src(data)                                             ((0x00000007&(data))>>0)
#define IC2_HS_MADDR_get_IC_HS_MAR(data)                                             ((0x00000007&(data))>>0)


#define IC2_DATA_CMD                                                                 0x1801B510
#define IC2_DATA_CMD_reg_addr                                                        "0xB801B510"
#define IC2_DATA_CMD_reg                                                             0xB801B510
#define set_IC2_DATA_CMD_reg(data)   (*((volatile unsigned int*) IC2_DATA_CMD_reg)=data)
#define get_IC2_DATA_CMD_reg   (*((volatile unsigned int*) IC2_DATA_CMD_reg))
#define IC2_DATA_CMD_inst_adr                                                        "0x0044"
#define IC2_DATA_CMD_inst                                                            0x0044
#define IC2_DATA_CMD_CMD_shift                                                       (8)
#define IC2_DATA_CMD_CMD_mask                                                        (0x00000100)
#define IC2_DATA_CMD_CMD(data)                                                       (0x00000100&((data)<<8))
#define IC2_DATA_CMD_CMD_src(data)                                                   ((0x00000100&(data))>>8)
#define IC2_DATA_CMD_get_CMD(data)                                                   ((0x00000100&(data))>>8)
#define IC2_DATA_CMD_DAT_shift                                                       (0)
#define IC2_DATA_CMD_DAT_mask                                                        (0x000000FF)
#define IC2_DATA_CMD_DAT(data)                                                       (0x000000FF&((data)<<0))
#define IC2_DATA_CMD_DAT_src(data)                                                   ((0x000000FF&(data))>>0)
#define IC2_DATA_CMD_get_DAT(data)                                                   ((0x000000FF&(data))>>0)


#define IC2_SS_SCL_HCNT                                                              0x1801B514
#define IC2_SS_SCL_HCNT_reg_addr                                                     "0xB801B514"
#define IC2_SS_SCL_HCNT_reg                                                          0xB801B514
#define set_IC2_SS_SCL_HCNT_reg(data)   (*((volatile unsigned int*) IC2_SS_SCL_HCNT_reg)=data)
#define get_IC2_SS_SCL_HCNT_reg   (*((volatile unsigned int*) IC2_SS_SCL_HCNT_reg))
#define IC2_SS_SCL_HCNT_inst_adr                                                     "0x0045"
#define IC2_SS_SCL_HCNT_inst                                                         0x0045
#define IC2_SS_SCL_HCNT_IC_SS_SCL_HCNT_shift                                         (0)
#define IC2_SS_SCL_HCNT_IC_SS_SCL_HCNT_mask                                          (0x0000FFFF)
#define IC2_SS_SCL_HCNT_IC_SS_SCL_HCNT(data)                                         (0x0000FFFF&((data)<<0))
#define IC2_SS_SCL_HCNT_IC_SS_SCL_HCNT_src(data)                                     ((0x0000FFFF&(data))>>0)
#define IC2_SS_SCL_HCNT_get_IC_SS_SCL_HCNT(data)                                     ((0x0000FFFF&(data))>>0)


#define IC2_SS_SCL_LCNT                                                              0x1801B518
#define IC2_SS_SCL_LCNT_reg_addr                                                     "0xB801B518"
#define IC2_SS_SCL_LCNT_reg                                                          0xB801B518
#define set_IC2_SS_SCL_LCNT_reg(data)   (*((volatile unsigned int*) IC2_SS_SCL_LCNT_reg)=data)
#define get_IC2_SS_SCL_LCNT_reg   (*((volatile unsigned int*) IC2_SS_SCL_LCNT_reg))
#define IC2_SS_SCL_LCNT_inst_adr                                                     "0x0046"
#define IC2_SS_SCL_LCNT_inst                                                         0x0046
#define IC2_SS_SCL_LCNT_IC_SS_SCL_LCNT_shift                                         (0)
#define IC2_SS_SCL_LCNT_IC_SS_SCL_LCNT_mask                                          (0x0000FFFF)
#define IC2_SS_SCL_LCNT_IC_SS_SCL_LCNT(data)                                         (0x0000FFFF&((data)<<0))
#define IC2_SS_SCL_LCNT_IC_SS_SCL_LCNT_src(data)                                     ((0x0000FFFF&(data))>>0)
#define IC2_SS_SCL_LCNT_get_IC_SS_SCL_LCNT(data)                                     ((0x0000FFFF&(data))>>0)


#define IC2_FS_SCL_HCNT                                                              0x1801B51C
#define IC2_FS_SCL_HCNT_reg_addr                                                     "0xB801B51C"
#define IC2_FS_SCL_HCNT_reg                                                          0xB801B51C
#define set_IC2_FS_SCL_HCNT_reg(data)   (*((volatile unsigned int*) IC2_FS_SCL_HCNT_reg)=data)
#define get_IC2_FS_SCL_HCNT_reg   (*((volatile unsigned int*) IC2_FS_SCL_HCNT_reg))
#define IC2_FS_SCL_HCNT_inst_adr                                                     "0x0047"
#define IC2_FS_SCL_HCNT_inst                                                         0x0047
#define IC2_FS_SCL_HCNT_IC_FS_SCL_HCNT_shift                                         (0)
#define IC2_FS_SCL_HCNT_IC_FS_SCL_HCNT_mask                                          (0x0000FFFF)
#define IC2_FS_SCL_HCNT_IC_FS_SCL_HCNT(data)                                         (0x0000FFFF&((data)<<0))
#define IC2_FS_SCL_HCNT_IC_FS_SCL_HCNT_src(data)                                     ((0x0000FFFF&(data))>>0)
#define IC2_FS_SCL_HCNT_get_IC_FS_SCL_HCNT(data)                                     ((0x0000FFFF&(data))>>0)


#define IC2_FS_SCL_LCNT                                                              0x1801B520
#define IC2_FS_SCL_LCNT_reg_addr                                                     "0xB801B520"
#define IC2_FS_SCL_LCNT_reg                                                          0xB801B520
#define set_IC2_FS_SCL_LCNT_reg(data)   (*((volatile unsigned int*) IC2_FS_SCL_LCNT_reg)=data)
#define get_IC2_FS_SCL_LCNT_reg   (*((volatile unsigned int*) IC2_FS_SCL_LCNT_reg))
#define IC2_FS_SCL_LCNT_inst_adr                                                     "0x0048"
#define IC2_FS_SCL_LCNT_inst                                                         0x0048
#define IC2_FS_SCL_LCNT_IC_FS_SCL_LCNT_shift                                         (0)
#define IC2_FS_SCL_LCNT_IC_FS_SCL_LCNT_mask                                          (0x0000FFFF)
#define IC2_FS_SCL_LCNT_IC_FS_SCL_LCNT(data)                                         (0x0000FFFF&((data)<<0))
#define IC2_FS_SCL_LCNT_IC_FS_SCL_LCNT_src(data)                                     ((0x0000FFFF&(data))>>0)
#define IC2_FS_SCL_LCNT_get_IC_FS_SCL_LCNT(data)                                     ((0x0000FFFF&(data))>>0)


#define IC2_RAW_INTR_STAT                                                            0x1801B534
#define IC2_RAW_INTR_STAT_reg_addr                                                   "0xB801B534"
#define IC2_RAW_INTR_STAT_reg                                                        0xB801B534
#define set_IC2_RAW_INTR_STAT_reg(data)   (*((volatile unsigned int*) IC2_RAW_INTR_STAT_reg)=data)
#define get_IC2_RAW_INTR_STAT_reg   (*((volatile unsigned int*) IC2_RAW_INTR_STAT_reg))
#define IC2_RAW_INTR_STAT_inst_adr                                                   "0x004D"
#define IC2_RAW_INTR_STAT_inst                                                       0x004D
#define IC2_RAW_INTR_STAT_GEN_CALL_shift                                             (11)
#define IC2_RAW_INTR_STAT_GEN_CALL_mask                                              (0x00000800)
#define IC2_RAW_INTR_STAT_GEN_CALL(data)                                             (0x00000800&((data)<<11))
#define IC2_RAW_INTR_STAT_GEN_CALL_src(data)                                         ((0x00000800&(data))>>11)
#define IC2_RAW_INTR_STAT_get_GEN_CALL(data)                                         ((0x00000800&(data))>>11)
#define IC2_RAW_INTR_STAT_START_DET_shift                                            (10)
#define IC2_RAW_INTR_STAT_START_DET_mask                                             (0x00000400)
#define IC2_RAW_INTR_STAT_START_DET(data)                                            (0x00000400&((data)<<10))
#define IC2_RAW_INTR_STAT_START_DET_src(data)                                        ((0x00000400&(data))>>10)
#define IC2_RAW_INTR_STAT_get_START_DET(data)                                        ((0x00000400&(data))>>10)
#define IC2_RAW_INTR_STAT_STOP_DET_shift                                             (9)
#define IC2_RAW_INTR_STAT_STOP_DET_mask                                              (0x00000200)
#define IC2_RAW_INTR_STAT_STOP_DET(data)                                             (0x00000200&((data)<<9))
#define IC2_RAW_INTR_STAT_STOP_DET_src(data)                                         ((0x00000200&(data))>>9)
#define IC2_RAW_INTR_STAT_get_STOP_DET(data)                                         ((0x00000200&(data))>>9)
#define IC2_RAW_INTR_STAT_ACTIVITY_shift                                             (8)
#define IC2_RAW_INTR_STAT_ACTIVITY_mask                                              (0x00000100)
#define IC2_RAW_INTR_STAT_ACTIVITY(data)                                             (0x00000100&((data)<<8))
#define IC2_RAW_INTR_STAT_ACTIVITY_src(data)                                         ((0x00000100&(data))>>8)
#define IC2_RAW_INTR_STAT_get_ACTIVITY(data)                                         ((0x00000100&(data))>>8)
#define IC2_RAW_INTR_STAT_RX_DONE_shift                                              (7)
#define IC2_RAW_INTR_STAT_RX_DONE_mask                                               (0x00000080)
#define IC2_RAW_INTR_STAT_RX_DONE(data)                                              (0x00000080&((data)<<7))
#define IC2_RAW_INTR_STAT_RX_DONE_src(data)                                          ((0x00000080&(data))>>7)
#define IC2_RAW_INTR_STAT_get_RX_DONE(data)                                          ((0x00000080&(data))>>7)
#define IC2_RAW_INTR_STAT_TX_ABRT_shift                                              (6)
#define IC2_RAW_INTR_STAT_TX_ABRT_mask                                               (0x00000040)
#define IC2_RAW_INTR_STAT_TX_ABRT(data)                                              (0x00000040&((data)<<6))
#define IC2_RAW_INTR_STAT_TX_ABRT_src(data)                                          ((0x00000040&(data))>>6)
#define IC2_RAW_INTR_STAT_get_TX_ABRT(data)                                          ((0x00000040&(data))>>6)
#define IC2_RAW_INTR_STAT_RD_REQ_shift                                               (5)
#define IC2_RAW_INTR_STAT_RD_REQ_mask                                                (0x00000020)
#define IC2_RAW_INTR_STAT_RD_REQ(data)                                               (0x00000020&((data)<<5))
#define IC2_RAW_INTR_STAT_RD_REQ_src(data)                                           ((0x00000020&(data))>>5)
#define IC2_RAW_INTR_STAT_get_RD_REQ(data)                                           ((0x00000020&(data))>>5)
#define IC2_RAW_INTR_STAT_TX_EMPTY_shift                                             (4)
#define IC2_RAW_INTR_STAT_TX_EMPTY_mask                                              (0x00000010)
#define IC2_RAW_INTR_STAT_TX_EMPTY(data)                                             (0x00000010&((data)<<4))
#define IC2_RAW_INTR_STAT_TX_EMPTY_src(data)                                         ((0x00000010&(data))>>4)
#define IC2_RAW_INTR_STAT_get_TX_EMPTY(data)                                         ((0x00000010&(data))>>4)
#define IC2_RAW_INTR_STAT_TX_OVER_shift                                              (3)
#define IC2_RAW_INTR_STAT_TX_OVER_mask                                               (0x00000008)
#define IC2_RAW_INTR_STAT_TX_OVER(data)                                              (0x00000008&((data)<<3))
#define IC2_RAW_INTR_STAT_TX_OVER_src(data)                                          ((0x00000008&(data))>>3)
#define IC2_RAW_INTR_STAT_get_TX_OVER(data)                                          ((0x00000008&(data))>>3)
#define IC2_RAW_INTR_STAT_RX_FULL_shift                                              (2)
#define IC2_RAW_INTR_STAT_RX_FULL_mask                                               (0x00000004)
#define IC2_RAW_INTR_STAT_RX_FULL(data)                                              (0x00000004&((data)<<2))
#define IC2_RAW_INTR_STAT_RX_FULL_src(data)                                          ((0x00000004&(data))>>2)
#define IC2_RAW_INTR_STAT_get_RX_FULL(data)                                          ((0x00000004&(data))>>2)
#define IC2_RAW_INTR_STAT_RX_OVER_shift                                              (1)
#define IC2_RAW_INTR_STAT_RX_OVER_mask                                               (0x00000002)
#define IC2_RAW_INTR_STAT_RX_OVER(data)                                              (0x00000002&((data)<<1))
#define IC2_RAW_INTR_STAT_RX_OVER_src(data)                                          ((0x00000002&(data))>>1)
#define IC2_RAW_INTR_STAT_get_RX_OVER(data)                                          ((0x00000002&(data))>>1)
#define IC2_RAW_INTR_STAT_RX_UNDER_shift                                             (0)
#define IC2_RAW_INTR_STAT_RX_UNDER_mask                                              (0x00000001)
#define IC2_RAW_INTR_STAT_RX_UNDER(data)                                             (0x00000001&((data)<<0))
#define IC2_RAW_INTR_STAT_RX_UNDER_src(data)                                         ((0x00000001&(data))>>0)
#define IC2_RAW_INTR_STAT_get_RX_UNDER(data)                                         ((0x00000001&(data))>>0)


#define IC2_INTR_MASK                                                                0x1801B530
#define IC2_INTR_MASK_reg_addr                                                       "0xB801B530"
#define IC2_INTR_MASK_reg                                                            0xB801B530
#define set_IC2_INTR_MASK_reg(data)   (*((volatile unsigned int*) IC2_INTR_MASK_reg)=data)
#define get_IC2_INTR_MASK_reg   (*((volatile unsigned int*) IC2_INTR_MASK_reg))
#define IC2_INTR_MASK_inst_adr                                                       "0x004C"
#define IC2_INTR_MASK_inst                                                           0x004C
#define IC2_INTR_MASK_M_GEN_CALL_shift                                               (11)
#define IC2_INTR_MASK_M_GEN_CALL_mask                                                (0x00000800)
#define IC2_INTR_MASK_M_GEN_CALL(data)                                               (0x00000800&((data)<<11))
#define IC2_INTR_MASK_M_GEN_CALL_src(data)                                           ((0x00000800&(data))>>11)
#define IC2_INTR_MASK_get_M_GEN_CALL(data)                                           ((0x00000800&(data))>>11)
#define IC2_INTR_MASK_M_START_DET_shift                                              (10)
#define IC2_INTR_MASK_M_START_DET_mask                                               (0x00000400)
#define IC2_INTR_MASK_M_START_DET(data)                                              (0x00000400&((data)<<10))
#define IC2_INTR_MASK_M_START_DET_src(data)                                          ((0x00000400&(data))>>10)
#define IC2_INTR_MASK_get_M_START_DET(data)                                          ((0x00000400&(data))>>10)
#define IC2_INTR_MASK_M_STOP_DET_shift                                               (9)
#define IC2_INTR_MASK_M_STOP_DET_mask                                                (0x00000200)
#define IC2_INTR_MASK_M_STOP_DET(data)                                               (0x00000200&((data)<<9))
#define IC2_INTR_MASK_M_STOP_DET_src(data)                                           ((0x00000200&(data))>>9)
#define IC2_INTR_MASK_get_M_STOP_DET(data)                                           ((0x00000200&(data))>>9)
#define IC2_INTR_MASK_M_ACTIVITY_shift                                               (8)
#define IC2_INTR_MASK_M_ACTIVITY_mask                                                (0x00000100)
#define IC2_INTR_MASK_M_ACTIVITY(data)                                               (0x00000100&((data)<<8))
#define IC2_INTR_MASK_M_ACTIVITY_src(data)                                           ((0x00000100&(data))>>8)
#define IC2_INTR_MASK_get_M_ACTIVITY(data)                                           ((0x00000100&(data))>>8)
#define IC2_INTR_MASK_M_RX_DONE_shift                                                (7)
#define IC2_INTR_MASK_M_RX_DONE_mask                                                 (0x00000080)
#define IC2_INTR_MASK_M_RX_DONE(data)                                                (0x00000080&((data)<<7))
#define IC2_INTR_MASK_M_RX_DONE_src(data)                                            ((0x00000080&(data))>>7)
#define IC2_INTR_MASK_get_M_RX_DONE(data)                                            ((0x00000080&(data))>>7)
#define IC2_INTR_MASK_M_TX_ABRT_shift                                                (6)
#define IC2_INTR_MASK_M_TX_ABRT_mask                                                 (0x00000040)
#define IC2_INTR_MASK_M_TX_ABRT(data)                                                (0x00000040&((data)<<6))
#define IC2_INTR_MASK_M_TX_ABRT_src(data)                                            ((0x00000040&(data))>>6)
#define IC2_INTR_MASK_get_M_TX_ABRT(data)                                            ((0x00000040&(data))>>6)
#define IC2_INTR_MASK_M_RD_REQ_shift                                                 (5)
#define IC2_INTR_MASK_M_RD_REQ_mask                                                  (0x00000020)
#define IC2_INTR_MASK_M_RD_REQ(data)                                                 (0x00000020&((data)<<5))
#define IC2_INTR_MASK_M_RD_REQ_src(data)                                             ((0x00000020&(data))>>5)
#define IC2_INTR_MASK_get_M_RD_REQ(data)                                             ((0x00000020&(data))>>5)
#define IC2_INTR_MASK_M_TX_EMPTY_shift                                               (4)
#define IC2_INTR_MASK_M_TX_EMPTY_mask                                                (0x00000010)
#define IC2_INTR_MASK_M_TX_EMPTY(data)                                               (0x00000010&((data)<<4))
#define IC2_INTR_MASK_M_TX_EMPTY_src(data)                                           ((0x00000010&(data))>>4)
#define IC2_INTR_MASK_get_M_TX_EMPTY(data)                                           ((0x00000010&(data))>>4)
#define IC2_INTR_MASK_M_TX_OVER_shift                                                (3)
#define IC2_INTR_MASK_M_TX_OVER_mask                                                 (0x00000008)
#define IC2_INTR_MASK_M_TX_OVER(data)                                                (0x00000008&((data)<<3))
#define IC2_INTR_MASK_M_TX_OVER_src(data)                                            ((0x00000008&(data))>>3)
#define IC2_INTR_MASK_get_M_TX_OVER(data)                                            ((0x00000008&(data))>>3)
#define IC2_INTR_MASK_M_RX_FULL_shift                                                (2)
#define IC2_INTR_MASK_M_RX_FULL_mask                                                 (0x00000004)
#define IC2_INTR_MASK_M_RX_FULL(data)                                                (0x00000004&((data)<<2))
#define IC2_INTR_MASK_M_RX_FULL_src(data)                                            ((0x00000004&(data))>>2)
#define IC2_INTR_MASK_get_M_RX_FULL(data)                                            ((0x00000004&(data))>>2)
#define IC2_INTR_MASK_M_RX_OVER_shift                                                (1)
#define IC2_INTR_MASK_M_RX_OVER_mask                                                 (0x00000002)
#define IC2_INTR_MASK_M_RX_OVER(data)                                                (0x00000002&((data)<<1))
#define IC2_INTR_MASK_M_RX_OVER_src(data)                                            ((0x00000002&(data))>>1)
#define IC2_INTR_MASK_get_M_RX_OVER(data)                                            ((0x00000002&(data))>>1)
#define IC2_INTR_MASK_M_RX_UNDER_shift                                               (0)
#define IC2_INTR_MASK_M_RX_UNDER_mask                                                (0x00000001)
#define IC2_INTR_MASK_M_RX_UNDER(data)                                               (0x00000001&((data)<<0))
#define IC2_INTR_MASK_M_RX_UNDER_src(data)                                           ((0x00000001&(data))>>0)
#define IC2_INTR_MASK_get_M_RX_UNDER(data)                                           ((0x00000001&(data))>>0)


#define IC2_INTR_STAT                                                                0x1801B52C
#define IC2_INTR_STAT_reg_addr                                                       "0xB801B52C"
#define IC2_INTR_STAT_reg                                                            0xB801B52C
#define set_IC2_INTR_STAT_reg(data)   (*((volatile unsigned int*) IC2_INTR_STAT_reg)=data)
#define get_IC2_INTR_STAT_reg   (*((volatile unsigned int*) IC2_INTR_STAT_reg))
#define IC2_INTR_STAT_inst_adr                                                       "0x004B"
#define IC2_INTR_STAT_inst                                                           0x004B
#define IC2_INTR_STAT_R_GEN_CALL_shift                                               (11)
#define IC2_INTR_STAT_R_GEN_CALL_mask                                                (0x00000800)
#define IC2_INTR_STAT_R_GEN_CALL(data)                                               (0x00000800&((data)<<11))
#define IC2_INTR_STAT_R_GEN_CALL_src(data)                                           ((0x00000800&(data))>>11)
#define IC2_INTR_STAT_get_R_GEN_CALL(data)                                           ((0x00000800&(data))>>11)
#define IC2_INTR_STAT_R_START_DET_shift                                              (10)
#define IC2_INTR_STAT_R_START_DET_mask                                               (0x00000400)
#define IC2_INTR_STAT_R_START_DET(data)                                              (0x00000400&((data)<<10))
#define IC2_INTR_STAT_R_START_DET_src(data)                                          ((0x00000400&(data))>>10)
#define IC2_INTR_STAT_get_R_START_DET(data)                                          ((0x00000400&(data))>>10)
#define IC2_INTR_STAT_R_STOP_DET_shift                                               (9)
#define IC2_INTR_STAT_R_STOP_DET_mask                                                (0x00000200)
#define IC2_INTR_STAT_R_STOP_DET(data)                                               (0x00000200&((data)<<9))
#define IC2_INTR_STAT_R_STOP_DET_src(data)                                           ((0x00000200&(data))>>9)
#define IC2_INTR_STAT_get_R_STOP_DET(data)                                           ((0x00000200&(data))>>9)
#define IC2_INTR_STAT_R_ACTIVITY_shift                                               (8)
#define IC2_INTR_STAT_R_ACTIVITY_mask                                                (0x00000100)
#define IC2_INTR_STAT_R_ACTIVITY(data)                                               (0x00000100&((data)<<8))
#define IC2_INTR_STAT_R_ACTIVITY_src(data)                                           ((0x00000100&(data))>>8)
#define IC2_INTR_STAT_get_R_ACTIVITY(data)                                           ((0x00000100&(data))>>8)
#define IC2_INTR_STAT_R_RX_DONE_shift                                                (7)
#define IC2_INTR_STAT_R_RX_DONE_mask                                                 (0x00000080)
#define IC2_INTR_STAT_R_RX_DONE(data)                                                (0x00000080&((data)<<7))
#define IC2_INTR_STAT_R_RX_DONE_src(data)                                            ((0x00000080&(data))>>7)
#define IC2_INTR_STAT_get_R_RX_DONE(data)                                            ((0x00000080&(data))>>7)
#define IC2_INTR_STAT_R_TX_ABRT_shift                                                (6)
#define IC2_INTR_STAT_R_TX_ABRT_mask                                                 (0x00000040)
#define IC2_INTR_STAT_R_TX_ABRT(data)                                                (0x00000040&((data)<<6))
#define IC2_INTR_STAT_R_TX_ABRT_src(data)                                            ((0x00000040&(data))>>6)
#define IC2_INTR_STAT_get_R_TX_ABRT(data)                                            ((0x00000040&(data))>>6)
#define IC2_INTR_STAT_R_RD_REQ_shift                                                 (5)
#define IC2_INTR_STAT_R_RD_REQ_mask                                                  (0x00000020)
#define IC2_INTR_STAT_R_RD_REQ(data)                                                 (0x00000020&((data)<<5))
#define IC2_INTR_STAT_R_RD_REQ_src(data)                                             ((0x00000020&(data))>>5)
#define IC2_INTR_STAT_get_R_RD_REQ(data)                                             ((0x00000020&(data))>>5)
#define IC2_INTR_STAT_R_TX_EMPTY_shift                                               (4)
#define IC2_INTR_STAT_R_TX_EMPTY_mask                                                (0x00000010)
#define IC2_INTR_STAT_R_TX_EMPTY(data)                                               (0x00000010&((data)<<4))
#define IC2_INTR_STAT_R_TX_EMPTY_src(data)                                           ((0x00000010&(data))>>4)
#define IC2_INTR_STAT_get_R_TX_EMPTY(data)                                           ((0x00000010&(data))>>4)
#define IC2_INTR_STAT_R_TX_OVER_shift                                                (3)
#define IC2_INTR_STAT_R_TX_OVER_mask                                                 (0x00000008)
#define IC2_INTR_STAT_R_TX_OVER(data)                                                (0x00000008&((data)<<3))
#define IC2_INTR_STAT_R_TX_OVER_src(data)                                            ((0x00000008&(data))>>3)
#define IC2_INTR_STAT_get_R_TX_OVER(data)                                            ((0x00000008&(data))>>3)
#define IC2_INTR_STAT_R_RX_FULL_shift                                                (2)
#define IC2_INTR_STAT_R_RX_FULL_mask                                                 (0x00000004)
#define IC2_INTR_STAT_R_RX_FULL(data)                                                (0x00000004&((data)<<2))
#define IC2_INTR_STAT_R_RX_FULL_src(data)                                            ((0x00000004&(data))>>2)
#define IC2_INTR_STAT_get_R_RX_FULL(data)                                            ((0x00000004&(data))>>2)
#define IC2_INTR_STAT_R_RX_OVER_shift                                                (1)
#define IC2_INTR_STAT_R_RX_OVER_mask                                                 (0x00000002)
#define IC2_INTR_STAT_R_RX_OVER(data)                                                (0x00000002&((data)<<1))
#define IC2_INTR_STAT_R_RX_OVER_src(data)                                            ((0x00000002&(data))>>1)
#define IC2_INTR_STAT_get_R_RX_OVER(data)                                            ((0x00000002&(data))>>1)
#define IC2_INTR_STAT_R_RX_UNDER_shift                                               (0)
#define IC2_INTR_STAT_R_RX_UNDER_mask                                                (0x00000001)
#define IC2_INTR_STAT_R_RX_UNDER(data)                                               (0x00000001&((data)<<0))
#define IC2_INTR_STAT_R_RX_UNDER_src(data)                                           ((0x00000001&(data))>>0)
#define IC2_INTR_STAT_get_R_RX_UNDER(data)                                           ((0x00000001&(data))>>0)


#define IC2_RX_TL                                                                    0x1801B538
#define IC2_RX_TL_reg_addr                                                           "0xB801B538"
#define IC2_RX_TL_reg                                                                0xB801B538
#define set_IC2_RX_TL_reg(data)   (*((volatile unsigned int*) IC2_RX_TL_reg)=data)
#define get_IC2_RX_TL_reg   (*((volatile unsigned int*) IC2_RX_TL_reg))
#define IC2_RX_TL_inst_adr                                                           "0x004E"
#define IC2_RX_TL_inst                                                               0x004E
#define IC2_RX_TL_RX_TL_shift                                                        (0)
#define IC2_RX_TL_RX_TL_mask                                                         (0x000000FF)
#define IC2_RX_TL_RX_TL(data)                                                        (0x000000FF&((data)<<0))
#define IC2_RX_TL_RX_TL_src(data)                                                    ((0x000000FF&(data))>>0)
#define IC2_RX_TL_get_RX_TL(data)                                                    ((0x000000FF&(data))>>0)


#define IC2_TX_TL                                                                    0x1801B53C
#define IC2_TX_TL_reg_addr                                                           "0xB801B53C"
#define IC2_TX_TL_reg                                                                0xB801B53C
#define set_IC2_TX_TL_reg(data)   (*((volatile unsigned int*) IC2_TX_TL_reg)=data)
#define get_IC2_TX_TL_reg   (*((volatile unsigned int*) IC2_TX_TL_reg))
#define IC2_TX_TL_inst_adr                                                           "0x004F"
#define IC2_TX_TL_inst                                                               0x004F
#define IC2_TX_TL_TX_TL_shift                                                        (0)
#define IC2_TX_TL_TX_TL_mask                                                         (0x000000FF)
#define IC2_TX_TL_TX_TL(data)                                                        (0x000000FF&((data)<<0))
#define IC2_TX_TL_TX_TL_src(data)                                                    ((0x000000FF&(data))>>0)
#define IC2_TX_TL_get_TX_TL(data)                                                    ((0x000000FF&(data))>>0)


#define IC2_CLR_INTR                                                                 0x1801B540
#define IC2_CLR_INTR_reg_addr                                                        "0xB801B540"
#define IC2_CLR_INTR_reg                                                             0xB801B540
#define set_IC2_CLR_INTR_reg(data)   (*((volatile unsigned int*) IC2_CLR_INTR_reg)=data)
#define get_IC2_CLR_INTR_reg   (*((volatile unsigned int*) IC2_CLR_INTR_reg))
#define IC2_CLR_INTR_inst_adr                                                        "0x0050"
#define IC2_CLR_INTR_inst                                                            0x0050
#define IC2_CLR_INTR_CLR_INTR_shift                                                  (0)
#define IC2_CLR_INTR_CLR_INTR_mask                                                   (0x00000001)
#define IC2_CLR_INTR_CLR_INTR(data)                                                  (0x00000001&((data)<<0))
#define IC2_CLR_INTR_CLR_INTR_src(data)                                              ((0x00000001&(data))>>0)
#define IC2_CLR_INTR_get_CLR_INTR(data)                                              ((0x00000001&(data))>>0)


#define IC2_CLR_RX_UNDER                                                             0x1801B544
#define IC2_CLR_RX_UNDER_reg_addr                                                    "0xB801B544"
#define IC2_CLR_RX_UNDER_reg                                                         0xB801B544
#define set_IC2_CLR_RX_UNDER_reg(data)   (*((volatile unsigned int*) IC2_CLR_RX_UNDER_reg)=data)
#define get_IC2_CLR_RX_UNDER_reg   (*((volatile unsigned int*) IC2_CLR_RX_UNDER_reg))
#define IC2_CLR_RX_UNDER_inst_adr                                                    "0x0051"
#define IC2_CLR_RX_UNDER_inst                                                        0x0051
#define IC2_CLR_RX_UNDER_CLR_RX_UNDER_shift                                          (0)
#define IC2_CLR_RX_UNDER_CLR_RX_UNDER_mask                                           (0x00000001)
#define IC2_CLR_RX_UNDER_CLR_RX_UNDER(data)                                          (0x00000001&((data)<<0))
#define IC2_CLR_RX_UNDER_CLR_RX_UNDER_src(data)                                      ((0x00000001&(data))>>0)
#define IC2_CLR_RX_UNDER_get_CLR_RX_UNDER(data)                                      ((0x00000001&(data))>>0)


#define IC2_CLR_RX_OVER                                                              0x1801B548
#define IC2_CLR_RX_OVER_reg_addr                                                     "0xB801B548"
#define IC2_CLR_RX_OVER_reg                                                          0xB801B548
#define set_IC2_CLR_RX_OVER_reg(data)   (*((volatile unsigned int*) IC2_CLR_RX_OVER_reg)=data)
#define get_IC2_CLR_RX_OVER_reg   (*((volatile unsigned int*) IC2_CLR_RX_OVER_reg))
#define IC2_CLR_RX_OVER_inst_adr                                                     "0x0052"
#define IC2_CLR_RX_OVER_inst                                                         0x0052
#define IC2_CLR_RX_OVER_CLR_RX_OVER_shift                                            (0)
#define IC2_CLR_RX_OVER_CLR_RX_OVER_mask                                             (0x00000001)
#define IC2_CLR_RX_OVER_CLR_RX_OVER(data)                                            (0x00000001&((data)<<0))
#define IC2_CLR_RX_OVER_CLR_RX_OVER_src(data)                                        ((0x00000001&(data))>>0)
#define IC2_CLR_RX_OVER_get_CLR_RX_OVER(data)                                        ((0x00000001&(data))>>0)


#define IC2_CLR_TX_OVER                                                              0x1801B54C
#define IC2_CLR_TX_OVER_reg_addr                                                     "0xB801B54C"
#define IC2_CLR_TX_OVER_reg                                                          0xB801B54C
#define set_IC2_CLR_TX_OVER_reg(data)   (*((volatile unsigned int*) IC2_CLR_TX_OVER_reg)=data)
#define get_IC2_CLR_TX_OVER_reg   (*((volatile unsigned int*) IC2_CLR_TX_OVER_reg))
#define IC2_CLR_TX_OVER_inst_adr                                                     "0x0053"
#define IC2_CLR_TX_OVER_inst                                                         0x0053
#define IC2_CLR_TX_OVER_CLR_TX_OVER_shift                                            (0)
#define IC2_CLR_TX_OVER_CLR_TX_OVER_mask                                             (0x00000001)
#define IC2_CLR_TX_OVER_CLR_TX_OVER(data)                                            (0x00000001&((data)<<0))
#define IC2_CLR_TX_OVER_CLR_TX_OVER_src(data)                                        ((0x00000001&(data))>>0)
#define IC2_CLR_TX_OVER_get_CLR_TX_OVER(data)                                        ((0x00000001&(data))>>0)


#define IC2_CLR_RD_REQ                                                               0x1801B550
#define IC2_CLR_RD_REQ_reg_addr                                                      "0xB801B550"
#define IC2_CLR_RD_REQ_reg                                                           0xB801B550
#define set_IC2_CLR_RD_REQ_reg(data)   (*((volatile unsigned int*) IC2_CLR_RD_REQ_reg)=data)
#define get_IC2_CLR_RD_REQ_reg   (*((volatile unsigned int*) IC2_CLR_RD_REQ_reg))
#define IC2_CLR_RD_REQ_inst_adr                                                      "0x0054"
#define IC2_CLR_RD_REQ_inst                                                          0x0054
#define IC2_CLR_RD_REQ_CLR_RD_REQ_shift                                              (0)
#define IC2_CLR_RD_REQ_CLR_RD_REQ_mask                                               (0x00000001)
#define IC2_CLR_RD_REQ_CLR_RD_REQ(data)                                              (0x00000001&((data)<<0))
#define IC2_CLR_RD_REQ_CLR_RD_REQ_src(data)                                          ((0x00000001&(data))>>0)
#define IC2_CLR_RD_REQ_get_CLR_RD_REQ(data)                                          ((0x00000001&(data))>>0)


#define IC2_CLR_TX_ABRT                                                              0x1801B554
#define IC2_CLR_TX_ABRT_reg_addr                                                     "0xB801B554"
#define IC2_CLR_TX_ABRT_reg                                                          0xB801B554
#define set_IC2_CLR_TX_ABRT_reg(data)   (*((volatile unsigned int*) IC2_CLR_TX_ABRT_reg)=data)
#define get_IC2_CLR_TX_ABRT_reg   (*((volatile unsigned int*) IC2_CLR_TX_ABRT_reg))
#define IC2_CLR_TX_ABRT_inst_adr                                                     "0x0055"
#define IC2_CLR_TX_ABRT_inst                                                         0x0055
#define IC2_CLR_TX_ABRT_CLR_TX_ABRT_shift                                            (0)
#define IC2_CLR_TX_ABRT_CLR_TX_ABRT_mask                                             (0x00000001)
#define IC2_CLR_TX_ABRT_CLR_TX_ABRT(data)                                            (0x00000001&((data)<<0))
#define IC2_CLR_TX_ABRT_CLR_TX_ABRT_src(data)                                        ((0x00000001&(data))>>0)
#define IC2_CLR_TX_ABRT_get_CLR_TX_ABRT(data)                                        ((0x00000001&(data))>>0)


#define IC2_CLR_RX_DONE                                                              0x1801B558
#define IC2_CLR_RX_DONE_reg_addr                                                     "0xB801B558"
#define IC2_CLR_RX_DONE_reg                                                          0xB801B558
#define set_IC2_CLR_RX_DONE_reg(data)   (*((volatile unsigned int*) IC2_CLR_RX_DONE_reg)=data)
#define get_IC2_CLR_RX_DONE_reg   (*((volatile unsigned int*) IC2_CLR_RX_DONE_reg))
#define IC2_CLR_RX_DONE_inst_adr                                                     "0x0056"
#define IC2_CLR_RX_DONE_inst                                                         0x0056
#define IC2_CLR_RX_DONE_CLR_RX_DONE_shift                                            (0)
#define IC2_CLR_RX_DONE_CLR_RX_DONE_mask                                             (0x00000001)
#define IC2_CLR_RX_DONE_CLR_RX_DONE(data)                                            (0x00000001&((data)<<0))
#define IC2_CLR_RX_DONE_CLR_RX_DONE_src(data)                                        ((0x00000001&(data))>>0)
#define IC2_CLR_RX_DONE_get_CLR_RX_DONE(data)                                        ((0x00000001&(data))>>0)


#define IC2_CLR_ACTIVITY                                                             0x1801B55C
#define IC2_CLR_ACTIVITY_reg_addr                                                    "0xB801B55C"
#define IC2_CLR_ACTIVITY_reg                                                         0xB801B55C
#define set_IC2_CLR_ACTIVITY_reg(data)   (*((volatile unsigned int*) IC2_CLR_ACTIVITY_reg)=data)
#define get_IC2_CLR_ACTIVITY_reg   (*((volatile unsigned int*) IC2_CLR_ACTIVITY_reg))
#define IC2_CLR_ACTIVITY_inst_adr                                                    "0x0057"
#define IC2_CLR_ACTIVITY_inst                                                        0x0057
#define IC2_CLR_ACTIVITY_CLR_ACTIVITY_shift                                          (0)
#define IC2_CLR_ACTIVITY_CLR_ACTIVITY_mask                                           (0x00000001)
#define IC2_CLR_ACTIVITY_CLR_ACTIVITY(data)                                          (0x00000001&((data)<<0))
#define IC2_CLR_ACTIVITY_CLR_ACTIVITY_src(data)                                      ((0x00000001&(data))>>0)
#define IC2_CLR_ACTIVITY_get_CLR_ACTIVITY(data)                                      ((0x00000001&(data))>>0)


#define IC2_CLR_STOP_DET                                                             0x1801B560
#define IC2_CLR_STOP_DET_reg_addr                                                    "0xB801B560"
#define IC2_CLR_STOP_DET_reg                                                         0xB801B560
#define set_IC2_CLR_STOP_DET_reg(data)   (*((volatile unsigned int*) IC2_CLR_STOP_DET_reg)=data)
#define get_IC2_CLR_STOP_DET_reg   (*((volatile unsigned int*) IC2_CLR_STOP_DET_reg))
#define IC2_CLR_STOP_DET_inst_adr                                                    "0x0058"
#define IC2_CLR_STOP_DET_inst                                                        0x0058
#define IC2_CLR_STOP_DET_CLR_STOP_DET_shift                                          (0)
#define IC2_CLR_STOP_DET_CLR_STOP_DET_mask                                           (0x00000001)
#define IC2_CLR_STOP_DET_CLR_STOP_DET(data)                                          (0x00000001&((data)<<0))
#define IC2_CLR_STOP_DET_CLR_STOP_DET_src(data)                                      ((0x00000001&(data))>>0)
#define IC2_CLR_STOP_DET_get_CLR_STOP_DET(data)                                      ((0x00000001&(data))>>0)


#define IC2_CLR_START_DET                                                            0x1801B564
#define IC2_CLR_START_DET_reg_addr                                                   "0xB801B564"
#define IC2_CLR_START_DET_reg                                                        0xB801B564
#define set_IC2_CLR_START_DET_reg(data)   (*((volatile unsigned int*) IC2_CLR_START_DET_reg)=data)
#define get_IC2_CLR_START_DET_reg   (*((volatile unsigned int*) IC2_CLR_START_DET_reg))
#define IC2_CLR_START_DET_inst_adr                                                   "0x0059"
#define IC2_CLR_START_DET_inst                                                       0x0059
#define IC2_CLR_START_DET_CLR_START_DET_shift                                        (0)
#define IC2_CLR_START_DET_CLR_START_DET_mask                                         (0x00000001)
#define IC2_CLR_START_DET_CLR_START_DET(data)                                        (0x00000001&((data)<<0))
#define IC2_CLR_START_DET_CLR_START_DET_src(data)                                    ((0x00000001&(data))>>0)
#define IC2_CLR_START_DET_get_CLR_START_DET(data)                                    ((0x00000001&(data))>>0)


#define IC2_CLR_GEN_CALL                                                             0x1801B568
#define IC2_CLR_GEN_CALL_reg_addr                                                    "0xB801B568"
#define IC2_CLR_GEN_CALL_reg                                                         0xB801B568
#define set_IC2_CLR_GEN_CALL_reg(data)   (*((volatile unsigned int*) IC2_CLR_GEN_CALL_reg)=data)
#define get_IC2_CLR_GEN_CALL_reg   (*((volatile unsigned int*) IC2_CLR_GEN_CALL_reg))
#define IC2_CLR_GEN_CALL_inst_adr                                                    "0x005A"
#define IC2_CLR_GEN_CALL_inst                                                        0x005A
#define IC2_CLR_GEN_CALL_CLR_GEN_CALL_shift                                          (0)
#define IC2_CLR_GEN_CALL_CLR_GEN_CALL_mask                                           (0x00000001)
#define IC2_CLR_GEN_CALL_CLR_GEN_CALL(data)                                          (0x00000001&((data)<<0))
#define IC2_CLR_GEN_CALL_CLR_GEN_CALL_src(data)                                      ((0x00000001&(data))>>0)
#define IC2_CLR_GEN_CALL_get_CLR_GEN_CALL(data)                                      ((0x00000001&(data))>>0)


#define IC2_ENABLE                                                                   0x1801B56C
#define IC2_ENABLE_reg_addr                                                          "0xB801B56C"
#define IC2_ENABLE_reg                                                               0xB801B56C
#define set_IC2_ENABLE_reg(data)   (*((volatile unsigned int*) IC2_ENABLE_reg)=data)
#define get_IC2_ENABLE_reg   (*((volatile unsigned int*) IC2_ENABLE_reg))
#define IC2_ENABLE_inst_adr                                                          "0x005B"
#define IC2_ENABLE_inst                                                              0x005B
#define IC2_ENABLE_ENABLE_shift                                                      (0)
#define IC2_ENABLE_ENABLE_mask                                                       (0x00000001)
#define IC2_ENABLE_ENABLE(data)                                                      (0x00000001&((data)<<0))
#define IC2_ENABLE_ENABLE_src(data)                                                  ((0x00000001&(data))>>0)
#define IC2_ENABLE_get_ENABLE(data)                                                  ((0x00000001&(data))>>0)


#define IC2_STATUS                                                                   0x1801B570
#define IC2_STATUS_reg_addr                                                          "0xB801B570"
#define IC2_STATUS_reg                                                               0xB801B570
#define set_IC2_STATUS_reg(data)   (*((volatile unsigned int*) IC2_STATUS_reg)=data)
#define get_IC2_STATUS_reg   (*((volatile unsigned int*) IC2_STATUS_reg))
#define IC2_STATUS_inst_adr                                                          "0x005C"
#define IC2_STATUS_inst                                                              0x005C
#define IC2_STATUS_RFF_shift                                                         (4)
#define IC2_STATUS_RFF_mask                                                          (0x00000010)
#define IC2_STATUS_RFF(data)                                                         (0x00000010&((data)<<4))
#define IC2_STATUS_RFF_src(data)                                                     ((0x00000010&(data))>>4)
#define IC2_STATUS_get_RFF(data)                                                     ((0x00000010&(data))>>4)
#define IC2_STATUS_RFNE_shift                                                        (3)
#define IC2_STATUS_RFNE_mask                                                         (0x00000008)
#define IC2_STATUS_RFNE(data)                                                        (0x00000008&((data)<<3))
#define IC2_STATUS_RFNE_src(data)                                                    ((0x00000008&(data))>>3)
#define IC2_STATUS_get_RFNE(data)                                                    ((0x00000008&(data))>>3)
#define IC2_STATUS_TFE_shift                                                         (2)
#define IC2_STATUS_TFE_mask                                                          (0x00000004)
#define IC2_STATUS_TFE(data)                                                         (0x00000004&((data)<<2))
#define IC2_STATUS_TFE_src(data)                                                     ((0x00000004&(data))>>2)
#define IC2_STATUS_get_TFE(data)                                                     ((0x00000004&(data))>>2)
#define IC2_STATUS_TFNF_shift                                                        (1)
#define IC2_STATUS_TFNF_mask                                                         (0x00000002)
#define IC2_STATUS_TFNF(data)                                                        (0x00000002&((data)<<1))
#define IC2_STATUS_TFNF_src(data)                                                    ((0x00000002&(data))>>1)
#define IC2_STATUS_get_TFNF(data)                                                    ((0x00000002&(data))>>1)
#define IC2_STATUS_ACTIVITY_shift                                                    (0)
#define IC2_STATUS_ACTIVITY_mask                                                     (0x00000001)
#define IC2_STATUS_ACTIVITY(data)                                                    (0x00000001&((data)<<0))
#define IC2_STATUS_ACTIVITY_src(data)                                                ((0x00000001&(data))>>0)
#define IC2_STATUS_get_ACTIVITY(data)                                                ((0x00000001&(data))>>0)


#define IC2_TXFLR                                                                    0x1801B574
#define IC2_TXFLR_reg_addr                                                           "0xB801B574"
#define IC2_TXFLR_reg                                                                0xB801B574
#define set_IC2_TXFLR_reg(data)   (*((volatile unsigned int*) IC2_TXFLR_reg)=data)
#define get_IC2_TXFLR_reg   (*((volatile unsigned int*) IC2_TXFLR_reg))
#define IC2_TXFLR_inst_adr                                                           "0x005D"
#define IC2_TXFLR_inst                                                               0x005D
#define IC2_TXFLR_TXFLR_shift                                                        (0)
#define IC2_TXFLR_TXFLR_mask                                                         (0x0000000F)
#define IC2_TXFLR_TXFLR(data)                                                        (0x0000000F&((data)<<0))
#define IC2_TXFLR_TXFLR_src(data)                                                    ((0x0000000F&(data))>>0)
#define IC2_TXFLR_get_TXFLR(data)                                                    ((0x0000000F&(data))>>0)


#define IC2_RXFLR                                                                    0x1801B578
#define IC2_RXFLR_reg_addr                                                           "0xB801B578"
#define IC2_RXFLR_reg                                                                0xB801B578
#define set_IC2_RXFLR_reg(data)   (*((volatile unsigned int*) IC2_RXFLR_reg)=data)
#define get_IC2_RXFLR_reg   (*((volatile unsigned int*) IC2_RXFLR_reg))
#define IC2_RXFLR_inst_adr                                                           "0x005E"
#define IC2_RXFLR_inst                                                               0x005E
#define IC2_RXFLR_RXFLR_shift                                                        (0)
#define IC2_RXFLR_RXFLR_mask                                                         (0x0000000F)
#define IC2_RXFLR_RXFLR(data)                                                        (0x0000000F&((data)<<0))
#define IC2_RXFLR_RXFLR_src(data)                                                    ((0x0000000F&(data))>>0)
#define IC2_RXFLR_get_RXFLR(data)                                                    ((0x0000000F&(data))>>0)


#define IC2_TX_ABRT_SOURCE                                                           0x1801B580
#define IC2_TX_ABRT_SOURCE_reg_addr                                                  "0xB801B580"
#define IC2_TX_ABRT_SOURCE_reg                                                       0xB801B580
#define set_IC2_TX_ABRT_SOURCE_reg(data)   (*((volatile unsigned int*) IC2_TX_ABRT_SOURCE_reg)=data)
#define get_IC2_TX_ABRT_SOURCE_reg   (*((volatile unsigned int*) IC2_TX_ABRT_SOURCE_reg))
#define IC2_TX_ABRT_SOURCE_inst_adr                                                  "0x0060"
#define IC2_TX_ABRT_SOURCE_inst                                                      0x0060
#define IC2_TX_ABRT_SOURCE_ABRT_SLVRD_INTX_shift                                     (15)
#define IC2_TX_ABRT_SOURCE_ABRT_SLVRD_INTX_mask                                      (0x00008000)
#define IC2_TX_ABRT_SOURCE_ABRT_SLVRD_INTX(data)                                     (0x00008000&((data)<<15))
#define IC2_TX_ABRT_SOURCE_ABRT_SLVRD_INTX_src(data)                                 ((0x00008000&(data))>>15)
#define IC2_TX_ABRT_SOURCE_get_ABRT_SLVRD_INTX(data)                                 ((0x00008000&(data))>>15)
#define IC2_TX_ABRT_SOURCE_ABRT_SLV_ARBLOST_shift                                    (14)
#define IC2_TX_ABRT_SOURCE_ABRT_SLV_ARBLOST_mask                                     (0x00004000)
#define IC2_TX_ABRT_SOURCE_ABRT_SLV_ARBLOST(data)                                    (0x00004000&((data)<<14))
#define IC2_TX_ABRT_SOURCE_ABRT_SLV_ARBLOST_src(data)                                ((0x00004000&(data))>>14)
#define IC2_TX_ABRT_SOURCE_get_ABRT_SLV_ARBLOST(data)                                ((0x00004000&(data))>>14)
#define IC2_TX_ABRT_SOURCE_ABRT_SLVFLUSH_TXFIFO_shift                                (13)
#define IC2_TX_ABRT_SOURCE_ABRT_SLVFLUSH_TXFIFO_mask                                 (0x00002000)
#define IC2_TX_ABRT_SOURCE_ABRT_SLVFLUSH_TXFIFO(data)                                (0x00002000&((data)<<13))
#define IC2_TX_ABRT_SOURCE_ABRT_SLVFLUSH_TXFIFO_src(data)                            ((0x00002000&(data))>>13)
#define IC2_TX_ABRT_SOURCE_get_ABRT_SLVFLUSH_TXFIFO(data)                            ((0x00002000&(data))>>13)
#define IC2_TX_ABRT_SOURCE_ARB_LOST_shift                                            (12)
#define IC2_TX_ABRT_SOURCE_ARB_LOST_mask                                             (0x00001000)
#define IC2_TX_ABRT_SOURCE_ARB_LOST(data)                                            (0x00001000&((data)<<12))
#define IC2_TX_ABRT_SOURCE_ARB_LOST_src(data)                                        ((0x00001000&(data))>>12)
#define IC2_TX_ABRT_SOURCE_get_ARB_LOST(data)                                        ((0x00001000&(data))>>12)
#define IC2_TX_ABRT_SOURCE_ARB_MASTER_DIS_shift                                      (11)
#define IC2_TX_ABRT_SOURCE_ARB_MASTER_DIS_mask                                       (0x00000800)
#define IC2_TX_ABRT_SOURCE_ARB_MASTER_DIS(data)                                      (0x00000800&((data)<<11))
#define IC2_TX_ABRT_SOURCE_ARB_MASTER_DIS_src(data)                                  ((0x00000800&(data))>>11)
#define IC2_TX_ABRT_SOURCE_get_ARB_MASTER_DIS(data)                                  ((0x00000800&(data))>>11)
#define IC2_TX_ABRT_SOURCE_ABRT_10B_RD_NORSTRT_shift                                 (10)
#define IC2_TX_ABRT_SOURCE_ABRT_10B_RD_NORSTRT_mask                                  (0x00000400)
#define IC2_TX_ABRT_SOURCE_ABRT_10B_RD_NORSTRT(data)                                 (0x00000400&((data)<<10))
#define IC2_TX_ABRT_SOURCE_ABRT_10B_RD_NORSTRT_src(data)                             ((0x00000400&(data))>>10)
#define IC2_TX_ABRT_SOURCE_get_ABRT_10B_RD_NORSTRT(data)                             ((0x00000400&(data))>>10)
#define IC2_TX_ABRT_SOURCE_ABRT_SBYTE_NORSTRT_shift                                  (9)
#define IC2_TX_ABRT_SOURCE_ABRT_SBYTE_NORSTRT_mask                                   (0x00000200)
#define IC2_TX_ABRT_SOURCE_ABRT_SBYTE_NORSTRT(data)                                  (0x00000200&((data)<<9))
#define IC2_TX_ABRT_SOURCE_ABRT_SBYTE_NORSTRT_src(data)                              ((0x00000200&(data))>>9)
#define IC2_TX_ABRT_SOURCE_get_ABRT_SBYTE_NORSTRT(data)                              ((0x00000200&(data))>>9)
#define IC2_TX_ABRT_SOURCE_ABRT_HS_NORSTRT_shift                                     (8)
#define IC2_TX_ABRT_SOURCE_ABRT_HS_NORSTRT_mask                                      (0x00000100)
#define IC2_TX_ABRT_SOURCE_ABRT_HS_NORSTRT(data)                                     (0x00000100&((data)<<8))
#define IC2_TX_ABRT_SOURCE_ABRT_HS_NORSTRT_src(data)                                 ((0x00000100&(data))>>8)
#define IC2_TX_ABRT_SOURCE_get_ABRT_HS_NORSTRT(data)                                 ((0x00000100&(data))>>8)
#define IC2_TX_ABRT_SOURCE_ABRT_SBYTE_ACKDET_shift                                   (7)
#define IC2_TX_ABRT_SOURCE_ABRT_SBYTE_ACKDET_mask                                    (0x00000080)
#define IC2_TX_ABRT_SOURCE_ABRT_SBYTE_ACKDET(data)                                   (0x00000080&((data)<<7))
#define IC2_TX_ABRT_SOURCE_ABRT_SBYTE_ACKDET_src(data)                               ((0x00000080&(data))>>7)
#define IC2_TX_ABRT_SOURCE_get_ABRT_SBYTE_ACKDET(data)                               ((0x00000080&(data))>>7)
#define IC2_TX_ABRT_SOURCE_ABRT_HS_ACKDET_shift                                      (6)
#define IC2_TX_ABRT_SOURCE_ABRT_HS_ACKDET_mask                                       (0x00000040)
#define IC2_TX_ABRT_SOURCE_ABRT_HS_ACKDET(data)                                      (0x00000040&((data)<<6))
#define IC2_TX_ABRT_SOURCE_ABRT_HS_ACKDET_src(data)                                  ((0x00000040&(data))>>6)
#define IC2_TX_ABRT_SOURCE_get_ABRT_HS_ACKDET(data)                                  ((0x00000040&(data))>>6)
#define IC2_TX_ABRT_SOURCE_ABRT_GCALL_READ_shift                                     (5)
#define IC2_TX_ABRT_SOURCE_ABRT_GCALL_READ_mask                                      (0x00000020)
#define IC2_TX_ABRT_SOURCE_ABRT_GCALL_READ(data)                                     (0x00000020&((data)<<5))
#define IC2_TX_ABRT_SOURCE_ABRT_GCALL_READ_src(data)                                 ((0x00000020&(data))>>5)
#define IC2_TX_ABRT_SOURCE_get_ABRT_GCALL_READ(data)                                 ((0x00000020&(data))>>5)
#define IC2_TX_ABRT_SOURCE_ABRT_GCALL_NOACK_shift                                    (4)
#define IC2_TX_ABRT_SOURCE_ABRT_GCALL_NOACK_mask                                     (0x00000010)
#define IC2_TX_ABRT_SOURCE_ABRT_GCALL_NOACK(data)                                    (0x00000010&((data)<<4))
#define IC2_TX_ABRT_SOURCE_ABRT_GCALL_NOACK_src(data)                                ((0x00000010&(data))>>4)
#define IC2_TX_ABRT_SOURCE_get_ABRT_GCALL_NOACK(data)                                ((0x00000010&(data))>>4)
#define IC2_TX_ABRT_SOURCE_ABRT_TXDATA_NOACK_shift                                   (3)
#define IC2_TX_ABRT_SOURCE_ABRT_TXDATA_NOACK_mask                                    (0x00000008)
#define IC2_TX_ABRT_SOURCE_ABRT_TXDATA_NOACK(data)                                   (0x00000008&((data)<<3))
#define IC2_TX_ABRT_SOURCE_ABRT_TXDATA_NOACK_src(data)                               ((0x00000008&(data))>>3)
#define IC2_TX_ABRT_SOURCE_get_ABRT_TXDATA_NOACK(data)                               ((0x00000008&(data))>>3)
#define IC2_TX_ABRT_SOURCE_ABRT_10ADDR2_NOACK_shift                                  (2)
#define IC2_TX_ABRT_SOURCE_ABRT_10ADDR2_NOACK_mask                                   (0x00000004)
#define IC2_TX_ABRT_SOURCE_ABRT_10ADDR2_NOACK(data)                                  (0x00000004&((data)<<2))
#define IC2_TX_ABRT_SOURCE_ABRT_10ADDR2_NOACK_src(data)                              ((0x00000004&(data))>>2)
#define IC2_TX_ABRT_SOURCE_get_ABRT_10ADDR2_NOACK(data)                              ((0x00000004&(data))>>2)
#define IC2_TX_ABRT_SOURCE_ABRT_10ADDR1_NOACK_shift                                  (1)
#define IC2_TX_ABRT_SOURCE_ABRT_10ADDR1_NOACK_mask                                   (0x00000002)
#define IC2_TX_ABRT_SOURCE_ABRT_10ADDR1_NOACK(data)                                  (0x00000002&((data)<<1))
#define IC2_TX_ABRT_SOURCE_ABRT_10ADDR1_NOACK_src(data)                              ((0x00000002&(data))>>1)
#define IC2_TX_ABRT_SOURCE_get_ABRT_10ADDR1_NOACK(data)                              ((0x00000002&(data))>>1)
#define IC2_TX_ABRT_SOURCE_ABRT_7B_ADDR_NOACK_shift                                  (0)
#define IC2_TX_ABRT_SOURCE_ABRT_7B_ADDR_NOACK_mask                                   (0x00000001)
#define IC2_TX_ABRT_SOURCE_ABRT_7B_ADDR_NOACK(data)                                  (0x00000001&((data)<<0))
#define IC2_TX_ABRT_SOURCE_ABRT_7B_ADDR_NOACK_src(data)                              ((0x00000001&(data))>>0)
#define IC2_TX_ABRT_SOURCE_get_ABRT_7B_ADDR_NOACK(data)                              ((0x00000001&(data))>>0)


#define IC2_DMA_CR                                                                   0x1801B588
#define IC2_DMA_CR_reg_addr                                                          "0xB801B588"
#define IC2_DMA_CR_reg                                                               0xB801B588
#define set_IC2_DMA_CR_reg(data)   (*((volatile unsigned int*) IC2_DMA_CR_reg)=data)
#define get_IC2_DMA_CR_reg   (*((volatile unsigned int*) IC2_DMA_CR_reg))
#define IC2_DMA_CR_inst_adr                                                          "0x0062"
#define IC2_DMA_CR_inst                                                              0x0062
#define IC2_DMA_CR_TDMAE_shift                                                       (1)
#define IC2_DMA_CR_TDMAE_mask                                                        (0x00000002)
#define IC2_DMA_CR_TDMAE(data)                                                       (0x00000002&((data)<<1))
#define IC2_DMA_CR_TDMAE_src(data)                                                   ((0x00000002&(data))>>1)
#define IC2_DMA_CR_get_TDMAE(data)                                                   ((0x00000002&(data))>>1)
#define IC2_DMA_CR_RDMAE_shift                                                       (0)
#define IC2_DMA_CR_RDMAE_mask                                                        (0x00000001)
#define IC2_DMA_CR_RDMAE(data)                                                       (0x00000001&((data)<<0))
#define IC2_DMA_CR_RDMAE_src(data)                                                   ((0x00000001&(data))>>0)
#define IC2_DMA_CR_get_RDMAE(data)                                                   ((0x00000001&(data))>>0)


#define IC2_DMA_TDLR                                                                 0x1801B58C
#define IC2_DMA_TDLR_reg_addr                                                        "0xB801B58C"
#define IC2_DMA_TDLR_reg                                                             0xB801B58C
#define set_IC2_DMA_TDLR_reg(data)   (*((volatile unsigned int*) IC2_DMA_TDLR_reg)=data)
#define get_IC2_DMA_TDLR_reg   (*((volatile unsigned int*) IC2_DMA_TDLR_reg))
#define IC2_DMA_TDLR_inst_adr                                                        "0x0063"
#define IC2_DMA_TDLR_inst                                                            0x0063
#define IC2_DMA_TDLR_DMATDL_shift                                                    (0)
#define IC2_DMA_TDLR_DMATDL_mask                                                     (0x00000007)
#define IC2_DMA_TDLR_DMATDL(data)                                                    (0x00000007&((data)<<0))
#define IC2_DMA_TDLR_DMATDL_src(data)                                                ((0x00000007&(data))>>0)
#define IC2_DMA_TDLR_get_DMATDL(data)                                                ((0x00000007&(data))>>0)


#define IC2_DMA_RDLR                                                                 0x1801B590
#define IC2_DMA_RDLR_reg_addr                                                        "0xB801B590"
#define IC2_DMA_RDLR_reg                                                             0xB801B590
#define set_IC2_DMA_RDLR_reg(data)   (*((volatile unsigned int*) IC2_DMA_RDLR_reg)=data)
#define get_IC2_DMA_RDLR_reg   (*((volatile unsigned int*) IC2_DMA_RDLR_reg))
#define IC2_DMA_RDLR_inst_adr                                                        "0x0064"
#define IC2_DMA_RDLR_inst                                                            0x0064
#define IC2_DMA_RDLR_DMARDL_shift                                                    (0)
#define IC2_DMA_RDLR_DMARDL_mask                                                     (0x0000000F)
#define IC2_DMA_RDLR_DMARDL(data)                                                    (0x0000000F&((data)<<0))
#define IC2_DMA_RDLR_DMARDL_src(data)                                                ((0x0000000F&(data))>>0)
#define IC2_DMA_RDLR_get_DMARDL(data)                                                ((0x0000000F&(data))>>0)


#define IC2_PRE_FIFO                                                                 0x1801B5A0
#define IC2_PRE_FIFO_reg_addr                                                        "0xB801B5A0"
#define IC2_PRE_FIFO_reg                                                             0xB801B5A0
#define set_IC2_PRE_FIFO_reg(data)   (*((volatile unsigned int*) IC2_PRE_FIFO_reg)=data)
#define get_IC2_PRE_FIFO_reg   (*((volatile unsigned int*) IC2_PRE_FIFO_reg))
#define IC2_PRE_FIFO_inst_adr                                                        "0x0068"
#define IC2_PRE_FIFO_inst                                                            0x0068
#define IC2_PRE_FIFO_Prefifoenable_shift                                             (19)
#define IC2_PRE_FIFO_Prefifoenable_mask                                              (0x00080000)
#define IC2_PRE_FIFO_Prefifoenable(data)                                             (0x00080000&((data)<<19))
#define IC2_PRE_FIFO_Prefifoenable_src(data)                                         ((0x00080000&(data))>>19)
#define IC2_PRE_FIFO_get_Prefifoenable(data)                                         ((0x00080000&(data))>>19)
#define IC2_PRE_FIFO_Prefifowritedatastart_shift                                     (18)
#define IC2_PRE_FIFO_Prefifowritedatastart_mask                                      (0x00040000)
#define IC2_PRE_FIFO_Prefifowritedatastart(data)                                     (0x00040000&((data)<<18))
#define IC2_PRE_FIFO_Prefifowritedatastart_src(data)                                 ((0x00040000&(data))>>18)
#define IC2_PRE_FIFO_get_Prefifowritedatastart(data)                                 ((0x00040000&(data))>>18)
#define IC2_PRE_FIFO_Prefifodoneinterruptenable_shift                                (17)
#define IC2_PRE_FIFO_Prefifodoneinterruptenable_mask                                 (0x00020000)
#define IC2_PRE_FIFO_Prefifodoneinterruptenable(data)                                (0x00020000&((data)<<17))
#define IC2_PRE_FIFO_Prefifodoneinterruptenable_src(data)                            ((0x00020000&(data))>>17)
#define IC2_PRE_FIFO_get_Prefifodoneinterruptenable(data)                            ((0x00020000&(data))>>17)
#define IC2_PRE_FIFO_Write_data_shift                                                (0)
#define IC2_PRE_FIFO_Write_data_mask                                                 (0x000000FF)
#define IC2_PRE_FIFO_Write_data(data)                                                (0x000000FF&((data)<<0))
#define IC2_PRE_FIFO_Write_data_src(data)                                            ((0x000000FF&(data))>>0)
#define IC2_PRE_FIFO_get_Write_data(data)                                            ((0x000000FF&(data))>>0)


#define IC2_COMP_PARAM_1                                                             0x1801B5F4
#define IC2_COMP_PARAM_1_reg_addr                                                    "0xB801B5F4"
#define IC2_COMP_PARAM_1_reg                                                         0xB801B5F4
#define set_IC2_COMP_PARAM_1_reg(data)   (*((volatile unsigned int*) IC2_COMP_PARAM_1_reg)=data)
#define get_IC2_COMP_PARAM_1_reg   (*((volatile unsigned int*) IC2_COMP_PARAM_1_reg))
#define IC2_COMP_PARAM_1_inst_adr                                                    "0x007D"
#define IC2_COMP_PARAM_1_inst                                                        0x007D
#define IC2_COMP_PARAM_1_TX_BUFFER_DEPTH_shift                                       (16)
#define IC2_COMP_PARAM_1_TX_BUFFER_DEPTH_mask                                        (0x00FF0000)
#define IC2_COMP_PARAM_1_TX_BUFFER_DEPTH(data)                                       (0x00FF0000&((data)<<16))
#define IC2_COMP_PARAM_1_TX_BUFFER_DEPTH_src(data)                                   ((0x00FF0000&(data))>>16)
#define IC2_COMP_PARAM_1_get_TX_BUFFER_DEPTH(data)                                   ((0x00FF0000&(data))>>16)
#define IC2_COMP_PARAM_1_RX_BUFFER_DEPTH_shift                                       (8)
#define IC2_COMP_PARAM_1_RX_BUFFER_DEPTH_mask                                        (0x0000FF00)
#define IC2_COMP_PARAM_1_RX_BUFFER_DEPTH(data)                                       (0x0000FF00&((data)<<8))
#define IC2_COMP_PARAM_1_RX_BUFFER_DEPTH_src(data)                                   ((0x0000FF00&(data))>>8)
#define IC2_COMP_PARAM_1_get_RX_BUFFER_DEPTH(data)                                   ((0x0000FF00&(data))>>8)
#define IC2_COMP_PARAM_1_ADD_ENCODED_PARAMS_shift                                    (7)
#define IC2_COMP_PARAM_1_ADD_ENCODED_PARAMS_mask                                     (0x00000080)
#define IC2_COMP_PARAM_1_ADD_ENCODED_PARAMS(data)                                    (0x00000080&((data)<<7))
#define IC2_COMP_PARAM_1_ADD_ENCODED_PARAMS_src(data)                                ((0x00000080&(data))>>7)
#define IC2_COMP_PARAM_1_get_ADD_ENCODED_PARAMS(data)                                ((0x00000080&(data))>>7)
#define IC2_COMP_PARAM_1_HAS_DMA_shift                                               (6)
#define IC2_COMP_PARAM_1_HAS_DMA_mask                                                (0x00000040)
#define IC2_COMP_PARAM_1_HAS_DMA(data)                                               (0x00000040&((data)<<6))
#define IC2_COMP_PARAM_1_HAS_DMA_src(data)                                           ((0x00000040&(data))>>6)
#define IC2_COMP_PARAM_1_get_HAS_DMA(data)                                           ((0x00000040&(data))>>6)
#define IC2_COMP_PARAM_1_INTR_IO_shift                                               (5)
#define IC2_COMP_PARAM_1_INTR_IO_mask                                                (0x00000020)
#define IC2_COMP_PARAM_1_INTR_IO(data)                                               (0x00000020&((data)<<5))
#define IC2_COMP_PARAM_1_INTR_IO_src(data)                                           ((0x00000020&(data))>>5)
#define IC2_COMP_PARAM_1_get_INTR_IO(data)                                           ((0x00000020&(data))>>5)
#define IC2_COMP_PARAM_1_HC_COUNT_VALUES_shift                                       (4)
#define IC2_COMP_PARAM_1_HC_COUNT_VALUES_mask                                        (0x00000010)
#define IC2_COMP_PARAM_1_HC_COUNT_VALUES(data)                                       (0x00000010&((data)<<4))
#define IC2_COMP_PARAM_1_HC_COUNT_VALUES_src(data)                                   ((0x00000010&(data))>>4)
#define IC2_COMP_PARAM_1_get_HC_COUNT_VALUES(data)                                   ((0x00000010&(data))>>4)
#define IC2_COMP_PARAM_1_MAX_SPEED_MODE_shift                                        (2)
#define IC2_COMP_PARAM_1_MAX_SPEED_MODE_mask                                         (0x0000000C)
#define IC2_COMP_PARAM_1_MAX_SPEED_MODE(data)                                        (0x0000000C&((data)<<2))
#define IC2_COMP_PARAM_1_MAX_SPEED_MODE_src(data)                                    ((0x0000000C&(data))>>2)
#define IC2_COMP_PARAM_1_get_MAX_SPEED_MODE(data)                                    ((0x0000000C&(data))>>2)
#define IC2_COMP_PARAM_1_APB_DATA_WIDTH_shift                                        (0)
#define IC2_COMP_PARAM_1_APB_DATA_WIDTH_mask                                         (0x00000003)
#define IC2_COMP_PARAM_1_APB_DATA_WIDTH(data)                                        (0x00000003&((data)<<0))
#define IC2_COMP_PARAM_1_APB_DATA_WIDTH_src(data)                                    ((0x00000003&(data))>>0)
#define IC2_COMP_PARAM_1_get_APB_DATA_WIDTH(data)                                    ((0x00000003&(data))>>0)


#define IC2_COMP_VERSION                                                             0x1801B5F8
#define IC2_COMP_VERSION_reg_addr                                                    "0xB801B5F8"
#define IC2_COMP_VERSION_reg                                                         0xB801B5F8
#define set_IC2_COMP_VERSION_reg(data)   (*((volatile unsigned int*) IC2_COMP_VERSION_reg)=data)
#define get_IC2_COMP_VERSION_reg   (*((volatile unsigned int*) IC2_COMP_VERSION_reg))
#define IC2_COMP_VERSION_inst_adr                                                    "0x007E"
#define IC2_COMP_VERSION_inst                                                        0x007E
#define IC2_COMP_VERSION_IC_COMP_VERSION_shift                                       (0)
#define IC2_COMP_VERSION_IC_COMP_VERSION_mask                                        (0xFFFFFFFF)
#define IC2_COMP_VERSION_IC_COMP_VERSION(data)                                       (0xFFFFFFFF&((data)<<0))
#define IC2_COMP_VERSION_IC_COMP_VERSION_src(data)                                   ((0xFFFFFFFF&(data))>>0)
#define IC2_COMP_VERSION_get_IC_COMP_VERSION(data)                                   ((0xFFFFFFFF&(data))>>0)


#define IC2_COMP_TYPE                                                                0x1801B5FC
#define IC2_COMP_TYPE_reg_addr                                                       "0xB801B5FC"
#define IC2_COMP_TYPE_reg                                                            0xB801B5FC
#define set_IC2_COMP_TYPE_reg(data)   (*((volatile unsigned int*) IC2_COMP_TYPE_reg)=data)
#define get_IC2_COMP_TYPE_reg   (*((volatile unsigned int*) IC2_COMP_TYPE_reg))
#define IC2_COMP_TYPE_inst_adr                                                       "0x007F"
#define IC2_COMP_TYPE_inst                                                           0x007F
#define IC2_COMP_TYPE_IC_COMP_TYPE_shift                                             (0)
#define IC2_COMP_TYPE_IC_COMP_TYPE_mask                                              (0xFFFFFFFF)
#define IC2_COMP_TYPE_IC_COMP_TYPE(data)                                             (0xFFFFFFFF&((data)<<0))
#define IC2_COMP_TYPE_IC_COMP_TYPE_src(data)                                         ((0xFFFFFFFF&(data))>>0)
#define IC2_COMP_TYPE_get_IC_COMP_TYPE(data)                                         ((0xFFFFFFFF&(data))>>0)


#define PWM_DB_CTRL                                                                  0x1801BC80
#define PWM_DB_CTRL_reg_addr                                                         "0xB801BC80"
#define PWM_DB_CTRL_reg                                                              0xB801BC80
#define set_PWM_DB_CTRL_reg(data)   (*((volatile unsigned int*) PWM_DB_CTRL_reg)=data)
#define get_PWM_DB_CTRL_reg   (*((volatile unsigned int*) PWM_DB_CTRL_reg))
#define PWM_DB_CTRL_inst_adr                                                         "0x0020"
#define PWM_DB_CTRL_inst                                                             0x0020
#define PWM_DB_CTRL_PWM_W_DB_EN_shift                                                (31)
#define PWM_DB_CTRL_PWM_W_DB_EN_mask                                                 (0x80000000)
#define PWM_DB_CTRL_PWM_W_DB_EN(data)                                                (0x80000000&((data)<<31))
#define PWM_DB_CTRL_PWM_W_DB_EN_src(data)                                            ((0x80000000&(data))>>31)
#define PWM_DB_CTRL_get_PWM_W_DB_EN(data)                                            ((0x80000000&(data))>>31)
#define PWM_DB_CTRL_PWM_DB_RSEL_shift                                                (30)
#define PWM_DB_CTRL_PWM_DB_RSEL_mask                                                 (0x40000000)
#define PWM_DB_CTRL_PWM_DB_RSEL(data)                                                (0x40000000&((data)<<30))
#define PWM_DB_CTRL_PWM_DB_RSEL_src(data)                                            ((0x40000000&(data))>>30)
#define PWM_DB_CTRL_get_PWM_DB_RSEL(data)                                            ((0x40000000&(data))>>30)
#define PWM_DB_CTRL_PWM_W_DB_WR_shift                                                (29)
#define PWM_DB_CTRL_PWM_W_DB_WR_mask                                                 (0x20000000)
#define PWM_DB_CTRL_PWM_W_DB_WR(data)                                                (0x20000000&((data)<<29))
#define PWM_DB_CTRL_PWM_W_DB_WR_src(data)                                            ((0x20000000&(data))>>29)
#define PWM_DB_CTRL_get_PWM_W_DB_WR(data)                                            ((0x20000000&(data))>>29)
#define PWM_DB_CTRL_PWM_W_DB_MODE_shift                                              (28)
#define PWM_DB_CTRL_PWM_W_DB_MODE_mask                                               (0x10000000)
#define PWM_DB_CTRL_PWM_W_DB_MODE(data)                                              (0x10000000&((data)<<28))
#define PWM_DB_CTRL_PWM_W_DB_MODE_src(data)                                          ((0x10000000&(data))>>28)
#define PWM_DB_CTRL_get_PWM_W_DB_MODE(data)                                          ((0x10000000&(data))>>28)


#define PWM0_CTRL                                                                    0x1801BC84
#define PWM0_CTRL_reg_addr                                                           "0xB801BC84"
#define PWM0_CTRL_reg                                                                0xB801BC84
#define set_PWM0_CTRL_reg(data)   (*((volatile unsigned int*) PWM0_CTRL_reg)=data)
#define get_PWM0_CTRL_reg   (*((volatile unsigned int*) PWM0_CTRL_reg))
#define PWM0_CTRL_inst_adr                                                           "0x0021"
#define PWM0_CTRL_inst                                                               0x0021
#define PWM0_CTRL_PWM0L_shift                                                        (31)
#define PWM0_CTRL_PWM0L_mask                                                         (0x80000000)
#define PWM0_CTRL_PWM0L(data)                                                        (0x80000000&((data)<<31))
#define PWM0_CTRL_PWM0L_src(data)                                                    ((0x80000000&(data))>>31)
#define PWM0_CTRL_get_PWM0L(data)                                                    ((0x80000000&(data))>>31)
#define PWM0_CTRL_PWM0_CK_shift                                                      (30)
#define PWM0_CTRL_PWM0_CK_mask                                                       (0x40000000)
#define PWM0_CTRL_PWM0_CK(data)                                                      (0x40000000&((data)<<30))
#define PWM0_CTRL_PWM0_CK_src(data)                                                  ((0x40000000&(data))>>30)
#define PWM0_CTRL_get_PWM0_CK(data)                                                  ((0x40000000&(data))>>30)
#define PWM0_CTRL_PWM0_EN_shift                                                      (29)
#define PWM0_CTRL_PWM0_EN_mask                                                       (0x20000000)
#define PWM0_CTRL_PWM0_EN(data)                                                      (0x20000000&((data)<<29))
#define PWM0_CTRL_PWM0_EN_src(data)                                                  ((0x20000000&(data))>>29)
#define PWM0_CTRL_get_PWM0_EN(data)                                                  ((0x20000000&(data))>>29)
#define PWM0_CTRL_PWM0_VS_RST_EN_shift                                               (28)
#define PWM0_CTRL_PWM0_VS_RST_EN_mask                                                (0x10000000)
#define PWM0_CTRL_PWM0_VS_RST_EN(data)                                               (0x10000000&((data)<<28))
#define PWM0_CTRL_PWM0_VS_RST_EN_src(data)                                           ((0x10000000&(data))>>28)
#define PWM0_CTRL_get_PWM0_VS_RST_EN(data)                                           ((0x10000000&(data))>>28)
#define PWM0_CTRL_PWM0_DUT_8B_shift                                                  (27)
#define PWM0_CTRL_PWM0_DUT_8B_mask                                                   (0x08000000)
#define PWM0_CTRL_PWM0_DUT_8B(data)                                                  (0x08000000&((data)<<27))
#define PWM0_CTRL_PWM0_DUT_8B_src(data)                                              ((0x08000000&(data))>>27)
#define PWM0_CTRL_get_PWM0_DUT_8B(data)                                              ((0x08000000&(data))>>27)
#define PWM0_CTRL_PWM_WIDTH_SEL_shift                                                (0)
#define PWM0_CTRL_PWM_WIDTH_SEL_mask                                                 (0x00000001)
#define PWM0_CTRL_PWM_WIDTH_SEL(data)                                                (0x00000001&((data)<<0))
#define PWM0_CTRL_PWM_WIDTH_SEL_src(data)                                            ((0x00000001&(data))>>0)
#define PWM0_CTRL_get_PWM_WIDTH_SEL(data)                                            ((0x00000001&(data))>>0)


#define PWM0_TIMING_CTRL                                                             0x1801BC88
#define PWM0_TIMING_CTRL_reg_addr                                                    "0xB801BC88"
#define PWM0_TIMING_CTRL_reg                                                         0xB801BC88
#define set_PWM0_TIMING_CTRL_reg(data)   (*((volatile unsigned int*) PWM0_TIMING_CTRL_reg)=data)
#define get_PWM0_TIMING_CTRL_reg   (*((volatile unsigned int*) PWM0_TIMING_CTRL_reg))
#define PWM0_TIMING_CTRL_inst_adr                                                    "0x0022"
#define PWM0_TIMING_CTRL_inst                                                        0x0022
#define PWM0_TIMING_CTRL_PWM0_CNT_MODE_shift                                         (31)
#define PWM0_TIMING_CTRL_PWM0_CNT_MODE_mask                                          (0x80000000)
#define PWM0_TIMING_CTRL_PWM0_CNT_MODE(data)                                         (0x80000000&((data)<<31))
#define PWM0_TIMING_CTRL_PWM0_CNT_MODE_src(data)                                     ((0x80000000&(data))>>31)
#define PWM0_TIMING_CTRL_get_PWM0_CNT_MODE(data)                                     ((0x80000000&(data))>>31)
#define PWM0_TIMING_CTRL_PWM0_CK_SEL_HS_shift                                        (30)
#define PWM0_TIMING_CTRL_PWM0_CK_SEL_HS_mask                                         (0x40000000)
#define PWM0_TIMING_CTRL_PWM0_CK_SEL_HS(data)                                        (0x40000000&((data)<<30))
#define PWM0_TIMING_CTRL_PWM0_CK_SEL_HS_src(data)                                    ((0x40000000&(data))>>30)
#define PWM0_TIMING_CTRL_get_PWM0_CK_SEL_HS(data)                                    ((0x40000000&(data))>>30)
#define PWM0_TIMING_CTRL_PWM0_CK_SEL_shift                                           (29)
#define PWM0_TIMING_CTRL_PWM0_CK_SEL_mask                                            (0x20000000)
#define PWM0_TIMING_CTRL_PWM0_CK_SEL(data)                                           (0x20000000&((data)<<29))
#define PWM0_TIMING_CTRL_PWM0_CK_SEL_src(data)                                       ((0x20000000&(data))>>29)
#define PWM0_TIMING_CTRL_get_PWM0_CK_SEL(data)                                       ((0x20000000&(data))>>29)
#define PWM0_TIMING_CTRL_PWM0_CYCLE_MAX_shift                                        (24)
#define PWM0_TIMING_CTRL_PWM0_CYCLE_MAX_mask                                         (0x0F000000)
#define PWM0_TIMING_CTRL_PWM0_CYCLE_MAX(data)                                        (0x0F000000&((data)<<24))
#define PWM0_TIMING_CTRL_PWM0_CYCLE_MAX_src(data)                                    ((0x0F000000&(data))>>24)
#define PWM0_TIMING_CTRL_get_PWM0_CYCLE_MAX(data)                                    ((0x0F000000&(data))>>24)
#define PWM0_TIMING_CTRL_PWM0_M_shift                                                (12)
#define PWM0_TIMING_CTRL_PWM0_M_mask                                                 (0x00003000)
#define PWM0_TIMING_CTRL_PWM0_M(data)                                                (0x00003000&((data)<<12))
#define PWM0_TIMING_CTRL_PWM0_M_src(data)                                            ((0x00003000&(data))>>12)
#define PWM0_TIMING_CTRL_get_PWM0_M(data)                                            ((0x00003000&(data))>>12)
#define PWM0_TIMING_CTRL_PWM0_N_shift                                                (0)
#define PWM0_TIMING_CTRL_PWM0_N_mask                                                 (0x00000FFF)
#define PWM0_TIMING_CTRL_PWM0_N(data)                                                (0x00000FFF&((data)<<0))
#define PWM0_TIMING_CTRL_PWM0_N_src(data)                                            ((0x00000FFF&(data))>>0)
#define PWM0_TIMING_CTRL_get_PWM0_N(data)                                            ((0x00000FFF&(data))>>0)


#define PWM0_DUTY_SET                                                                0x1801BC8C
#define PWM0_DUTY_SET_reg_addr                                                       "0xB801BC8C"
#define PWM0_DUTY_SET_reg                                                            0xB801BC8C
#define set_PWM0_DUTY_SET_reg(data)   (*((volatile unsigned int*) PWM0_DUTY_SET_reg)=data)
#define get_PWM0_DUTY_SET_reg   (*((volatile unsigned int*) PWM0_DUTY_SET_reg))
#define PWM0_DUTY_SET_inst_adr                                                       "0x0023"
#define PWM0_DUTY_SET_inst                                                           0x0023
#define PWM0_DUTY_SET_PWM0_DUT_shift                                                 (16)
#define PWM0_DUTY_SET_PWM0_DUT_mask                                                  (0x0FFF0000)
#define PWM0_DUTY_SET_PWM0_DUT(data)                                                 (0x0FFF0000&((data)<<16))
#define PWM0_DUTY_SET_PWM0_DUT_src(data)                                             ((0x0FFF0000&(data))>>16)
#define PWM0_DUTY_SET_get_PWM0_DUT(data)                                             ((0x0FFF0000&(data))>>16)
#define PWM0_DUTY_SET_PWM0_TOTALCNT_shift                                            (0)
#define PWM0_DUTY_SET_PWM0_TOTALCNT_mask                                             (0x00000FFF)
#define PWM0_DUTY_SET_PWM0_TOTALCNT(data)                                            (0x00000FFF&((data)<<0))
#define PWM0_DUTY_SET_PWM0_TOTALCNT_src(data)                                        ((0x00000FFF&(data))>>0)
#define PWM0_DUTY_SET_get_PWM0_TOTALCNT(data)                                        ((0x00000FFF&(data))>>0)


#define PWM1_CTRL                                                                    0x1801BC90
#define PWM1_CTRL_reg_addr                                                           "0xB801BC90"
#define PWM1_CTRL_reg                                                                0xB801BC90
#define set_PWM1_CTRL_reg(data)   (*((volatile unsigned int*) PWM1_CTRL_reg)=data)
#define get_PWM1_CTRL_reg   (*((volatile unsigned int*) PWM1_CTRL_reg))
#define PWM1_CTRL_inst_adr                                                           "0x0024"
#define PWM1_CTRL_inst                                                               0x0024
#define PWM1_CTRL_PWM1L_shift                                                        (31)
#define PWM1_CTRL_PWM1L_mask                                                         (0x80000000)
#define PWM1_CTRL_PWM1L(data)                                                        (0x80000000&((data)<<31))
#define PWM1_CTRL_PWM1L_src(data)                                                    ((0x80000000&(data))>>31)
#define PWM1_CTRL_get_PWM1L(data)                                                    ((0x80000000&(data))>>31)
#define PWM1_CTRL_PWM1_CK_shift                                                      (30)
#define PWM1_CTRL_PWM1_CK_mask                                                       (0x40000000)
#define PWM1_CTRL_PWM1_CK(data)                                                      (0x40000000&((data)<<30))
#define PWM1_CTRL_PWM1_CK_src(data)                                                  ((0x40000000&(data))>>30)
#define PWM1_CTRL_get_PWM1_CK(data)                                                  ((0x40000000&(data))>>30)
#define PWM1_CTRL_PWM1_EN_shift                                                      (29)
#define PWM1_CTRL_PWM1_EN_mask                                                       (0x20000000)
#define PWM1_CTRL_PWM1_EN(data)                                                      (0x20000000&((data)<<29))
#define PWM1_CTRL_PWM1_EN_src(data)                                                  ((0x20000000&(data))>>29)
#define PWM1_CTRL_get_PWM1_EN(data)                                                  ((0x20000000&(data))>>29)
#define PWM1_CTRL_PWM1_VS_RST_EN_shift                                               (28)
#define PWM1_CTRL_PWM1_VS_RST_EN_mask                                                (0x10000000)
#define PWM1_CTRL_PWM1_VS_RST_EN(data)                                               (0x10000000&((data)<<28))
#define PWM1_CTRL_PWM1_VS_RST_EN_src(data)                                           ((0x10000000&(data))>>28)
#define PWM1_CTRL_get_PWM1_VS_RST_EN(data)                                           ((0x10000000&(data))>>28)
#define PWM1_CTRL_PWM1_DUT_8B_shift                                                  (27)
#define PWM1_CTRL_PWM1_DUT_8B_mask                                                   (0x08000000)
#define PWM1_CTRL_PWM1_DUT_8B(data)                                                  (0x08000000&((data)<<27))
#define PWM1_CTRL_PWM1_DUT_8B_src(data)                                              ((0x08000000&(data))>>27)
#define PWM1_CTRL_get_PWM1_DUT_8B(data)                                              ((0x08000000&(data))>>27)


#define PWM1_TIMING_CTRL                                                             0x1801BC94
#define PWM1_TIMING_CTRL_reg_addr                                                    "0xB801BC94"
#define PWM1_TIMING_CTRL_reg                                                         0xB801BC94
#define set_PWM1_TIMING_CTRL_reg(data)   (*((volatile unsigned int*) PWM1_TIMING_CTRL_reg)=data)
#define get_PWM1_TIMING_CTRL_reg   (*((volatile unsigned int*) PWM1_TIMING_CTRL_reg))
#define PWM1_TIMING_CTRL_inst_adr                                                    "0x0025"
#define PWM1_TIMING_CTRL_inst                                                        0x0025
#define PWM1_TIMING_CTRL_PWM1_CNT_MODE_shift                                         (31)
#define PWM1_TIMING_CTRL_PWM1_CNT_MODE_mask                                          (0x80000000)
#define PWM1_TIMING_CTRL_PWM1_CNT_MODE(data)                                         (0x80000000&((data)<<31))
#define PWM1_TIMING_CTRL_PWM1_CNT_MODE_src(data)                                     ((0x80000000&(data))>>31)
#define PWM1_TIMING_CTRL_get_PWM1_CNT_MODE(data)                                     ((0x80000000&(data))>>31)
#define PWM1_TIMING_CTRL_PWM1_CK_SEL_HS_shift                                        (30)
#define PWM1_TIMING_CTRL_PWM1_CK_SEL_HS_mask                                         (0x40000000)
#define PWM1_TIMING_CTRL_PWM1_CK_SEL_HS(data)                                        (0x40000000&((data)<<30))
#define PWM1_TIMING_CTRL_PWM1_CK_SEL_HS_src(data)                                    ((0x40000000&(data))>>30)
#define PWM1_TIMING_CTRL_get_PWM1_CK_SEL_HS(data)                                    ((0x40000000&(data))>>30)
#define PWM1_TIMING_CTRL_PWM1_CK_SEL_shift                                           (29)
#define PWM1_TIMING_CTRL_PWM1_CK_SEL_mask                                            (0x20000000)
#define PWM1_TIMING_CTRL_PWM1_CK_SEL(data)                                           (0x20000000&((data)<<29))
#define PWM1_TIMING_CTRL_PWM1_CK_SEL_src(data)                                       ((0x20000000&(data))>>29)
#define PWM1_TIMING_CTRL_get_PWM1_CK_SEL(data)                                       ((0x20000000&(data))>>29)
#define PWM1_TIMING_CTRL_PWM1_CYCLE_MAX_shift                                        (24)
#define PWM1_TIMING_CTRL_PWM1_CYCLE_MAX_mask                                         (0x0F000000)
#define PWM1_TIMING_CTRL_PWM1_CYCLE_MAX(data)                                        (0x0F000000&((data)<<24))
#define PWM1_TIMING_CTRL_PWM1_CYCLE_MAX_src(data)                                    ((0x0F000000&(data))>>24)
#define PWM1_TIMING_CTRL_get_PWM1_CYCLE_MAX(data)                                    ((0x0F000000&(data))>>24)
#define PWM1_TIMING_CTRL_PWM1_M_shift                                                (12)
#define PWM1_TIMING_CTRL_PWM1_M_mask                                                 (0x00003000)
#define PWM1_TIMING_CTRL_PWM1_M(data)                                                (0x00003000&((data)<<12))
#define PWM1_TIMING_CTRL_PWM1_M_src(data)                                            ((0x00003000&(data))>>12)
#define PWM1_TIMING_CTRL_get_PWM1_M(data)                                            ((0x00003000&(data))>>12)
#define PWM1_TIMING_CTRL_PWM1_N_shift                                                (0)
#define PWM1_TIMING_CTRL_PWM1_N_mask                                                 (0x00000FFF)
#define PWM1_TIMING_CTRL_PWM1_N(data)                                                (0x00000FFF&((data)<<0))
#define PWM1_TIMING_CTRL_PWM1_N_src(data)                                            ((0x00000FFF&(data))>>0)
#define PWM1_TIMING_CTRL_get_PWM1_N(data)                                            ((0x00000FFF&(data))>>0)


#define PWM1_DUTY_SET                                                                0x1801BC98
#define PWM1_DUTY_SET_reg_addr                                                       "0xB801BC98"
#define PWM1_DUTY_SET_reg                                                            0xB801BC98
#define set_PWM1_DUTY_SET_reg(data)   (*((volatile unsigned int*) PWM1_DUTY_SET_reg)=data)
#define get_PWM1_DUTY_SET_reg   (*((volatile unsigned int*) PWM1_DUTY_SET_reg))
#define PWM1_DUTY_SET_inst_adr                                                       "0x0026"
#define PWM1_DUTY_SET_inst                                                           0x0026
#define PWM1_DUTY_SET_PWM1_DUT_shift                                                 (16)
#define PWM1_DUTY_SET_PWM1_DUT_mask                                                  (0x0FFF0000)
#define PWM1_DUTY_SET_PWM1_DUT(data)                                                 (0x0FFF0000&((data)<<16))
#define PWM1_DUTY_SET_PWM1_DUT_src(data)                                             ((0x0FFF0000&(data))>>16)
#define PWM1_DUTY_SET_get_PWM1_DUT(data)                                             ((0x0FFF0000&(data))>>16)
#define PWM1_DUTY_SET_PWM1_TOTALCNT_shift                                            (0)
#define PWM1_DUTY_SET_PWM1_TOTALCNT_mask                                             (0x00000FFF)
#define PWM1_DUTY_SET_PWM1_TOTALCNT(data)                                            (0x00000FFF&((data)<<0))
#define PWM1_DUTY_SET_PWM1_TOTALCNT_src(data)                                        ((0x00000FFF&(data))>>0)
#define PWM1_DUTY_SET_get_PWM1_TOTALCNT(data)                                        ((0x00000FFF&(data))>>0)


#define PWM2_CTRL                                                                    0x1801BC9C
#define PWM2_CTRL_reg_addr                                                           "0xB801BC9C"
#define PWM2_CTRL_reg                                                                0xB801BC9C
#define set_PWM2_CTRL_reg(data)   (*((volatile unsigned int*) PWM2_CTRL_reg)=data)
#define get_PWM2_CTRL_reg   (*((volatile unsigned int*) PWM2_CTRL_reg))
#define PWM2_CTRL_inst_adr                                                           "0x0027"
#define PWM2_CTRL_inst                                                               0x0027
#define PWM2_CTRL_PWM2L_shift                                                        (31)
#define PWM2_CTRL_PWM2L_mask                                                         (0x80000000)
#define PWM2_CTRL_PWM2L(data)                                                        (0x80000000&((data)<<31))
#define PWM2_CTRL_PWM2L_src(data)                                                    ((0x80000000&(data))>>31)
#define PWM2_CTRL_get_PWM2L(data)                                                    ((0x80000000&(data))>>31)
#define PWM2_CTRL_PWM2_CK_shift                                                      (30)
#define PWM2_CTRL_PWM2_CK_mask                                                       (0x40000000)
#define PWM2_CTRL_PWM2_CK(data)                                                      (0x40000000&((data)<<30))
#define PWM2_CTRL_PWM2_CK_src(data)                                                  ((0x40000000&(data))>>30)
#define PWM2_CTRL_get_PWM2_CK(data)                                                  ((0x40000000&(data))>>30)
#define PWM2_CTRL_PWM2_EN_shift                                                      (29)
#define PWM2_CTRL_PWM2_EN_mask                                                       (0x20000000)
#define PWM2_CTRL_PWM2_EN(data)                                                      (0x20000000&((data)<<29))
#define PWM2_CTRL_PWM2_EN_src(data)                                                  ((0x20000000&(data))>>29)
#define PWM2_CTRL_get_PWM2_EN(data)                                                  ((0x20000000&(data))>>29)
#define PWM2_CTRL_PWM2_VS_RST_EN_shift                                               (28)
#define PWM2_CTRL_PWM2_VS_RST_EN_mask                                                (0x10000000)
#define PWM2_CTRL_PWM2_VS_RST_EN(data)                                               (0x10000000&((data)<<28))
#define PWM2_CTRL_PWM2_VS_RST_EN_src(data)                                           ((0x10000000&(data))>>28)
#define PWM2_CTRL_get_PWM2_VS_RST_EN(data)                                           ((0x10000000&(data))>>28)
#define PWM2_CTRL_PWM2_DUT_8B_shift                                                  (27)
#define PWM2_CTRL_PWM2_DUT_8B_mask                                                   (0x08000000)
#define PWM2_CTRL_PWM2_DUT_8B(data)                                                  (0x08000000&((data)<<27))
#define PWM2_CTRL_PWM2_DUT_8B_src(data)                                              ((0x08000000&(data))>>27)
#define PWM2_CTRL_get_PWM2_DUT_8B(data)                                              ((0x08000000&(data))>>27)


#define PWM2_TIMING_CTRL                                                             0x1801BCA0
#define PWM2_TIMING_CTRL_reg_addr                                                    "0xB801BCA0"
#define PWM2_TIMING_CTRL_reg                                                         0xB801BCA0
#define set_PWM2_TIMING_CTRL_reg(data)   (*((volatile unsigned int*) PWM2_TIMING_CTRL_reg)=data)
#define get_PWM2_TIMING_CTRL_reg   (*((volatile unsigned int*) PWM2_TIMING_CTRL_reg))
#define PWM2_TIMING_CTRL_inst_adr                                                    "0x0028"
#define PWM2_TIMING_CTRL_inst                                                        0x0028
#define PWM2_TIMING_CTRL_PWM2_CNT_MODE_shift                                         (31)
#define PWM2_TIMING_CTRL_PWM2_CNT_MODE_mask                                          (0x80000000)
#define PWM2_TIMING_CTRL_PWM2_CNT_MODE(data)                                         (0x80000000&((data)<<31))
#define PWM2_TIMING_CTRL_PWM2_CNT_MODE_src(data)                                     ((0x80000000&(data))>>31)
#define PWM2_TIMING_CTRL_get_PWM2_CNT_MODE(data)                                     ((0x80000000&(data))>>31)
#define PWM2_TIMING_CTRL_PWM2_CK_SEL_HS_shift                                        (30)
#define PWM2_TIMING_CTRL_PWM2_CK_SEL_HS_mask                                         (0x40000000)
#define PWM2_TIMING_CTRL_PWM2_CK_SEL_HS(data)                                        (0x40000000&((data)<<30))
#define PWM2_TIMING_CTRL_PWM2_CK_SEL_HS_src(data)                                    ((0x40000000&(data))>>30)
#define PWM2_TIMING_CTRL_get_PWM2_CK_SEL_HS(data)                                    ((0x40000000&(data))>>30)
#define PWM2_TIMING_CTRL_PWM2_CK_SEL_shift                                           (29)
#define PWM2_TIMING_CTRL_PWM2_CK_SEL_mask                                            (0x20000000)
#define PWM2_TIMING_CTRL_PWM2_CK_SEL(data)                                           (0x20000000&((data)<<29))
#define PWM2_TIMING_CTRL_PWM2_CK_SEL_src(data)                                       ((0x20000000&(data))>>29)
#define PWM2_TIMING_CTRL_get_PWM2_CK_SEL(data)                                       ((0x20000000&(data))>>29)
#define PWM2_TIMING_CTRL_PWM2_CYCLE_MAX_shift                                        (24)
#define PWM2_TIMING_CTRL_PWM2_CYCLE_MAX_mask                                         (0x0F000000)
#define PWM2_TIMING_CTRL_PWM2_CYCLE_MAX(data)                                        (0x0F000000&((data)<<24))
#define PWM2_TIMING_CTRL_PWM2_CYCLE_MAX_src(data)                                    ((0x0F000000&(data))>>24)
#define PWM2_TIMING_CTRL_get_PWM2_CYCLE_MAX(data)                                    ((0x0F000000&(data))>>24)
#define PWM2_TIMING_CTRL_PWM2_M_shift                                                (12)
#define PWM2_TIMING_CTRL_PWM2_M_mask                                                 (0x00003000)
#define PWM2_TIMING_CTRL_PWM2_M(data)                                                (0x00003000&((data)<<12))
#define PWM2_TIMING_CTRL_PWM2_M_src(data)                                            ((0x00003000&(data))>>12)
#define PWM2_TIMING_CTRL_get_PWM2_M(data)                                            ((0x00003000&(data))>>12)
#define PWM2_TIMING_CTRL_PWM2_N_shift                                                (0)
#define PWM2_TIMING_CTRL_PWM2_N_mask                                                 (0x00000FFF)
#define PWM2_TIMING_CTRL_PWM2_N(data)                                                (0x00000FFF&((data)<<0))
#define PWM2_TIMING_CTRL_PWM2_N_src(data)                                            ((0x00000FFF&(data))>>0)
#define PWM2_TIMING_CTRL_get_PWM2_N(data)                                            ((0x00000FFF&(data))>>0)


#define PWM2_DUTY_SET                                                                0x1801BCA4
#define PWM2_DUTY_SET_reg_addr                                                       "0xB801BCA4"
#define PWM2_DUTY_SET_reg                                                            0xB801BCA4
#define set_PWM2_DUTY_SET_reg(data)   (*((volatile unsigned int*) PWM2_DUTY_SET_reg)=data)
#define get_PWM2_DUTY_SET_reg   (*((volatile unsigned int*) PWM2_DUTY_SET_reg))
#define PWM2_DUTY_SET_inst_adr                                                       "0x0029"
#define PWM2_DUTY_SET_inst                                                           0x0029
#define PWM2_DUTY_SET_PWM2_DUT_shift                                                 (16)
#define PWM2_DUTY_SET_PWM2_DUT_mask                                                  (0x0FFF0000)
#define PWM2_DUTY_SET_PWM2_DUT(data)                                                 (0x0FFF0000&((data)<<16))
#define PWM2_DUTY_SET_PWM2_DUT_src(data)                                             ((0x0FFF0000&(data))>>16)
#define PWM2_DUTY_SET_get_PWM2_DUT(data)                                             ((0x0FFF0000&(data))>>16)
#define PWM2_DUTY_SET_PWM2_TOTALCNT_shift                                            (0)
#define PWM2_DUTY_SET_PWM2_TOTALCNT_mask                                             (0x00000FFF)
#define PWM2_DUTY_SET_PWM2_TOTALCNT(data)                                            (0x00000FFF&((data)<<0))
#define PWM2_DUTY_SET_PWM2_TOTALCNT_src(data)                                        ((0x00000FFF&(data))>>0)
#define PWM2_DUTY_SET_get_PWM2_TOTALCNT(data)                                        ((0x00000FFF&(data))>>0)


#define PWM3_CTRL                                                                    0x1801BCA8
#define PWM3_CTRL_reg_addr                                                           "0xB801BCA8"
#define PWM3_CTRL_reg                                                                0xB801BCA8
#define set_PWM3_CTRL_reg(data)   (*((volatile unsigned int*) PWM3_CTRL_reg)=data)
#define get_PWM3_CTRL_reg   (*((volatile unsigned int*) PWM3_CTRL_reg))
#define PWM3_CTRL_inst_adr                                                           "0x002A"
#define PWM3_CTRL_inst                                                               0x002A
#define PWM3_CTRL_PWM3L_shift                                                        (31)
#define PWM3_CTRL_PWM3L_mask                                                         (0x80000000)
#define PWM3_CTRL_PWM3L(data)                                                        (0x80000000&((data)<<31))
#define PWM3_CTRL_PWM3L_src(data)                                                    ((0x80000000&(data))>>31)
#define PWM3_CTRL_get_PWM3L(data)                                                    ((0x80000000&(data))>>31)
#define PWM3_CTRL_PWM3_CK_shift                                                      (30)
#define PWM3_CTRL_PWM3_CK_mask                                                       (0x40000000)
#define PWM3_CTRL_PWM3_CK(data)                                                      (0x40000000&((data)<<30))
#define PWM3_CTRL_PWM3_CK_src(data)                                                  ((0x40000000&(data))>>30)
#define PWM3_CTRL_get_PWM3_CK(data)                                                  ((0x40000000&(data))>>30)
#define PWM3_CTRL_PWM3_EN_shift                                                      (29)
#define PWM3_CTRL_PWM3_EN_mask                                                       (0x20000000)
#define PWM3_CTRL_PWM3_EN(data)                                                      (0x20000000&((data)<<29))
#define PWM3_CTRL_PWM3_EN_src(data)                                                  ((0x20000000&(data))>>29)
#define PWM3_CTRL_get_PWM3_EN(data)                                                  ((0x20000000&(data))>>29)
#define PWM3_CTRL_PWM3_VS_RST_EN_shift                                               (28)
#define PWM3_CTRL_PWM3_VS_RST_EN_mask                                                (0x10000000)
#define PWM3_CTRL_PWM3_VS_RST_EN(data)                                               (0x10000000&((data)<<28))
#define PWM3_CTRL_PWM3_VS_RST_EN_src(data)                                           ((0x10000000&(data))>>28)
#define PWM3_CTRL_get_PWM3_VS_RST_EN(data)                                           ((0x10000000&(data))>>28)
#define PWM3_CTRL_PWM3_DUT_8B_shift                                                  (27)
#define PWM3_CTRL_PWM3_DUT_8B_mask                                                   (0x08000000)
#define PWM3_CTRL_PWM3_DUT_8B(data)                                                  (0x08000000&((data)<<27))
#define PWM3_CTRL_PWM3_DUT_8B_src(data)                                              ((0x08000000&(data))>>27)
#define PWM3_CTRL_get_PWM3_DUT_8B(data)                                              ((0x08000000&(data))>>27)


#define PWM3_TIMING_CTRL                                                             0x1801BCAC
#define PWM3_TIMING_CTRL_reg_addr                                                    "0xB801BCAC"
#define PWM3_TIMING_CTRL_reg                                                         0xB801BCAC
#define set_PWM3_TIMING_CTRL_reg(data)   (*((volatile unsigned int*) PWM3_TIMING_CTRL_reg)=data)
#define get_PWM3_TIMING_CTRL_reg   (*((volatile unsigned int*) PWM3_TIMING_CTRL_reg))
#define PWM3_TIMING_CTRL_inst_adr                                                    "0x002B"
#define PWM3_TIMING_CTRL_inst                                                        0x002B
#define PWM3_TIMING_CTRL_PWM3_CNT_MODE_shift                                         (31)
#define PWM3_TIMING_CTRL_PWM3_CNT_MODE_mask                                          (0x80000000)
#define PWM3_TIMING_CTRL_PWM3_CNT_MODE(data)                                         (0x80000000&((data)<<31))
#define PWM3_TIMING_CTRL_PWM3_CNT_MODE_src(data)                                     ((0x80000000&(data))>>31)
#define PWM3_TIMING_CTRL_get_PWM3_CNT_MODE(data)                                     ((0x80000000&(data))>>31)
#define PWM3_TIMING_CTRL_PWM3_CK_SEL_HS_shift                                        (30)
#define PWM3_TIMING_CTRL_PWM3_CK_SEL_HS_mask                                         (0x40000000)
#define PWM3_TIMING_CTRL_PWM3_CK_SEL_HS(data)                                        (0x40000000&((data)<<30))
#define PWM3_TIMING_CTRL_PWM3_CK_SEL_HS_src(data)                                    ((0x40000000&(data))>>30)
#define PWM3_TIMING_CTRL_get_PWM3_CK_SEL_HS(data)                                    ((0x40000000&(data))>>30)
#define PWM3_TIMING_CTRL_PWM3_CK_SEL_shift                                           (29)
#define PWM3_TIMING_CTRL_PWM3_CK_SEL_mask                                            (0x20000000)
#define PWM3_TIMING_CTRL_PWM3_CK_SEL(data)                                           (0x20000000&((data)<<29))
#define PWM3_TIMING_CTRL_PWM3_CK_SEL_src(data)                                       ((0x20000000&(data))>>29)
#define PWM3_TIMING_CTRL_get_PWM3_CK_SEL(data)                                       ((0x20000000&(data))>>29)
#define PWM3_TIMING_CTRL_PWM3_CYCLE_MAX_shift                                        (24)
#define PWM3_TIMING_CTRL_PWM3_CYCLE_MAX_mask                                         (0x0F000000)
#define PWM3_TIMING_CTRL_PWM3_CYCLE_MAX(data)                                        (0x0F000000&((data)<<24))
#define PWM3_TIMING_CTRL_PWM3_CYCLE_MAX_src(data)                                    ((0x0F000000&(data))>>24)
#define PWM3_TIMING_CTRL_get_PWM3_CYCLE_MAX(data)                                    ((0x0F000000&(data))>>24)
#define PWM3_TIMING_CTRL_PWM3_M_shift                                                (12)
#define PWM3_TIMING_CTRL_PWM3_M_mask                                                 (0x00003000)
#define PWM3_TIMING_CTRL_PWM3_M(data)                                                (0x00003000&((data)<<12))
#define PWM3_TIMING_CTRL_PWM3_M_src(data)                                            ((0x00003000&(data))>>12)
#define PWM3_TIMING_CTRL_get_PWM3_M(data)                                            ((0x00003000&(data))>>12)
#define PWM3_TIMING_CTRL_PWM3_N_shift                                                (0)
#define PWM3_TIMING_CTRL_PWM3_N_mask                                                 (0x00000FFF)
#define PWM3_TIMING_CTRL_PWM3_N(data)                                                (0x00000FFF&((data)<<0))
#define PWM3_TIMING_CTRL_PWM3_N_src(data)                                            ((0x00000FFF&(data))>>0)
#define PWM3_TIMING_CTRL_get_PWM3_N(data)                                            ((0x00000FFF&(data))>>0)


#define PWM3_DUTY_SET                                                                0x1801BCB0
#define PWM3_DUTY_SET_reg_addr                                                       "0xB801BCB0"
#define PWM3_DUTY_SET_reg                                                            0xB801BCB0
#define set_PWM3_DUTY_SET_reg(data)   (*((volatile unsigned int*) PWM3_DUTY_SET_reg)=data)
#define get_PWM3_DUTY_SET_reg   (*((volatile unsigned int*) PWM3_DUTY_SET_reg))
#define PWM3_DUTY_SET_inst_adr                                                       "0x002C"
#define PWM3_DUTY_SET_inst                                                           0x002C
#define PWM3_DUTY_SET_PWM3_DUT_shift                                                 (16)
#define PWM3_DUTY_SET_PWM3_DUT_mask                                                  (0x0FFF0000)
#define PWM3_DUTY_SET_PWM3_DUT(data)                                                 (0x0FFF0000&((data)<<16))
#define PWM3_DUTY_SET_PWM3_DUT_src(data)                                             ((0x0FFF0000&(data))>>16)
#define PWM3_DUTY_SET_get_PWM3_DUT(data)                                             ((0x0FFF0000&(data))>>16)
#define PWM3_DUTY_SET_PWM3_TOTALCNT_shift                                            (0)
#define PWM3_DUTY_SET_PWM3_TOTALCNT_mask                                             (0x00000FFF)
#define PWM3_DUTY_SET_PWM3_TOTALCNT(data)                                            (0x00000FFF&((data)<<0))
#define PWM3_DUTY_SET_PWM3_TOTALCNT_src(data)                                        ((0x00000FFF&(data))>>0)
#define PWM3_DUTY_SET_get_PWM3_TOTALCNT(data)                                        ((0x00000FFF&(data))>>0)


#define PWM4_CTRL                                                                    0x1801BCB4
#define PWM4_CTRL_reg_addr                                                           "0xB801BCB4"
#define PWM4_CTRL_reg                                                                0xB801BCB4
#define set_PWM4_CTRL_reg(data)   (*((volatile unsigned int*) PWM4_CTRL_reg)=data)
#define get_PWM4_CTRL_reg   (*((volatile unsigned int*) PWM4_CTRL_reg))
#define PWM4_CTRL_inst_adr                                                           "0x002D"
#define PWM4_CTRL_inst                                                               0x002D
#define PWM4_CTRL_PWM4L_shift                                                        (31)
#define PWM4_CTRL_PWM4L_mask                                                         (0x80000000)
#define PWM4_CTRL_PWM4L(data)                                                        (0x80000000&((data)<<31))
#define PWM4_CTRL_PWM4L_src(data)                                                    ((0x80000000&(data))>>31)
#define PWM4_CTRL_get_PWM4L(data)                                                    ((0x80000000&(data))>>31)
#define PWM4_CTRL_PWM4_CK_shift                                                      (30)
#define PWM4_CTRL_PWM4_CK_mask                                                       (0x40000000)
#define PWM4_CTRL_PWM4_CK(data)                                                      (0x40000000&((data)<<30))
#define PWM4_CTRL_PWM4_CK_src(data)                                                  ((0x40000000&(data))>>30)
#define PWM4_CTRL_get_PWM4_CK(data)                                                  ((0x40000000&(data))>>30)
#define PWM4_CTRL_PWM4_EN_shift                                                      (29)
#define PWM4_CTRL_PWM4_EN_mask                                                       (0x20000000)
#define PWM4_CTRL_PWM4_EN(data)                                                      (0x20000000&((data)<<29))
#define PWM4_CTRL_PWM4_EN_src(data)                                                  ((0x20000000&(data))>>29)
#define PWM4_CTRL_get_PWM4_EN(data)                                                  ((0x20000000&(data))>>29)
#define PWM4_CTRL_PWM4_VS_RST_EN_shift                                               (28)
#define PWM4_CTRL_PWM4_VS_RST_EN_mask                                                (0x10000000)
#define PWM4_CTRL_PWM4_VS_RST_EN(data)                                               (0x10000000&((data)<<28))
#define PWM4_CTRL_PWM4_VS_RST_EN_src(data)                                           ((0x10000000&(data))>>28)
#define PWM4_CTRL_get_PWM4_VS_RST_EN(data)                                           ((0x10000000&(data))>>28)
#define PWM4_CTRL_PWM4_DUT_8B_shift                                                  (27)
#define PWM4_CTRL_PWM4_DUT_8B_mask                                                   (0x08000000)
#define PWM4_CTRL_PWM4_DUT_8B(data)                                                  (0x08000000&((data)<<27))
#define PWM4_CTRL_PWM4_DUT_8B_src(data)                                              ((0x08000000&(data))>>27)
#define PWM4_CTRL_get_PWM4_DUT_8B(data)                                              ((0x08000000&(data))>>27)


#define PWM4_TIMING_CTRL                                                             0x1801BCB8
#define PWM4_TIMING_CTRL_reg_addr                                                    "0xB801BCB8"
#define PWM4_TIMING_CTRL_reg                                                         0xB801BCB8
#define set_PWM4_TIMING_CTRL_reg(data)   (*((volatile unsigned int*) PWM4_TIMING_CTRL_reg)=data)
#define get_PWM4_TIMING_CTRL_reg   (*((volatile unsigned int*) PWM4_TIMING_CTRL_reg))
#define PWM4_TIMING_CTRL_inst_adr                                                    "0x002E"
#define PWM4_TIMING_CTRL_inst                                                        0x002E
#define PWM4_TIMING_CTRL_PWM4_CNT_MODE_shift                                         (31)
#define PWM4_TIMING_CTRL_PWM4_CNT_MODE_mask                                          (0x80000000)
#define PWM4_TIMING_CTRL_PWM4_CNT_MODE(data)                                         (0x80000000&((data)<<31))
#define PWM4_TIMING_CTRL_PWM4_CNT_MODE_src(data)                                     ((0x80000000&(data))>>31)
#define PWM4_TIMING_CTRL_get_PWM4_CNT_MODE(data)                                     ((0x80000000&(data))>>31)
#define PWM4_TIMING_CTRL_PWM4_CK_SEL_HS_shift                                        (30)
#define PWM4_TIMING_CTRL_PWM4_CK_SEL_HS_mask                                         (0x40000000)
#define PWM4_TIMING_CTRL_PWM4_CK_SEL_HS(data)                                        (0x40000000&((data)<<30))
#define PWM4_TIMING_CTRL_PWM4_CK_SEL_HS_src(data)                                    ((0x40000000&(data))>>30)
#define PWM4_TIMING_CTRL_get_PWM4_CK_SEL_HS(data)                                    ((0x40000000&(data))>>30)
#define PWM4_TIMING_CTRL_PWM4_CK_SEL_shift                                           (29)
#define PWM4_TIMING_CTRL_PWM4_CK_SEL_mask                                            (0x20000000)
#define PWM4_TIMING_CTRL_PWM4_CK_SEL(data)                                           (0x20000000&((data)<<29))
#define PWM4_TIMING_CTRL_PWM4_CK_SEL_src(data)                                       ((0x20000000&(data))>>29)
#define PWM4_TIMING_CTRL_get_PWM4_CK_SEL(data)                                       ((0x20000000&(data))>>29)
#define PWM4_TIMING_CTRL_PWM4_CYCLE_MAX_shift                                        (24)
#define PWM4_TIMING_CTRL_PWM4_CYCLE_MAX_mask                                         (0x0F000000)
#define PWM4_TIMING_CTRL_PWM4_CYCLE_MAX(data)                                        (0x0F000000&((data)<<24))
#define PWM4_TIMING_CTRL_PWM4_CYCLE_MAX_src(data)                                    ((0x0F000000&(data))>>24)
#define PWM4_TIMING_CTRL_get_PWM4_CYCLE_MAX(data)                                    ((0x0F000000&(data))>>24)
#define PWM4_TIMING_CTRL_PWM4_M_shift                                                (12)
#define PWM4_TIMING_CTRL_PWM4_M_mask                                                 (0x00003000)
#define PWM4_TIMING_CTRL_PWM4_M(data)                                                (0x00003000&((data)<<12))
#define PWM4_TIMING_CTRL_PWM4_M_src(data)                                            ((0x00003000&(data))>>12)
#define PWM4_TIMING_CTRL_get_PWM4_M(data)                                            ((0x00003000&(data))>>12)
#define PWM4_TIMING_CTRL_PWM4_N_shift                                                (0)
#define PWM4_TIMING_CTRL_PWM4_N_mask                                                 (0x00000FFF)
#define PWM4_TIMING_CTRL_PWM4_N(data)                                                (0x00000FFF&((data)<<0))
#define PWM4_TIMING_CTRL_PWM4_N_src(data)                                            ((0x00000FFF&(data))>>0)
#define PWM4_TIMING_CTRL_get_PWM4_N(data)                                            ((0x00000FFF&(data))>>0)


#define PWM4_DUTY_SET                                                                0x1801BCBC
#define PWM4_DUTY_SET_reg_addr                                                       "0xB801BCBC"
#define PWM4_DUTY_SET_reg                                                            0xB801BCBC
#define set_PWM4_DUTY_SET_reg(data)   (*((volatile unsigned int*) PWM4_DUTY_SET_reg)=data)
#define get_PWM4_DUTY_SET_reg   (*((volatile unsigned int*) PWM4_DUTY_SET_reg))
#define PWM4_DUTY_SET_inst_adr                                                       "0x002F"
#define PWM4_DUTY_SET_inst                                                           0x002F
#define PWM4_DUTY_SET_PWM4_DUT_shift                                                 (16)
#define PWM4_DUTY_SET_PWM4_DUT_mask                                                  (0x0FFF0000)
#define PWM4_DUTY_SET_PWM4_DUT(data)                                                 (0x0FFF0000&((data)<<16))
#define PWM4_DUTY_SET_PWM4_DUT_src(data)                                             ((0x0FFF0000&(data))>>16)
#define PWM4_DUTY_SET_get_PWM4_DUT(data)                                             ((0x0FFF0000&(data))>>16)
#define PWM4_DUTY_SET_PWM4_TOTALCNT_shift                                            (0)
#define PWM4_DUTY_SET_PWM4_TOTALCNT_mask                                             (0x00000FFF)
#define PWM4_DUTY_SET_PWM4_TOTALCNT(data)                                            (0x00000FFF&((data)<<0))
#define PWM4_DUTY_SET_PWM4_TOTALCNT_src(data)                                        ((0x00000FFF&(data))>>0)
#define PWM4_DUTY_SET_get_PWM4_TOTALCNT(data)                                        ((0x00000FFF&(data))>>0)


#define PWM5_CTRL                                                                    0x1801BCC0
#define PWM5_CTRL_reg_addr                                                           "0xB801BCC0"
#define PWM5_CTRL_reg                                                                0xB801BCC0
#define set_PWM5_CTRL_reg(data)   (*((volatile unsigned int*) PWM5_CTRL_reg)=data)
#define get_PWM5_CTRL_reg   (*((volatile unsigned int*) PWM5_CTRL_reg))
#define PWM5_CTRL_inst_adr                                                           "0x0030"
#define PWM5_CTRL_inst                                                               0x0030
#define PWM5_CTRL_PWM5L_shift                                                        (31)
#define PWM5_CTRL_PWM5L_mask                                                         (0x80000000)
#define PWM5_CTRL_PWM5L(data)                                                        (0x80000000&((data)<<31))
#define PWM5_CTRL_PWM5L_src(data)                                                    ((0x80000000&(data))>>31)
#define PWM5_CTRL_get_PWM5L(data)                                                    ((0x80000000&(data))>>31)
#define PWM5_CTRL_PWM5_CK_shift                                                      (30)
#define PWM5_CTRL_PWM5_CK_mask                                                       (0x40000000)
#define PWM5_CTRL_PWM5_CK(data)                                                      (0x40000000&((data)<<30))
#define PWM5_CTRL_PWM5_CK_src(data)                                                  ((0x40000000&(data))>>30)
#define PWM5_CTRL_get_PWM5_CK(data)                                                  ((0x40000000&(data))>>30)
#define PWM5_CTRL_PWM5_EN_shift                                                      (29)
#define PWM5_CTRL_PWM5_EN_mask                                                       (0x20000000)
#define PWM5_CTRL_PWM5_EN(data)                                                      (0x20000000&((data)<<29))
#define PWM5_CTRL_PWM5_EN_src(data)                                                  ((0x20000000&(data))>>29)
#define PWM5_CTRL_get_PWM5_EN(data)                                                  ((0x20000000&(data))>>29)
#define PWM5_CTRL_PWM5_VS_RST_EN_shift                                               (28)
#define PWM5_CTRL_PWM5_VS_RST_EN_mask                                                (0x10000000)
#define PWM5_CTRL_PWM5_VS_RST_EN(data)                                               (0x10000000&((data)<<28))
#define PWM5_CTRL_PWM5_VS_RST_EN_src(data)                                           ((0x10000000&(data))>>28)
#define PWM5_CTRL_get_PWM5_VS_RST_EN(data)                                           ((0x10000000&(data))>>28)
#define PWM5_CTRL_PWM5_DUT_8B_shift                                                  (27)
#define PWM5_CTRL_PWM5_DUT_8B_mask                                                   (0x08000000)
#define PWM5_CTRL_PWM5_DUT_8B(data)                                                  (0x08000000&((data)<<27))
#define PWM5_CTRL_PWM5_DUT_8B_src(data)                                              ((0x08000000&(data))>>27)
#define PWM5_CTRL_get_PWM5_DUT_8B(data)                                              ((0x08000000&(data))>>27)


#define PWM5_TIMING_CTRL                                                             0x1801BCC4
#define PWM5_TIMING_CTRL_reg_addr                                                    "0xB801BCC4"
#define PWM5_TIMING_CTRL_reg                                                         0xB801BCC4
#define set_PWM5_TIMING_CTRL_reg(data)   (*((volatile unsigned int*) PWM5_TIMING_CTRL_reg)=data)
#define get_PWM5_TIMING_CTRL_reg   (*((volatile unsigned int*) PWM5_TIMING_CTRL_reg))
#define PWM5_TIMING_CTRL_inst_adr                                                    "0x0031"
#define PWM5_TIMING_CTRL_inst                                                        0x0031
#define PWM5_TIMING_CTRL_PWM5_CNT_MODE_shift                                         (31)
#define PWM5_TIMING_CTRL_PWM5_CNT_MODE_mask                                          (0x80000000)
#define PWM5_TIMING_CTRL_PWM5_CNT_MODE(data)                                         (0x80000000&((data)<<31))
#define PWM5_TIMING_CTRL_PWM5_CNT_MODE_src(data)                                     ((0x80000000&(data))>>31)
#define PWM5_TIMING_CTRL_get_PWM5_CNT_MODE(data)                                     ((0x80000000&(data))>>31)
#define PWM5_TIMING_CTRL_PWM5_CK_SEL_HS_shift                                        (30)
#define PWM5_TIMING_CTRL_PWM5_CK_SEL_HS_mask                                         (0x40000000)
#define PWM5_TIMING_CTRL_PWM5_CK_SEL_HS(data)                                        (0x40000000&((data)<<30))
#define PWM5_TIMING_CTRL_PWM5_CK_SEL_HS_src(data)                                    ((0x40000000&(data))>>30)
#define PWM5_TIMING_CTRL_get_PWM5_CK_SEL_HS(data)                                    ((0x40000000&(data))>>30)
#define PWM5_TIMING_CTRL_PWM5_CK_SEL_shift                                           (29)
#define PWM5_TIMING_CTRL_PWM5_CK_SEL_mask                                            (0x20000000)
#define PWM5_TIMING_CTRL_PWM5_CK_SEL(data)                                           (0x20000000&((data)<<29))
#define PWM5_TIMING_CTRL_PWM5_CK_SEL_src(data)                                       ((0x20000000&(data))>>29)
#define PWM5_TIMING_CTRL_get_PWM5_CK_SEL(data)                                       ((0x20000000&(data))>>29)
#define PWM5_TIMING_CTRL_PWM5_CYCLE_MAX_shift                                        (24)
#define PWM5_TIMING_CTRL_PWM5_CYCLE_MAX_mask                                         (0x0F000000)
#define PWM5_TIMING_CTRL_PWM5_CYCLE_MAX(data)                                        (0x0F000000&((data)<<24))
#define PWM5_TIMING_CTRL_PWM5_CYCLE_MAX_src(data)                                    ((0x0F000000&(data))>>24)
#define PWM5_TIMING_CTRL_get_PWM5_CYCLE_MAX(data)                                    ((0x0F000000&(data))>>24)
#define PWM5_TIMING_CTRL_PWM5_M_shift                                                (12)
#define PWM5_TIMING_CTRL_PWM5_M_mask                                                 (0x00003000)
#define PWM5_TIMING_CTRL_PWM5_M(data)                                                (0x00003000&((data)<<12))
#define PWM5_TIMING_CTRL_PWM5_M_src(data)                                            ((0x00003000&(data))>>12)
#define PWM5_TIMING_CTRL_get_PWM5_M(data)                                            ((0x00003000&(data))>>12)
#define PWM5_TIMING_CTRL_PWM5_N_shift                                                (0)
#define PWM5_TIMING_CTRL_PWM5_N_mask                                                 (0x00000FFF)
#define PWM5_TIMING_CTRL_PWM5_N(data)                                                (0x00000FFF&((data)<<0))
#define PWM5_TIMING_CTRL_PWM5_N_src(data)                                            ((0x00000FFF&(data))>>0)
#define PWM5_TIMING_CTRL_get_PWM5_N(data)                                            ((0x00000FFF&(data))>>0)


#define PWM5_DUTY_SET                                                                0x1801BCC8
#define PWM5_DUTY_SET_reg_addr                                                       "0xB801BCC8"
#define PWM5_DUTY_SET_reg                                                            0xB801BCC8
#define set_PWM5_DUTY_SET_reg(data)   (*((volatile unsigned int*) PWM5_DUTY_SET_reg)=data)
#define get_PWM5_DUTY_SET_reg   (*((volatile unsigned int*) PWM5_DUTY_SET_reg))
#define PWM5_DUTY_SET_inst_adr                                                       "0x0032"
#define PWM5_DUTY_SET_inst                                                           0x0032
#define PWM5_DUTY_SET_PWM5_DUT_shift                                                 (16)
#define PWM5_DUTY_SET_PWM5_DUT_mask                                                  (0x0FFF0000)
#define PWM5_DUTY_SET_PWM5_DUT(data)                                                 (0x0FFF0000&((data)<<16))
#define PWM5_DUTY_SET_PWM5_DUT_src(data)                                             ((0x0FFF0000&(data))>>16)
#define PWM5_DUTY_SET_get_PWM5_DUT(data)                                             ((0x0FFF0000&(data))>>16)
#define PWM5_DUTY_SET_PWM5_TOTALCNT_shift                                            (0)
#define PWM5_DUTY_SET_PWM5_TOTALCNT_mask                                             (0x00000FFF)
#define PWM5_DUTY_SET_PWM5_TOTALCNT(data)                                            (0x00000FFF&((data)<<0))
#define PWM5_DUTY_SET_PWM5_TOTALCNT_src(data)                                        ((0x00000FFF&(data))>>0)
#define PWM5_DUTY_SET_get_PWM5_TOTALCNT(data)                                        ((0x00000FFF&(data))>>0)


#define PWM6_CTRL                                                                    0x1801BCCC
#define PWM6_CTRL_reg_addr                                                           "0xB801BCCC"
#define PWM6_CTRL_reg                                                                0xB801BCCC
#define set_PWM6_CTRL_reg(data)   (*((volatile unsigned int*) PWM6_CTRL_reg)=data)
#define get_PWM6_CTRL_reg   (*((volatile unsigned int*) PWM6_CTRL_reg))
#define PWM6_CTRL_inst_adr                                                           "0x0033"
#define PWM6_CTRL_inst                                                               0x0033
#define PWM6_CTRL_PWM6L_shift                                                        (31)
#define PWM6_CTRL_PWM6L_mask                                                         (0x80000000)
#define PWM6_CTRL_PWM6L(data)                                                        (0x80000000&((data)<<31))
#define PWM6_CTRL_PWM6L_src(data)                                                    ((0x80000000&(data))>>31)
#define PWM6_CTRL_get_PWM6L(data)                                                    ((0x80000000&(data))>>31)
#define PWM6_CTRL_PWM6_CK_shift                                                      (30)
#define PWM6_CTRL_PWM6_CK_mask                                                       (0x40000000)
#define PWM6_CTRL_PWM6_CK(data)                                                      (0x40000000&((data)<<30))
#define PWM6_CTRL_PWM6_CK_src(data)                                                  ((0x40000000&(data))>>30)
#define PWM6_CTRL_get_PWM6_CK(data)                                                  ((0x40000000&(data))>>30)
#define PWM6_CTRL_PWM6_EN_shift                                                      (29)
#define PWM6_CTRL_PWM6_EN_mask                                                       (0x20000000)
#define PWM6_CTRL_PWM6_EN(data)                                                      (0x20000000&((data)<<29))
#define PWM6_CTRL_PWM6_EN_src(data)                                                  ((0x20000000&(data))>>29)
#define PWM6_CTRL_get_PWM6_EN(data)                                                  ((0x20000000&(data))>>29)
#define PWM6_CTRL_PWM6_VS_RST_EN_shift                                               (28)
#define PWM6_CTRL_PWM6_VS_RST_EN_mask                                                (0x10000000)
#define PWM6_CTRL_PWM6_VS_RST_EN(data)                                               (0x10000000&((data)<<28))
#define PWM6_CTRL_PWM6_VS_RST_EN_src(data)                                           ((0x10000000&(data))>>28)
#define PWM6_CTRL_get_PWM6_VS_RST_EN(data)                                           ((0x10000000&(data))>>28)
#define PWM6_CTRL_PWM6_DUT_8B_shift                                                  (27)
#define PWM6_CTRL_PWM6_DUT_8B_mask                                                   (0x08000000)
#define PWM6_CTRL_PWM6_DUT_8B(data)                                                  (0x08000000&((data)<<27))
#define PWM6_CTRL_PWM6_DUT_8B_src(data)                                              ((0x08000000&(data))>>27)
#define PWM6_CTRL_get_PWM6_DUT_8B(data)                                              ((0x08000000&(data))>>27)


#define PWM6_TIMING_CTRL                                                             0x1801BCD0
#define PWM6_TIMING_CTRL_reg_addr                                                    "0xB801BCD0"
#define PWM6_TIMING_CTRL_reg                                                         0xB801BCD0
#define set_PWM6_TIMING_CTRL_reg(data)   (*((volatile unsigned int*) PWM6_TIMING_CTRL_reg)=data)
#define get_PWM6_TIMING_CTRL_reg   (*((volatile unsigned int*) PWM6_TIMING_CTRL_reg))
#define PWM6_TIMING_CTRL_inst_adr                                                    "0x0034"
#define PWM6_TIMING_CTRL_inst                                                        0x0034
#define PWM6_TIMING_CTRL_PWM6_CNT_MODE_shift                                         (31)
#define PWM6_TIMING_CTRL_PWM6_CNT_MODE_mask                                          (0x80000000)
#define PWM6_TIMING_CTRL_PWM6_CNT_MODE(data)                                         (0x80000000&((data)<<31))
#define PWM6_TIMING_CTRL_PWM6_CNT_MODE_src(data)                                     ((0x80000000&(data))>>31)
#define PWM6_TIMING_CTRL_get_PWM6_CNT_MODE(data)                                     ((0x80000000&(data))>>31)
#define PWM6_TIMING_CTRL_PWM6_CK_SEL_HS_shift                                        (30)
#define PWM6_TIMING_CTRL_PWM6_CK_SEL_HS_mask                                         (0x40000000)
#define PWM6_TIMING_CTRL_PWM6_CK_SEL_HS(data)                                        (0x40000000&((data)<<30))
#define PWM6_TIMING_CTRL_PWM6_CK_SEL_HS_src(data)                                    ((0x40000000&(data))>>30)
#define PWM6_TIMING_CTRL_get_PWM6_CK_SEL_HS(data)                                    ((0x40000000&(data))>>30)
#define PWM6_TIMING_CTRL_PWM6_CK_SEL_shift                                           (29)
#define PWM6_TIMING_CTRL_PWM6_CK_SEL_mask                                            (0x20000000)
#define PWM6_TIMING_CTRL_PWM6_CK_SEL(data)                                           (0x20000000&((data)<<29))
#define PWM6_TIMING_CTRL_PWM6_CK_SEL_src(data)                                       ((0x20000000&(data))>>29)
#define PWM6_TIMING_CTRL_get_PWM6_CK_SEL(data)                                       ((0x20000000&(data))>>29)
#define PWM6_TIMING_CTRL_PWM6_CYCLE_MAX_shift                                        (24)
#define PWM6_TIMING_CTRL_PWM6_CYCLE_MAX_mask                                         (0x0F000000)
#define PWM6_TIMING_CTRL_PWM6_CYCLE_MAX(data)                                        (0x0F000000&((data)<<24))
#define PWM6_TIMING_CTRL_PWM6_CYCLE_MAX_src(data)                                    ((0x0F000000&(data))>>24)
#define PWM6_TIMING_CTRL_get_PWM6_CYCLE_MAX(data)                                    ((0x0F000000&(data))>>24)
#define PWM6_TIMING_CTRL_PWM6_M_shift                                                (12)
#define PWM6_TIMING_CTRL_PWM6_M_mask                                                 (0x00003000)
#define PWM6_TIMING_CTRL_PWM6_M(data)                                                (0x00003000&((data)<<12))
#define PWM6_TIMING_CTRL_PWM6_M_src(data)                                            ((0x00003000&(data))>>12)
#define PWM6_TIMING_CTRL_get_PWM6_M(data)                                            ((0x00003000&(data))>>12)
#define PWM6_TIMING_CTRL_PWM6_N_shift                                                (0)
#define PWM6_TIMING_CTRL_PWM6_N_mask                                                 (0x00000FFF)
#define PWM6_TIMING_CTRL_PWM6_N(data)                                                (0x00000FFF&((data)<<0))
#define PWM6_TIMING_CTRL_PWM6_N_src(data)                                            ((0x00000FFF&(data))>>0)
#define PWM6_TIMING_CTRL_get_PWM6_N(data)                                            ((0x00000FFF&(data))>>0)


#define PWM6_DUTY_SET                                                                0x1801BCD4
#define PWM6_DUTY_SET_reg_addr                                                       "0xB801BCD4"
#define PWM6_DUTY_SET_reg                                                            0xB801BCD4
#define set_PWM6_DUTY_SET_reg(data)   (*((volatile unsigned int*) PWM6_DUTY_SET_reg)=data)
#define get_PWM6_DUTY_SET_reg   (*((volatile unsigned int*) PWM6_DUTY_SET_reg))
#define PWM6_DUTY_SET_inst_adr                                                       "0x0035"
#define PWM6_DUTY_SET_inst                                                           0x0035
#define PWM6_DUTY_SET_PWM6_DUT_shift                                                 (16)
#define PWM6_DUTY_SET_PWM6_DUT_mask                                                  (0x0FFF0000)
#define PWM6_DUTY_SET_PWM6_DUT(data)                                                 (0x0FFF0000&((data)<<16))
#define PWM6_DUTY_SET_PWM6_DUT_src(data)                                             ((0x0FFF0000&(data))>>16)
#define PWM6_DUTY_SET_get_PWM6_DUT(data)                                             ((0x0FFF0000&(data))>>16)
#define PWM6_DUTY_SET_PWM6_TOTALCNT_shift                                            (0)
#define PWM6_DUTY_SET_PWM6_TOTALCNT_mask                                             (0x00000FFF)
#define PWM6_DUTY_SET_PWM6_TOTALCNT(data)                                            (0x00000FFF&((data)<<0))
#define PWM6_DUTY_SET_PWM6_TOTALCNT_src(data)                                        ((0x00000FFF&(data))>>0)
#define PWM6_DUTY_SET_get_PWM6_TOTALCNT(data)                                        ((0x00000FFF&(data))>>0)


#define PWM7_CTRL                                                                    0x1801BCD8
#define PWM7_CTRL_reg_addr                                                           "0xB801BCD8"
#define PWM7_CTRL_reg                                                                0xB801BCD8
#define set_PWM7_CTRL_reg(data)   (*((volatile unsigned int*) PWM7_CTRL_reg)=data)
#define get_PWM7_CTRL_reg   (*((volatile unsigned int*) PWM7_CTRL_reg))
#define PWM7_CTRL_inst_adr                                                           "0x0036"
#define PWM7_CTRL_inst                                                               0x0036
#define PWM7_CTRL_PWM7L_shift                                                        (31)
#define PWM7_CTRL_PWM7L_mask                                                         (0x80000000)
#define PWM7_CTRL_PWM7L(data)                                                        (0x80000000&((data)<<31))
#define PWM7_CTRL_PWM7L_src(data)                                                    ((0x80000000&(data))>>31)
#define PWM7_CTRL_get_PWM7L(data)                                                    ((0x80000000&(data))>>31)
#define PWM7_CTRL_PWM7_CK_shift                                                      (30)
#define PWM7_CTRL_PWM7_CK_mask                                                       (0x40000000)
#define PWM7_CTRL_PWM7_CK(data)                                                      (0x40000000&((data)<<30))
#define PWM7_CTRL_PWM7_CK_src(data)                                                  ((0x40000000&(data))>>30)
#define PWM7_CTRL_get_PWM7_CK(data)                                                  ((0x40000000&(data))>>30)
#define PWM7_CTRL_PWM7_EN_shift                                                      (29)
#define PWM7_CTRL_PWM7_EN_mask                                                       (0x20000000)
#define PWM7_CTRL_PWM7_EN(data)                                                      (0x20000000&((data)<<29))
#define PWM7_CTRL_PWM7_EN_src(data)                                                  ((0x20000000&(data))>>29)
#define PWM7_CTRL_get_PWM7_EN(data)                                                  ((0x20000000&(data))>>29)
#define PWM7_CTRL_PWM7_VS_RST_EN_shift                                               (28)
#define PWM7_CTRL_PWM7_VS_RST_EN_mask                                                (0x10000000)
#define PWM7_CTRL_PWM7_VS_RST_EN(data)                                               (0x10000000&((data)<<28))
#define PWM7_CTRL_PWM7_VS_RST_EN_src(data)                                           ((0x10000000&(data))>>28)
#define PWM7_CTRL_get_PWM7_VS_RST_EN(data)                                           ((0x10000000&(data))>>28)
#define PWM7_CTRL_PWM7_DUT_8B_shift                                                  (27)
#define PWM7_CTRL_PWM7_DUT_8B_mask                                                   (0x08000000)
#define PWM7_CTRL_PWM7_DUT_8B(data)                                                  (0x08000000&((data)<<27))
#define PWM7_CTRL_PWM7_DUT_8B_src(data)                                              ((0x08000000&(data))>>27)
#define PWM7_CTRL_get_PWM7_DUT_8B(data)                                              ((0x08000000&(data))>>27)


#define PWM7_TIMING_CTRL                                                             0x1801BCDC
#define PWM7_TIMING_CTRL_reg_addr                                                    "0xB801BCDC"
#define PWM7_TIMING_CTRL_reg                                                         0xB801BCDC
#define set_PWM7_TIMING_CTRL_reg(data)   (*((volatile unsigned int*) PWM7_TIMING_CTRL_reg)=data)
#define get_PWM7_TIMING_CTRL_reg   (*((volatile unsigned int*) PWM7_TIMING_CTRL_reg))
#define PWM7_TIMING_CTRL_inst_adr                                                    "0x0037"
#define PWM7_TIMING_CTRL_inst                                                        0x0037
#define PWM7_TIMING_CTRL_PWM7_CNT_MODE_shift                                         (31)
#define PWM7_TIMING_CTRL_PWM7_CNT_MODE_mask                                          (0x80000000)
#define PWM7_TIMING_CTRL_PWM7_CNT_MODE(data)                                         (0x80000000&((data)<<31))
#define PWM7_TIMING_CTRL_PWM7_CNT_MODE_src(data)                                     ((0x80000000&(data))>>31)
#define PWM7_TIMING_CTRL_get_PWM7_CNT_MODE(data)                                     ((0x80000000&(data))>>31)
#define PWM7_TIMING_CTRL_PWM7_CK_SEL_HS_shift                                        (30)
#define PWM7_TIMING_CTRL_PWM7_CK_SEL_HS_mask                                         (0x40000000)
#define PWM7_TIMING_CTRL_PWM7_CK_SEL_HS(data)                                        (0x40000000&((data)<<30))
#define PWM7_TIMING_CTRL_PWM7_CK_SEL_HS_src(data)                                    ((0x40000000&(data))>>30)
#define PWM7_TIMING_CTRL_get_PWM7_CK_SEL_HS(data)                                    ((0x40000000&(data))>>30)
#define PWM7_TIMING_CTRL_PWM7_CK_SEL_shift                                           (29)
#define PWM7_TIMING_CTRL_PWM7_CK_SEL_mask                                            (0x20000000)
#define PWM7_TIMING_CTRL_PWM7_CK_SEL(data)                                           (0x20000000&((data)<<29))
#define PWM7_TIMING_CTRL_PWM7_CK_SEL_src(data)                                       ((0x20000000&(data))>>29)
#define PWM7_TIMING_CTRL_get_PWM7_CK_SEL(data)                                       ((0x20000000&(data))>>29)
#define PWM7_TIMING_CTRL_PWM7_CYCLE_MAX_shift                                        (24)
#define PWM7_TIMING_CTRL_PWM7_CYCLE_MAX_mask                                         (0x0F000000)
#define PWM7_TIMING_CTRL_PWM7_CYCLE_MAX(data)                                        (0x0F000000&((data)<<24))
#define PWM7_TIMING_CTRL_PWM7_CYCLE_MAX_src(data)                                    ((0x0F000000&(data))>>24)
#define PWM7_TIMING_CTRL_get_PWM7_CYCLE_MAX(data)                                    ((0x0F000000&(data))>>24)
#define PWM7_TIMING_CTRL_PWM7_M_shift                                                (12)
#define PWM7_TIMING_CTRL_PWM7_M_mask                                                 (0x00003000)
#define PWM7_TIMING_CTRL_PWM7_M(data)                                                (0x00003000&((data)<<12))
#define PWM7_TIMING_CTRL_PWM7_M_src(data)                                            ((0x00003000&(data))>>12)
#define PWM7_TIMING_CTRL_get_PWM7_M(data)                                            ((0x00003000&(data))>>12)
#define PWM7_TIMING_CTRL_PWM7_N_shift                                                (0)
#define PWM7_TIMING_CTRL_PWM7_N_mask                                                 (0x00000FFF)
#define PWM7_TIMING_CTRL_PWM7_N(data)                                                (0x00000FFF&((data)<<0))
#define PWM7_TIMING_CTRL_PWM7_N_src(data)                                            ((0x00000FFF&(data))>>0)
#define PWM7_TIMING_CTRL_get_PWM7_N(data)                                            ((0x00000FFF&(data))>>0)


#define PWM7_DUTY_SET                                                                0x1801BCE0
#define PWM7_DUTY_SET_reg_addr                                                       "0xB801BCE0"
#define PWM7_DUTY_SET_reg                                                            0xB801BCE0
#define set_PWM7_DUTY_SET_reg(data)   (*((volatile unsigned int*) PWM7_DUTY_SET_reg)=data)
#define get_PWM7_DUTY_SET_reg   (*((volatile unsigned int*) PWM7_DUTY_SET_reg))
#define PWM7_DUTY_SET_inst_adr                                                       "0x0038"
#define PWM7_DUTY_SET_inst                                                           0x0038
#define PWM7_DUTY_SET_PWM7_DUT_shift                                                 (16)
#define PWM7_DUTY_SET_PWM7_DUT_mask                                                  (0x0FFF0000)
#define PWM7_DUTY_SET_PWM7_DUT(data)                                                 (0x0FFF0000&((data)<<16))
#define PWM7_DUTY_SET_PWM7_DUT_src(data)                                             ((0x0FFF0000&(data))>>16)
#define PWM7_DUTY_SET_get_PWM7_DUT(data)                                             ((0x0FFF0000&(data))>>16)
#define PWM7_DUTY_SET_PWM7_TOTALCNT_shift                                            (0)
#define PWM7_DUTY_SET_PWM7_TOTALCNT_mask                                             (0x00000FFF)
#define PWM7_DUTY_SET_PWM7_TOTALCNT(data)                                            (0x00000FFF&((data)<<0))
#define PWM7_DUTY_SET_PWM7_TOTALCNT_src(data)                                        ((0x00000FFF&(data))>>0)
#define PWM7_DUTY_SET_get_PWM7_TOTALCNT(data)                                        ((0x00000FFF&(data))>>0)


#define TC0TVR                                                                       0x1801B600
#define TC0TVR_reg_addr                                                              "0xB801B600"
#define TC0TVR_reg                                                                   0xB801B600
#define set_TC0TVR_reg(data)   (*((volatile unsigned int*) TC0TVR_reg)=data)
#define get_TC0TVR_reg   (*((volatile unsigned int*) TC0TVR_reg))
#define TC0TVR_inst_adr                                                              "0x0080"
#define TC0TVR_inst                                                                  0x0080
#define TC0TVR_TC0TVR_shift                                                          (0)
#define TC0TVR_TC0TVR_mask                                                           (0xFFFFFFFF)
#define TC0TVR_TC0TVR(data)                                                          (0xFFFFFFFF&((data)<<0))
#define TC0TVR_TC0TVR_src(data)                                                      ((0xFFFFFFFF&(data))>>0)
#define TC0TVR_get_TC0TVR(data)                                                      ((0xFFFFFFFF&(data))>>0)


#define TC1TVR                                                                       0x1801B604
#define TC1TVR_reg_addr                                                              "0xB801B604"
#define TC1TVR_reg                                                                   0xB801B604
#define set_TC1TVR_reg(data)   (*((volatile unsigned int*) TC1TVR_reg)=data)
#define get_TC1TVR_reg   (*((volatile unsigned int*) TC1TVR_reg))
#define TC1TVR_inst_adr                                                              "0x0081"
#define TC1TVR_inst                                                                  0x0081
#define TC1TVR_TC1TVR_shift                                                          (0)
#define TC1TVR_TC1TVR_mask                                                           (0xFFFFFFFF)
#define TC1TVR_TC1TVR(data)                                                          (0xFFFFFFFF&((data)<<0))
#define TC1TVR_TC1TVR_src(data)                                                      ((0xFFFFFFFF&(data))>>0)
#define TC1TVR_get_TC1TVR(data)                                                      ((0xFFFFFFFF&(data))>>0)


#define TC2TVR                                                                       0x1801B608
#define TC2TVR_reg_addr                                                              "0xB801B608"
#define TC2TVR_reg                                                                   0xB801B608
#define set_TC2TVR_reg(data)   (*((volatile unsigned int*) TC2TVR_reg)=data)
#define get_TC2TVR_reg   (*((volatile unsigned int*) TC2TVR_reg))
#define TC2TVR_inst_adr                                                              "0x0082"
#define TC2TVR_inst                                                                  0x0082
#define TC2TVR_TC2TVR_shift                                                          (0)
#define TC2TVR_TC2TVR_mask                                                           (0xFFFFFFFF)
#define TC2TVR_TC2TVR(data)                                                          (0xFFFFFFFF&((data)<<0))
#define TC2TVR_TC2TVR_src(data)                                                      ((0xFFFFFFFF&(data))>>0)
#define TC2TVR_get_TC2TVR(data)                                                      ((0xFFFFFFFF&(data))>>0)


#define TC3TVR                                                                       0x1801B60C
#define TC3TVR_reg_addr                                                              "0xB801B60C"
#define TC3TVR_reg                                                                   0xB801B60C
#define set_TC3TVR_reg(data)   (*((volatile unsigned int*) TC3TVR_reg)=data)
#define get_TC3TVR_reg   (*((volatile unsigned int*) TC3TVR_reg))
#define TC3TVR_inst_adr                                                              "0x0083"
#define TC3TVR_inst                                                                  0x0083
#define TC3TVR_TC3TVR_shift                                                          (0)
#define TC3TVR_TC3TVR_mask                                                           (0xFFFFFFFF)
#define TC3TVR_TC3TVR(data)                                                          (0xFFFFFFFF&((data)<<0))
#define TC3TVR_TC3TVR_src(data)                                                      ((0xFFFFFFFF&(data))>>0)
#define TC3TVR_get_TC3TVR(data)                                                      ((0xFFFFFFFF&(data))>>0)


#define TC4TVR                                                                       0x1801B610
#define TC4TVR_reg_addr                                                              "0xB801B610"
#define TC4TVR_reg                                                                   0xB801B610
#define set_TC4TVR_reg(data)   (*((volatile unsigned int*) TC4TVR_reg)=data)
#define get_TC4TVR_reg   (*((volatile unsigned int*) TC4TVR_reg))
#define TC4TVR_inst_adr                                                              "0x0084"
#define TC4TVR_inst                                                                  0x0084
#define TC4TVR_TC4TVR_shift                                                          (0)
#define TC4TVR_TC4TVR_mask                                                           (0xFFFFFFFF)
#define TC4TVR_TC4TVR(data)                                                          (0xFFFFFFFF&((data)<<0))
#define TC4TVR_TC4TVR_src(data)                                                      ((0xFFFFFFFF&(data))>>0)
#define TC4TVR_get_TC4TVR(data)                                                      ((0xFFFFFFFF&(data))>>0)


#define TC5TVR                                                                       0x1801B614
#define TC5TVR_reg_addr                                                              "0xB801B614"
#define TC5TVR_reg                                                                   0xB801B614
#define set_TC5TVR_reg(data)   (*((volatile unsigned int*) TC5TVR_reg)=data)
#define get_TC5TVR_reg   (*((volatile unsigned int*) TC5TVR_reg))
#define TC5TVR_inst_adr                                                              "0x0085"
#define TC5TVR_inst                                                                  0x0085
#define TC5TVR_TC5TVR_shift                                                          (0)
#define TC5TVR_TC5TVR_mask                                                           (0xFFFFFFFF)
#define TC5TVR_TC5TVR(data)                                                          (0xFFFFFFFF&((data)<<0))
#define TC5TVR_TC5TVR_src(data)                                                      ((0xFFFFFFFF&(data))>>0)
#define TC5TVR_get_TC5TVR(data)                                                      ((0xFFFFFFFF&(data))>>0)


#define TC6TVR                                                                       0x1801B618
#define TC6TVR_reg_addr                                                              "0xB801B618"
#define TC6TVR_reg                                                                   0xB801B618
#define set_TC6TVR_reg(data)   (*((volatile unsigned int*) TC6TVR_reg)=data)
#define get_TC6TVR_reg   (*((volatile unsigned int*) TC6TVR_reg))
#define TC6TVR_inst_adr                                                              "0x0086"
#define TC6TVR_inst                                                                  0x0086
#define TC6TVR_TC6TVR_shift                                                          (0)
#define TC6TVR_TC6TVR_mask                                                           (0xFFFFFFFF)
#define TC6TVR_TC6TVR(data)                                                          (0xFFFFFFFF&((data)<<0))
#define TC6TVR_TC6TVR_src(data)                                                      ((0xFFFFFFFF&(data))>>0)
#define TC6TVR_get_TC6TVR(data)                                                      ((0xFFFFFFFF&(data))>>0)


#define TC7TVR                                                                       0x1801B61C
#define TC7TVR_reg_addr                                                              "0xB801B61C"
#define TC7TVR_reg                                                                   0xB801B61C
#define set_TC7TVR_reg(data)   (*((volatile unsigned int*) TC7TVR_reg)=data)
#define get_TC7TVR_reg   (*((volatile unsigned int*) TC7TVR_reg))
#define TC7TVR_inst_adr                                                              "0x0087"
#define TC7TVR_inst                                                                  0x0087
#define TC7TVR_TC7TVR_shift                                                          (0)
#define TC7TVR_TC7TVR_mask                                                           (0xFFFFFFFF)
#define TC7TVR_TC7TVR(data)                                                          (0xFFFFFFFF&((data)<<0))
#define TC7TVR_TC7TVR_src(data)                                                      ((0xFFFFFFFF&(data))>>0)
#define TC7TVR_get_TC7TVR(data)                                                      ((0xFFFFFFFF&(data))>>0)


#define TC0CVR                                                                       0x1801B620
#define TC0CVR_reg_addr                                                              "0xB801B620"
#define TC0CVR_reg                                                                   0xB801B620
#define set_TC0CVR_reg(data)   (*((volatile unsigned int*) TC0CVR_reg)=data)
#define get_TC0CVR_reg   (*((volatile unsigned int*) TC0CVR_reg))
#define TC0CVR_inst_adr                                                              "0x0088"
#define TC0CVR_inst                                                                  0x0088
#define TC0CVR_TC0CVR_shift                                                          (0)
#define TC0CVR_TC0CVR_mask                                                           (0xFFFFFFFF)
#define TC0CVR_TC0CVR(data)                                                          (0xFFFFFFFF&((data)<<0))
#define TC0CVR_TC0CVR_src(data)                                                      ((0xFFFFFFFF&(data))>>0)
#define TC0CVR_get_TC0CVR(data)                                                      ((0xFFFFFFFF&(data))>>0)


#define TC1CVR                                                                       0x1801B624
#define TC1CVR_reg_addr                                                              "0xB801B624"
#define TC1CVR_reg                                                                   0xB801B624
#define set_TC1CVR_reg(data)   (*((volatile unsigned int*) TC1CVR_reg)=data)
#define get_TC1CVR_reg   (*((volatile unsigned int*) TC1CVR_reg))
#define TC1CVR_inst_adr                                                              "0x0089"
#define TC1CVR_inst                                                                  0x0089
#define TC1CVR_TC1CVR_shift                                                          (0)
#define TC1CVR_TC1CVR_mask                                                           (0xFFFFFFFF)
#define TC1CVR_TC1CVR(data)                                                          (0xFFFFFFFF&((data)<<0))
#define TC1CVR_TC1CVR_src(data)                                                      ((0xFFFFFFFF&(data))>>0)
#define TC1CVR_get_TC1CVR(data)                                                      ((0xFFFFFFFF&(data))>>0)


#define TC2CVR                                                                       0x1801B628
#define TC2CVR_reg_addr                                                              "0xB801B628"
#define TC2CVR_reg                                                                   0xB801B628
#define set_TC2CVR_reg(data)   (*((volatile unsigned int*) TC2CVR_reg)=data)
#define get_TC2CVR_reg   (*((volatile unsigned int*) TC2CVR_reg))
#define TC2CVR_inst_adr                                                              "0x008A"
#define TC2CVR_inst                                                                  0x008A
#define TC2CVR_TC2VR_shift                                                           (0)
#define TC2CVR_TC2VR_mask                                                            (0xFFFFFFFF)
#define TC2CVR_TC2VR(data)                                                           (0xFFFFFFFF&((data)<<0))
#define TC2CVR_TC2VR_src(data)                                                       ((0xFFFFFFFF&(data))>>0)
#define TC2CVR_get_TC2VR(data)                                                       ((0xFFFFFFFF&(data))>>0)


#define TC3CVR                                                                       0x1801B62C
#define TC3CVR_reg_addr                                                              "0xB801B62C"
#define TC3CVR_reg                                                                   0xB801B62C
#define set_TC3CVR_reg(data)   (*((volatile unsigned int*) TC3CVR_reg)=data)
#define get_TC3CVR_reg   (*((volatile unsigned int*) TC3CVR_reg))
#define TC3CVR_inst_adr                                                              "0x008B"
#define TC3CVR_inst                                                                  0x008B
#define TC3CVR_TC3CVR_shift                                                          (0)
#define TC3CVR_TC3CVR_mask                                                           (0xFFFFFFFF)
#define TC3CVR_TC3CVR(data)                                                          (0xFFFFFFFF&((data)<<0))
#define TC3CVR_TC3CVR_src(data)                                                      ((0xFFFFFFFF&(data))>>0)
#define TC3CVR_get_TC3CVR(data)                                                      ((0xFFFFFFFF&(data))>>0)


#define TC4CVR                                                                       0x1801B630
#define TC4CVR_reg_addr                                                              "0xB801B630"
#define TC4CVR_reg                                                                   0xB801B630
#define set_TC4CVR_reg(data)   (*((volatile unsigned int*) TC4CVR_reg)=data)
#define get_TC4CVR_reg   (*((volatile unsigned int*) TC4CVR_reg))
#define TC4CVR_inst_adr                                                              "0x008C"
#define TC4CVR_inst                                                                  0x008C
#define TC4CVR_TC4CVR_shift                                                          (0)
#define TC4CVR_TC4CVR_mask                                                           (0xFFFFFFFF)
#define TC4CVR_TC4CVR(data)                                                          (0xFFFFFFFF&((data)<<0))
#define TC4CVR_TC4CVR_src(data)                                                      ((0xFFFFFFFF&(data))>>0)
#define TC4CVR_get_TC4CVR(data)                                                      ((0xFFFFFFFF&(data))>>0)


#define TC5CVR                                                                       0x1801B634
#define TC5CVR_reg_addr                                                              "0xB801B634"
#define TC5CVR_reg                                                                   0xB801B634
#define set_TC5CVR_reg(data)   (*((volatile unsigned int*) TC5CVR_reg)=data)
#define get_TC5CVR_reg   (*((volatile unsigned int*) TC5CVR_reg))
#define TC5CVR_inst_adr                                                              "0x008D"
#define TC5CVR_inst                                                                  0x008D
#define TC5CVR_TC5VR_shift                                                           (0)
#define TC5CVR_TC5VR_mask                                                            (0xFFFFFFFF)
#define TC5CVR_TC5VR(data)                                                           (0xFFFFFFFF&((data)<<0))
#define TC5CVR_TC5VR_src(data)                                                       ((0xFFFFFFFF&(data))>>0)
#define TC5CVR_get_TC5VR(data)                                                       ((0xFFFFFFFF&(data))>>0)


#define TC6CVR                                                                       0x1801B638
#define TC6CVR_reg_addr                                                              "0xB801B638"
#define TC6CVR_reg                                                                   0xB801B638
#define set_TC6CVR_reg(data)   (*((volatile unsigned int*) TC6CVR_reg)=data)
#define get_TC6CVR_reg   (*((volatile unsigned int*) TC6CVR_reg))
#define TC6CVR_inst_adr                                                              "0x008E"
#define TC6CVR_inst                                                                  0x008E
#define TC6CVR_TC6CVR_shift                                                          (0)
#define TC6CVR_TC6CVR_mask                                                           (0xFFFFFFFF)
#define TC6CVR_TC6CVR(data)                                                          (0xFFFFFFFF&((data)<<0))
#define TC6CVR_TC6CVR_src(data)                                                      ((0xFFFFFFFF&(data))>>0)
#define TC6CVR_get_TC6CVR(data)                                                      ((0xFFFFFFFF&(data))>>0)


#define TC7CVR                                                                      0x1801B63C
#define TC7CVR_reg_addr                                                             "0xB801B63C"
#define TC7CVR_reg                                                                  0xB801B63C
#define set_TC7CVR_reg(data)   (*((volatile unsigned int*) TC71CVR_reg)=data)
#define get_TC7CVR_reg   (*((volatile unsigned int*) TC71CVR_reg))
#define TC7CVR_inst_adr                                                             "0x008F"
#define TC7CVR_inst                                                                 0x008F
#define TC7CVR_TC7CVR_shift                                                         (0)
#define TC7CVR_TC7CVR_mask                                                          (0xFFFFFFFF)
#define TC7CVR_TC7CVR(data)                                                         (0xFFFFFFFF&((data)<<0))
#define TC7CVR_TC7CVR_src(data)                                                     ((0xFFFFFFFF&(data))>>0)
#define TC7CVR_get_TC7CVR(data)                                                     ((0xFFFFFFFF&(data))>>0)


#define TC0CR                                                                        0x1801B640
#define TC0CR_reg_addr                                                               "0xB801B640"
#define TC0CR_reg                                                                    0xB801B640
#define set_TC0CR_reg(data)   (*((volatile unsigned int*) TC0CR_reg)=data)
#define get_TC0CR_reg   (*((volatile unsigned int*) TC0CR_reg))
#define TC0CR_inst_adr                                                               "0x0090"
#define TC0CR_inst                                                                   0x0090
#define TC0CR_TC0En_shift                                                            (31)
#define TC0CR_TC0En_mask                                                             (0x80000000)
#define TC0CR_TC0En(data)                                                            (0x80000000&((data)<<31))
#define TC0CR_TC0En_src(data)                                                        ((0x80000000&(data))>>31)
#define TC0CR_get_TC0En(data)                                                        ((0x80000000&(data))>>31)
#define TC0CR_TC0Mode_shift                                                          (30)
#define TC0CR_TC0Mode_mask                                                           (0x40000000)
#define TC0CR_TC0Mode(data)                                                          (0x40000000&((data)<<30))
#define TC0CR_TC0Mode_src(data)                                                      ((0x40000000&(data))>>30)
#define TC0CR_get_TC0Mode(data)                                                      ((0x40000000&(data))>>30)
#define TC0CR_TC0Pause_shift                                                         (29)
#define TC0CR_TC0Pause_mask                                                          (0x20000000)
#define TC0CR_TC0Pause(data)                                                         (0x20000000&((data)<<29))
#define TC0CR_TC0Pause_src(data)                                                     ((0x20000000&(data))>>29)
#define TC0CR_get_TC0Pause(data)                                                     ((0x20000000&(data))>>29)
#define TC0CR_RvdA_shift                                                             (24)
#define TC0CR_RvdA_mask                                                              (0x1F000000)
#define TC0CR_RvdA(data)                                                             (0x1F000000&((data)<<24))
#define TC0CR_RvdA_src(data)                                                         ((0x1F000000&(data))>>24)
#define TC0CR_get_RvdA(data)                                                         ((0x1F000000&(data))>>24)


#define TC1CR                                                                        0x1801B644
#define TC1CR_reg_addr                                                               "0xB801B644"
#define TC1CR_reg                                                                    0xB801B644
#define set_TC1CR_reg(data)   (*((volatile unsigned int*) TC1CR_reg)=data)
#define get_TC1CR_reg   (*((volatile unsigned int*) TC1CR_reg))
#define TC1CR_inst_adr                                                               "0x0091"
#define TC1CR_inst                                                                   0x0091
#define TC1CR_TC1En_shift                                                            (31)
#define TC1CR_TC1En_mask                                                             (0x80000000)
#define TC1CR_TC1En(data)                                                            (0x80000000&((data)<<31))
#define TC1CR_TC1En_src(data)                                                        ((0x80000000&(data))>>31)
#define TC1CR_get_TC1En(data)                                                        ((0x80000000&(data))>>31)
#define TC1CR_TC1Mode_shift                                                          (30)
#define TC1CR_TC1Mode_mask                                                           (0x40000000)
#define TC1CR_TC1Mode(data)                                                          (0x40000000&((data)<<30))
#define TC1CR_TC1Mode_src(data)                                                      ((0x40000000&(data))>>30)
#define TC1CR_get_TC1Mode(data)                                                      ((0x40000000&(data))>>30)
#define TC1CR_TC1Pause_shift                                                         (29)
#define TC1CR_TC1Pause_mask                                                          (0x20000000)
#define TC1CR_TC1Pause(data)                                                         (0x20000000&((data)<<29))
#define TC1CR_TC1Pause_src(data)                                                     ((0x20000000&(data))>>29)
#define TC1CR_get_TC1Pause(data)                                                     ((0x20000000&(data))>>29)
#define TC1CR_RvdA_shift                                                             (24)
#define TC1CR_RvdA_mask                                                              (0x1F000000)
#define TC1CR_RvdA(data)                                                             (0x1F000000&((data)<<24))
#define TC1CR_RvdA_src(data)                                                         ((0x1F000000&(data))>>24)
#define TC1CR_get_RvdA(data)                                                         ((0x1F000000&(data))>>24)


#define TC2CR                                                                        0x1801B648
#define TC2CR_reg_addr                                                               "0xB801B648"
#define TC2CR_reg                                                                    0xB801B648
#define set_TC2CR_reg(data)   (*((volatile unsigned int*) TC2CR_reg)=data)
#define get_TC2CR_reg   (*((volatile unsigned int*) TC2CR_reg))
#define TC2CR_inst_adr                                                               "0x0092"
#define TC2CR_inst                                                                   0x0092
#define TC2CR_TC2En_shift                                                            (31)
#define TC2CR_TC2En_mask                                                             (0x80000000)
#define TC2CR_TC2En(data)                                                            (0x80000000&((data)<<31))
#define TC2CR_TC2En_src(data)                                                        ((0x80000000&(data))>>31)
#define TC2CR_get_TC2En(data)                                                        ((0x80000000&(data))>>31)
#define TC2CR_TC2Mode_shift                                                          (30)
#define TC2CR_TC2Mode_mask                                                           (0x40000000)
#define TC2CR_TC2Mode(data)                                                          (0x40000000&((data)<<30))
#define TC2CR_TC2Mode_src(data)                                                      ((0x40000000&(data))>>30)
#define TC2CR_get_TC2Mode(data)                                                      ((0x40000000&(data))>>30)
#define TC2CR_TC2Pause_shift                                                         (29)
#define TC2CR_TC2Pause_mask                                                          (0x20000000)
#define TC2CR_TC2Pause(data)                                                         (0x20000000&((data)<<29))
#define TC2CR_TC2Pause_src(data)                                                     ((0x20000000&(data))>>29)
#define TC2CR_get_TC2Pause(data)                                                     ((0x20000000&(data))>>29)
#define TC2CR_RvdA_shift                                                             (24)
#define TC2CR_RvdA_mask                                                              (0x1F000000)
#define TC2CR_RvdA(data)                                                             (0x1F000000&((data)<<24))
#define TC2CR_RvdA_src(data)                                                         ((0x1F000000&(data))>>24)
#define TC2CR_get_RvdA(data)                                                         ((0x1F000000&(data))>>24)


#define TC3CR                                                                        0x1801B64C
#define TC3CR_reg_addr                                                               "0xB801B64C"
#define TC3CR_reg                                                                    0xB801B64C
#define set_TC3CR_reg(data)   (*((volatile unsigned int*) TC3CR_reg)=data)
#define get_TC3CR_reg   (*((volatile unsigned int*) TC3CR_reg))
#define TC3CR_inst_adr                                                               "0x0093"
#define TC3CR_inst                                                                   0x0093
#define TC3CR_TC3En_shift                                                            (31)
#define TC3CR_TC3En_mask                                                             (0x80000000)
#define TC3CR_TC3En(data)                                                            (0x80000000&((data)<<31))
#define TC3CR_TC3En_src(data)                                                        ((0x80000000&(data))>>31)
#define TC3CR_get_TC3En(data)                                                        ((0x80000000&(data))>>31)
#define TC3CR_TC3Mode_shift                                                          (30)
#define TC3CR_TC3Mode_mask                                                           (0x40000000)
#define TC3CR_TC3Mode(data)                                                          (0x40000000&((data)<<30))
#define TC3CR_TC3Mode_src(data)                                                      ((0x40000000&(data))>>30)
#define TC3CR_get_TC3Mode(data)                                                      ((0x40000000&(data))>>30)
#define TC3CR_TC3Pause_shift                                                         (29)
#define TC3CR_TC3Pause_mask                                                          (0x20000000)
#define TC3CR_TC3Pause(data)                                                         (0x20000000&((data)<<29))
#define TC3CR_TC3Pause_src(data)                                                     ((0x20000000&(data))>>29)
#define TC3CR_get_TC3Pause(data)                                                     ((0x20000000&(data))>>29)
#define TC3CR_RvdA_shift                                                             (24)
#define TC3CR_RvdA_mask                                                              (0x1F000000)
#define TC3CR_RvdA(data)                                                             (0x1F000000&((data)<<24))
#define TC3CR_RvdA_src(data)                                                         ((0x1F000000&(data))>>24)
#define TC3CR_get_RvdA(data)                                                         ((0x1F000000&(data))>>24)


#define TC4CR                                                                        0x1801B650
#define TC4CR_reg_addr                                                               "0xB801B650"
#define TC4CR_reg                                                                    0xB801B650
#define set_TC4CR_reg(data)   (*((volatile unsigned int*) TC4CR_reg)=data)
#define get_TC4CR_reg   (*((volatile unsigned int*) TC4CR_reg))
#define TC4CR_inst_adr                                                               "0x0094"
#define TC4CR_inst                                                                   0x0094
#define TC4CR_TC4En_shift                                                            (31)
#define TC4CR_TC4En_mask                                                             (0x80000000)
#define TC4CR_TC4En(data)                                                            (0x80000000&((data)<<31))
#define TC4CR_TC4En_src(data)                                                        ((0x80000000&(data))>>31)
#define TC4CR_get_TC4En(data)                                                        ((0x80000000&(data))>>31)
#define TC4CR_TC4Mode_shift                                                          (30)
#define TC4CR_TC4Mode_mask                                                           (0x40000000)
#define TC4CR_TC4Mode(data)                                                          (0x40000000&((data)<<30))
#define TC4CR_TC4Mode_src(data)                                                      ((0x40000000&(data))>>30)
#define TC4CR_get_TC4Mode(data)                                                      ((0x40000000&(data))>>30)
#define TC4CR_TC4Pause_shift                                                         (29)
#define TC4CR_TC4Pause_mask                                                          (0x20000000)
#define TC4CR_TC4Pause(data)                                                         (0x20000000&((data)<<29))
#define TC4CR_TC4Pause_src(data)                                                     ((0x20000000&(data))>>29)
#define TC4CR_get_TC4Pause(data)                                                     ((0x20000000&(data))>>29)
#define TC4CR_RvdA_shift                                                             (24)
#define TC4CR_RvdA_mask                                                              (0x1F000000)
#define TC4CR_RvdA(data)                                                             (0x1F000000&((data)<<24))
#define TC4CR_RvdA_src(data)                                                         ((0x1F000000&(data))>>24)
#define TC4CR_get_RvdA(data)                                                         ((0x1F000000&(data))>>24)


#define TC5CR                                                                        0x1801B654
#define TC5CR_reg_addr                                                               "0xB801B654"
#define TC5CR_reg                                                                    0xB801B654
#define set_TC5CR_reg(data)   (*((volatile unsigned int*) TC5CR_reg)=data)
#define get_TC5CR_reg   (*((volatile unsigned int*) TC5CR_reg))
#define TC5CR_inst_adr                                                               "0x0095"
#define TC5CR_inst                                                                   0x0095
#define TC5CR_TC5En_shift                                                            (31)
#define TC5CR_TC5En_mask                                                             (0x80000000)
#define TC5CR_TC5En(data)                                                            (0x80000000&((data)<<31))
#define TC5CR_TC5En_src(data)                                                        ((0x80000000&(data))>>31)
#define TC5CR_get_TC5En(data)                                                        ((0x80000000&(data))>>31)
#define TC5CR_TC5Mode_shift                                                          (30)
#define TC5CR_TC5Mode_mask                                                           (0x40000000)
#define TC5CR_TC5Mode(data)                                                          (0x40000000&((data)<<30))
#define TC5CR_TC5Mode_src(data)                                                      ((0x40000000&(data))>>30)
#define TC5CR_get_TC5Mode(data)                                                      ((0x40000000&(data))>>30)
#define TC5CR_TC5Pause_shift                                                         (29)
#define TC5CR_TC5Pause_mask                                                          (0x20000000)
#define TC5CR_TC5Pause(data)                                                         (0x20000000&((data)<<29))
#define TC5CR_TC5Pause_src(data)                                                     ((0x20000000&(data))>>29)
#define TC5CR_get_TC5Pause(data)                                                     ((0x20000000&(data))>>29)
#define TC5CR_RvdA_shift                                                             (24)
#define TC5CR_RvdA_mask                                                              (0x1F000000)
#define TC5CR_RvdA(data)                                                             (0x1F000000&((data)<<24))
#define TC5CR_RvdA_src(data)                                                         ((0x1F000000&(data))>>24)
#define TC5CR_get_RvdA(data)                                                         ((0x1F000000&(data))>>24)


#define TC6CR                                                                        0x1801B658
#define TC6CR_reg_addr                                                               "0xB801B658"
#define TC6CR_reg                                                                    0xB801B658
#define set_TC6CR_reg(data)   (*((volatile unsigned int*) TC6CR_reg)=data)
#define get_TC6CR_reg   (*((volatile unsigned int*) TC6CR_reg))
#define TC6CR_inst_adr                                                               "0x0096"
#define TC6CR_inst                                                                   0x0096
#define TC6CR_TC6En_shift                                                            (31)
#define TC6CR_TC6En_mask                                                             (0x80000000)
#define TC6CR_TC6En(data)                                                            (0x80000000&((data)<<31))
#define TC6CR_TC6En_src(data)                                                        ((0x80000000&(data))>>31)
#define TC6CR_get_TC6En(data)                                                        ((0x80000000&(data))>>31)
#define TC6CR_TC6Mode_shift                                                          (30)
#define TC6CR_TC6Mode_mask                                                           (0x40000000)
#define TC6CR_TC6Mode(data)                                                          (0x40000000&((data)<<30))
#define TC6CR_TC6Mode_src(data)                                                      ((0x40000000&(data))>>30)
#define TC6CR_get_TC6Mode(data)                                                      ((0x40000000&(data))>>30)
#define TC6CR_TC6Pause_shift                                                         (29)
#define TC6CR_TC6Pause_mask                                                          (0x20000000)
#define TC6CR_TC6Pause(data)                                                         (0x20000000&((data)<<29))
#define TC6CR_TC6Pause_src(data)                                                     ((0x20000000&(data))>>29)
#define TC6CR_get_TC6Pause(data)                                                     ((0x20000000&(data))>>29)
#define TC6CR_RvdA_shift                                                             (24)
#define TC6CR_RvdA_mask                                                              (0x1F000000)
#define TC6CR_RvdA(data)                                                             (0x1F000000&((data)<<24))
#define TC6CR_RvdA_src(data)                                                         ((0x1F000000&(data))>>24)
#define TC6CR_get_RvdA(data)                                                         ((0x1F000000&(data))>>24)


#define TC7CR                                                                        0x1801B65C
#define TC7CR_reg_addr                                                               "0xB801B65C"
#define TC7CR_reg                                                                    0xB801B65C
#define set_TC7CR_reg(data)   (*((volatile unsigned int*) TC7CR_reg)=data)
#define get_TC7CR_reg   (*((volatile unsigned int*) TC7CR_reg))
#define TC7CR_inst_adr                                                               "0x0097"
#define TC7CR_inst                                                                   0x0097
#define TC7CR_TC7En_shift                                                            (31)
#define TC7CR_TC7En_mask                                                             (0x80000000)
#define TC7CR_TC7En(data)                                                            (0x80000000&((data)<<31))
#define TC7CR_TC7En_src(data)                                                        ((0x80000000&(data))>>31)
#define TC7CR_get_TC7En(data)                                                        ((0x80000000&(data))>>31)
#define TC7CR_TC7Mode_shift                                                          (30)
#define TC7CR_TC7Mode_mask                                                           (0x40000000)
#define TC7CR_TC7Mode(data)                                                          (0x40000000&((data)<<30))
#define TC7CR_TC7Mode_src(data)                                                      ((0x40000000&(data))>>30)
#define TC7CR_get_TC7Mode(data)                                                      ((0x40000000&(data))>>30)
#define TC7CR_TC7Pause_shift                                                         (29)
#define TC7CR_TC7Pause_mask                                                          (0x20000000)
#define TC7CR_TC7Pause(data)                                                         (0x20000000&((data)<<29))
#define TC7CR_TC7Pause_src(data)                                                     ((0x20000000&(data))>>29)
#define TC7CR_get_TC7Pause(data)                                                     ((0x20000000&(data))>>29)
#define TC7CR_RvdA_shift                                                             (24)
#define TC7CR_RvdA_mask                                                              (0x1F000000)
#define TC7CR_RvdA(data)                                                             (0x1F000000&((data)<<24))
#define TC7CR_RvdA_src(data)                                                         ((0x1F000000&(data))>>24)
#define TC7CR_get_RvdA(data)                                                         ((0x1F000000&(data))>>24)


#define TC0ICR                                                                       0x1801B660
#define TC0ICR_reg_addr                                                              "0xB801B660"
#define TC0ICR_reg                                                                   0xB801B660
#define set_TC0ICR_reg(data)   (*((volatile unsigned int*) TC0ICR_reg)=data)
#define get_TC0ICR_reg   (*((volatile unsigned int*) TC0ICR_reg))
#define TC0ICR_inst_adr                                                              "0x0098"
#define TC0ICR_inst                                                                  0x0098
#define TC0ICR_TC0IE_shift                                                           (31)
#define TC0ICR_TC0IE_mask                                                            (0x80000000)
#define TC0ICR_TC0IE(data)                                                           (0x80000000&((data)<<31))
#define TC0ICR_TC0IE_src(data)                                                       ((0x80000000&(data))>>31)
#define TC0ICR_get_TC0IE(data)                                                       ((0x80000000&(data))>>31)


#define TC1ICR                                                                       0x1801B664
#define TC1ICR_reg_addr                                                              "0xB801B664"
#define TC1ICR_reg                                                                   0xB801B664
#define set_TC1ICR_reg(data)   (*((volatile unsigned int*) TC1ICR_reg)=data)
#define get_TC1ICR_reg   (*((volatile unsigned int*) TC1ICR_reg))
#define TC1ICR_inst_adr                                                              "0x0099"
#define TC1ICR_inst                                                                  0x0099
#define TC1ICR_TC1IE_shift                                                           (31)
#define TC1ICR_TC1IE_mask                                                            (0x80000000)
#define TC1ICR_TC1IE(data)                                                           (0x80000000&((data)<<31))
#define TC1ICR_TC1IE_src(data)                                                       ((0x80000000&(data))>>31)
#define TC1ICR_get_TC1IE(data)                                                       ((0x80000000&(data))>>31)


#define TC2ICR                                                                       0x1801B668
#define TC2ICR_reg_addr                                                              "0xB801B668"
#define TC2ICR_reg                                                                   0xB801B668
#define set_TC2ICR_reg(data)   (*((volatile unsigned int*) TC2ICR_reg)=data)
#define get_TC2ICR_reg   (*((volatile unsigned int*) TC2ICR_reg))
#define TC2ICR_inst_adr                                                              "0x009A"
#define TC2ICR_inst                                                                  0x009A
#define TC2ICR_TC2IE_shift                                                           (31)
#define TC2ICR_TC2IE_mask                                                            (0x80000000)
#define TC2ICR_TC2IE(data)                                                           (0x80000000&((data)<<31))
#define TC2ICR_TC2IE_src(data)                                                       ((0x80000000&(data))>>31)
#define TC2ICR_get_TC2IE(data)                                                       ((0x80000000&(data))>>31)


#define TC3ICR                                                                       0x1801B66C
#define TC3ICR_reg_addr                                                              "0xB801B66C"
#define TC3ICR_reg                                                                   0xB801B66C
#define set_TC3ICR_reg(data)   (*((volatile unsigned int*) TC3ICR_reg)=data)
#define get_TC3ICR_reg   (*((volatile unsigned int*) TC3ICR_reg))
#define TC3ICR_inst_adr                                                              "0x009B"
#define TC3ICR_inst                                                                  0x009B
#define TC3ICR_TC3IE_shift                                                           (31)
#define TC3ICR_TC3IE_mask                                                            (0x80000000)
#define TC3ICR_TC3IE(data)                                                           (0x80000000&((data)<<31))
#define TC3ICR_TC3IE_src(data)                                                       ((0x80000000&(data))>>31)
#define TC3ICR_get_TC3IE(data)                                                       ((0x80000000&(data))>>31)


#define TC4ICR                                                                       0x1801B670
#define TC4ICR_reg_addr                                                              "0xB801B670"
#define TC4ICR_reg                                                                   0xB801B670
#define set_TC4ICR_reg(data)   (*((volatile unsigned int*) TC4ICR_reg)=data)
#define get_TC4ICR_reg   (*((volatile unsigned int*) TC4ICR_reg))
#define TC4ICR_inst_adr                                                              "0x009C"
#define TC4ICR_inst                                                                  0x009C
#define TC4ICR_TC4IE_shift                                                           (31)
#define TC4ICR_TC4IE_mask                                                            (0x80000000)
#define TC4ICR_TC4IE(data)                                                           (0x80000000&((data)<<31))
#define TC4ICR_TC4IE_src(data)                                                       ((0x80000000&(data))>>31)
#define TC4ICR_get_TC4IE(data)                                                       ((0x80000000&(data))>>31)


#define TC5ICR                                                                       0x1801B674
#define TC5ICR_reg_addr                                                              "0xB801B674"
#define TC5ICR_reg                                                                   0xB801B674
#define set_TC5ICR_reg(data)   (*((volatile unsigned int*) TC5ICR_reg)=data)
#define get_TC5ICR_reg   (*((volatile unsigned int*) TC5ICR_reg))
#define TC5ICR_inst_adr                                                              "0x009D"
#define TC5ICR_inst                                                                  0x009D
#define TC5ICR_TC5IE_shift                                                           (31)
#define TC5ICR_TC5IE_mask                                                            (0x80000000)
#define TC5ICR_TC5IE(data)                                                           (0x80000000&((data)<<31))
#define TC5ICR_TC5IE_src(data)                                                       ((0x80000000&(data))>>31)
#define TC5ICR_get_TC5IE(data)                                                       ((0x80000000&(data))>>31)


#define TC6ICR                                                                       0x1801B678
#define TC6ICR_reg_addr                                                              "0xB801B678"
#define TC6ICR_reg                                                                   0xB801B678
#define set_TC6ICR_reg(data)   (*((volatile unsigned int*) TC6ICR_reg)=data)
#define get_TC6ICR_reg   (*((volatile unsigned int*) TC6ICR_reg))
#define TC6ICR_inst_adr                                                              "0x009E"
#define TC6ICR_inst                                                                  0x009E
#define TC6ICR_TC6IE_shift                                                           (31)
#define TC6ICR_TC6IE_mask                                                            (0x80000000)
#define TC6ICR_TC6IE(data)                                                           (0x80000000&((data)<<31))
#define TC6ICR_TC6IE_src(data)                                                       ((0x80000000&(data))>>31)
#define TC6ICR_get_TC6IE(data)                                                       ((0x80000000&(data))>>31)


#define TC7ICR                                                                       0x1801B67C
#define TC7ICR_reg_addr                                                              "0xB801B67C"
#define TC7ICR_reg                                                                   0xB801B67C
#define set_TC7ICR_reg(data)   (*((volatile unsigned int*) TC7ICR_reg)=data)
#define get_TC7ICR_reg   (*((volatile unsigned int*) TC7ICR_reg))
#define TC7ICR_inst_adr                                                              "0x009F"
#define TC7ICR_inst                                                                  0x009F
#define TC7ICR_TC7IE_shift                                                           (31)
#define TC7ICR_TC7IE_mask                                                            (0x80000000)
#define TC7ICR_TC7IE(data)                                                           (0x80000000&((data)<<31))
#define TC7ICR_TC7IE_src(data)                                                       ((0x80000000&(data))>>31)
#define TC7ICR_get_TC7IE(data)                                                       ((0x80000000&(data))>>31)


#define CLK90K_CTRL                                                                  0x1801B688
#define CLK90K_CTRL_reg_addr                                                         "0xB801B688"
#define CLK90K_CTRL_reg                                                              0xB801B688
#define set_CLK90K_CTRL_reg(data)   (*((volatile unsigned int*) CLK90K_CTRL_reg)=data)
#define get_CLK90K_CTRL_reg   (*((volatile unsigned int*) CLK90K_CTRL_reg))
#define CLK90K_CTRL_inst_adr                                                         "0x00A2"
#define CLK90K_CTRL_inst                                                             0x00A2
#define CLK90K_CTRL_EN_shift                                                         (0)
#define CLK90K_CTRL_EN_mask                                                          (0x00000001)
#define CLK90K_CTRL_EN(data)                                                         (0x00000001&((data)<<0))
#define CLK90K_CTRL_EN_src(data)                                                     ((0x00000001&(data))>>0)
#define CLK90K_CTRL_get_EN(data)                                                     ((0x00000001&(data))>>0)


#define SCPU_CLK27M_90K                                                              0x1801B68C
#define SCPU_CLK27M_90K_reg_addr                                                     "0xB801B68C"
#define SCPU_CLK27M_90K_reg                                                          0xB801B68C
#define set_SCPU_CLK27M_90K_reg(data)   (*((volatile unsigned int*) SCPU_CLK27M_90K_reg)=data)
#define get_SCPU_CLK27M_90K_reg   (*((volatile unsigned int*) SCPU_CLK27M_90K_reg))
#define SCPU_CLK27M_90K_inst_adr                                                     "0x00A3"
#define SCPU_CLK27M_90K_inst                                                         0x00A3
#define SCPU_CLK27M_90K_CNT_shift                                                    (0)
#define SCPU_CLK27M_90K_CNT_mask                                                     (0x000001FF)
#define SCPU_CLK27M_90K_CNT(data)                                                    (0x000001FF&((data)<<0))
#define SCPU_CLK27M_90K_CNT_src(data)                                                ((0x000001FF&(data))>>0)
#define SCPU_CLK27M_90K_get_CNT(data)                                                ((0x000001FF&(data))>>0)


#define SCPU_CLK90K_LO                                                               0x1801B690
#define SCPU_CLK90K_LO_reg_addr                                                      "0xB801B690"
#define SCPU_CLK90K_LO_reg                                                           0xB801B690
#define set_SCPU_CLK90K_LO_reg(data)   (*((volatile unsigned int*) SCPU_CLK90K_LO_reg)=data)
#define get_SCPU_CLK90K_LO_reg   (*((volatile unsigned int*) SCPU_CLK90K_LO_reg))
#define SCPU_CLK90K_LO_inst_adr                                                      "0x00A4"
#define SCPU_CLK90K_LO_inst                                                          0x00A4
#define SCPU_CLK90K_LO_VAL_shift                                                     (0)
#define SCPU_CLK90K_LO_VAL_mask                                                      (0xFFFFFFFF)
#define SCPU_CLK90K_LO_VAL(data)                                                     (0xFFFFFFFF&((data)<<0))
#define SCPU_CLK90K_LO_VAL_src(data)                                                 ((0xFFFFFFFF&(data))>>0)
#define SCPU_CLK90K_LO_get_VAL(data)                                                 ((0xFFFFFFFF&(data))>>0)


#define SCPU_CLK90K_HI                                                               0x1801B694
#define SCPU_CLK90K_HI_reg_addr                                                      "0xB801B694"
#define SCPU_CLK90K_HI_reg                                                           0xB801B694
#define set_SCPU_CLK90K_HI_reg(data)   (*((volatile unsigned int*) SCPU_CLK90K_HI_reg)=data)
#define get_SCPU_CLK90K_HI_reg   (*((volatile unsigned int*) SCPU_CLK90K_HI_reg))
#define SCPU_CLK90K_HI_inst_adr                                                      "0x00A5"
#define SCPU_CLK90K_HI_inst                                                          0x00A5
#define SCPU_CLK90K_HI_VAL_shift                                                     (0)
#define SCPU_CLK90K_HI_VAL_mask                                                      (0x0000FFFF)
#define SCPU_CLK90K_HI_VAL(data)                                                     (0x0000FFFF&((data)<<0))
#define SCPU_CLK90K_HI_VAL_src(data)                                                 ((0x0000FFFF&(data))>>0)
#define SCPU_CLK90K_HI_get_VAL(data)                                                 ((0x0000FFFF&(data))>>0)


#define ACPU_CLK27M_90K                                                              0x1801B698
#define ACPU_CLK27M_90K_reg_addr                                                     "0xB801B698"
#define ACPU_CLK27M_90K_reg                                                          0xB801B698
#define set_ACPU_CLK27M_90K_reg(data)   (*((volatile unsigned int*) ACPU_CLK27M_90K_reg)=data)
#define get_ACPU_CLK27M_90K_reg   (*((volatile unsigned int*) ACPU_CLK27M_90K_reg))
#define ACPU_CLK27M_90K_inst_adr                                                     "0x00A6"
#define ACPU_CLK27M_90K_inst                                                         0x00A6
#define ACPU_CLK27M_90K_CNT_shift                                                    (0)
#define ACPU_CLK27M_90K_CNT_mask                                                     (0x000001FF)
#define ACPU_CLK27M_90K_CNT(data)                                                    (0x000001FF&((data)<<0))
#define ACPU_CLK27M_90K_CNT_src(data)                                                ((0x000001FF&(data))>>0)
#define ACPU_CLK27M_90K_get_CNT(data)                                                ((0x000001FF&(data))>>0)


#define ACPU_CLK90K_LO                                                               0x1801B69C
#define ACPU_CLK90K_LO_reg_addr                                                      "0xB801B69C"
#define ACPU_CLK90K_LO_reg                                                           0xB801B69C
#define set_ACPU_CLK90K_LO_reg(data)   (*((volatile unsigned int*) ACPU_CLK90K_LO_reg)=data)
#define get_ACPU_CLK90K_LO_reg   (*((volatile unsigned int*) ACPU_CLK90K_LO_reg))
#define ACPU_CLK90K_LO_inst_adr                                                      "0x00A7"
#define ACPU_CLK90K_LO_inst                                                          0x00A7
#define ACPU_CLK90K_LO_VAL_shift                                                     (0)
#define ACPU_CLK90K_LO_VAL_mask                                                      (0xFFFFFFFF)
#define ACPU_CLK90K_LO_VAL(data)                                                     (0xFFFFFFFF&((data)<<0))
#define ACPU_CLK90K_LO_VAL_src(data)                                                 ((0xFFFFFFFF&(data))>>0)
#define ACPU_CLK90K_LO_get_VAL(data)                                                 ((0xFFFFFFFF&(data))>>0)


#define ACPU_CLK90K_HI                                                               0x1801B6A0
#define ACPU_CLK90K_HI_reg_addr                                                      "0xB801B6A0"
#define ACPU_CLK90K_HI_reg                                                           0xB801B6A0
#define set_ACPU_CLK90K_HI_reg(data)   (*((volatile unsigned int*) ACPU_CLK90K_HI_reg)=data)
#define get_ACPU_CLK90K_HI_reg   (*((volatile unsigned int*) ACPU_CLK90K_HI_reg))
#define ACPU_CLK90K_HI_inst_adr                                                      "0x00A8"
#define ACPU_CLK90K_HI_inst                                                          0x00A8
#define ACPU_CLK90K_HI_VAL_shift                                                     (0)
#define ACPU_CLK90K_HI_VAL_mask                                                      (0x0000FFFF)
#define ACPU_CLK90K_HI_VAL(data)                                                     (0x0000FFFF&((data)<<0))
#define ACPU_CLK90K_HI_VAL_src(data)                                                 ((0x0000FFFF&(data))>>0)
#define ACPU_CLK90K_HI_get_VAL(data)                                                 ((0x0000FFFF&(data))>>0)


#define VCPU_CLK27M_90K                                                              0x1801B6A4
#define VCPU_CLK27M_90K_reg_addr                                                     "0xB801B6A4"
#define VCPU_CLK27M_90K_reg                                                          0xB801B6A4
#define set_VCPU_CLK27M_90K_reg(data)   (*((volatile unsigned int*) VCPU_CLK27M_90K_reg)=data)
#define get_VCPU_CLK27M_90K_reg   (*((volatile unsigned int*) VCPU_CLK27M_90K_reg))
#define VCPU_CLK27M_90K_inst_adr                                                     "0x00A9"
#define VCPU_CLK27M_90K_inst                                                         0x00A9
#define VCPU_CLK27M_90K_CNT_shift                                                    (0)
#define VCPU_CLK27M_90K_CNT_mask                                                     (0x000001FF)
#define VCPU_CLK27M_90K_CNT(data)                                                    (0x000001FF&((data)<<0))
#define VCPU_CLK27M_90K_CNT_src(data)                                                ((0x000001FF&(data))>>0)
#define VCPU_CLK27M_90K_get_CNT(data)                                                ((0x000001FF&(data))>>0)


#define VCPU_CLK90K_LO                                                               0x1801B6A8
#define VCPU_CLK90K_LO_reg_addr                                                      "0xB801B6A8"
#define VCPU_CLK90K_LO_reg                                                           0xB801B6A8
#define set_VCPU_CLK90K_LO_reg(data)   (*((volatile unsigned int*) VCPU_CLK90K_LO_reg)=data)
#define get_VCPU_CLK90K_LO_reg   (*((volatile unsigned int*) VCPU_CLK90K_LO_reg))
#define VCPU_CLK90K_LO_inst_adr                                                      "0x00AA"
#define VCPU_CLK90K_LO_inst                                                          0x00AA
#define VCPU_CLK90K_LO_VAL_shift                                                     (0)
#define VCPU_CLK90K_LO_VAL_mask                                                      (0xFFFFFFFF)
#define VCPU_CLK90K_LO_VAL(data)                                                     (0xFFFFFFFF&((data)<<0))
#define VCPU_CLK90K_LO_VAL_src(data)                                                 ((0xFFFFFFFF&(data))>>0)
#define VCPU_CLK90K_LO_get_VAL(data)                                                 ((0xFFFFFFFF&(data))>>0)


#define VCPU_CLK90K_HI                                                               0x1801B6AC
#define VCPU_CLK90K_HI_reg_addr                                                      "0xB801B6AC"
#define VCPU_CLK90K_HI_reg                                                           0xB801B6AC
#define set_VCPU_CLK90K_HI_reg(data)   (*((volatile unsigned int*) VCPU_CLK90K_HI_reg)=data)
#define get_VCPU_CLK90K_HI_reg   (*((volatile unsigned int*) VCPU_CLK90K_HI_reg))
#define VCPU_CLK90K_HI_inst_adr                                                      "0x00AB"
#define VCPU_CLK90K_HI_inst                                                          0x00AB
#define VCPU_CLK90K_HI_VAL_shift                                                     (0)
#define VCPU_CLK90K_HI_VAL_mask                                                      (0x0000FFFF)
#define VCPU_CLK90K_HI_VAL(data)                                                     (0x0000FFFF&((data)<<0))
#define VCPU_CLK90K_HI_VAL_src(data)                                                 ((0x0000FFFF&(data))>>0)
#define VCPU_CLK90K_HI_get_VAL(data)                                                 ((0x0000FFFF&(data))>>0)


#define PCR_CLK90K_CTRL                                                              0x1801B6C0
#define PCR_CLK90K_CTRL_reg_addr                                                     "0xB801B6C0"
#define PCR_CLK90K_CTRL_reg                                                          0xB801B6C0
#define set_PCR_CLK90K_CTRL_reg(data)   (*((volatile unsigned int*) PCR_CLK90K_CTRL_reg)=data)
#define get_PCR_CLK90K_CTRL_reg   (*((volatile unsigned int*) PCR_CLK90K_CTRL_reg))
#define PCR_CLK90K_CTRL_inst_adr                                                     "0x00B0"
#define PCR_CLK90K_CTRL_inst                                                         0x00B0
#define PCR_CLK90K_CTRL_EN_shift                                                     (0)
#define PCR_CLK90K_CTRL_EN_mask                                                      (0x00000001)
#define PCR_CLK90K_CTRL_EN(data)                                                     (0x00000001&((data)<<0))
#define PCR_CLK90K_CTRL_EN_src(data)                                                 ((0x00000001&(data))>>0)
#define PCR_CLK90K_CTRL_get_EN(data)                                                 ((0x00000001&(data))>>0)


#define PCR_SCPU_CLK27M_90K                                                          0x1801B6C4
#define PCR_SCPU_CLK27M_90K_reg_addr                                                 "0xB801B6C4"
#define PCR_SCPU_CLK27M_90K_reg                                                      0xB801B6C4
#define set_PCR_SCPU_CLK27M_90K_reg(data)   (*((volatile unsigned int*) PCR_SCPU_CLK27M_90K_reg)=data)
#define get_PCR_SCPU_CLK27M_90K_reg   (*((volatile unsigned int*) PCR_SCPU_CLK27M_90K_reg))
#define PCR_SCPU_CLK27M_90K_inst_adr                                                 "0x00B1"
#define PCR_SCPU_CLK27M_90K_inst                                                     0x00B1
#define PCR_SCPU_CLK27M_90K_CNT_shift                                                (0)
#define PCR_SCPU_CLK27M_90K_CNT_mask                                                 (0x000001FF)
#define PCR_SCPU_CLK27M_90K_CNT(data)                                                (0x000001FF&((data)<<0))
#define PCR_SCPU_CLK27M_90K_CNT_src(data)                                            ((0x000001FF&(data))>>0)
#define PCR_SCPU_CLK27M_90K_get_CNT(data)                                            ((0x000001FF&(data))>>0)


#define PCR_SCPU_CLK90K_LO                                                           0x1801B6C8
#define PCR_SCPU_CLK90K_LO_reg_addr                                                  "0xB801B6C8"
#define PCR_SCPU_CLK90K_LO_reg                                                       0xB801B6C8
#define set_PCR_SCPU_CLK90K_LO_reg(data)   (*((volatile unsigned int*) PCR_SCPU_CLK90K_LO_reg)=data)
#define get_PCR_SCPU_CLK90K_LO_reg   (*((volatile unsigned int*) PCR_SCPU_CLK90K_LO_reg))
#define PCR_SCPU_CLK90K_LO_inst_adr                                                  "0x00B2"
#define PCR_SCPU_CLK90K_LO_inst                                                      0x00B2
#define PCR_SCPU_CLK90K_LO_VAL_shift                                                 (0)
#define PCR_SCPU_CLK90K_LO_VAL_mask                                                  (0xFFFFFFFF)
#define PCR_SCPU_CLK90K_LO_VAL(data)                                                 (0xFFFFFFFF&((data)<<0))
#define PCR_SCPU_CLK90K_LO_VAL_src(data)                                             ((0xFFFFFFFF&(data))>>0)
#define PCR_SCPU_CLK90K_LO_get_VAL(data)                                             ((0xFFFFFFFF&(data))>>0)


#define PCR_SCPU_CLK90K_HI                                                           0x1801B6CC
#define PCR_SCPU_CLK90K_HI_reg_addr                                                  "0xB801B6CC"
#define PCR_SCPU_CLK90K_HI_reg                                                       0xB801B6CC
#define set_PCR_SCPU_CLK90K_HI_reg(data)   (*((volatile unsigned int*) PCR_SCPU_CLK90K_HI_reg)=data)
#define get_PCR_SCPU_CLK90K_HI_reg   (*((volatile unsigned int*) PCR_SCPU_CLK90K_HI_reg))
#define PCR_SCPU_CLK90K_HI_inst_adr                                                  "0x00B3"
#define PCR_SCPU_CLK90K_HI_inst                                                      0x00B3
#define PCR_SCPU_CLK90K_HI_VAL_shift                                                 (0)
#define PCR_SCPU_CLK90K_HI_VAL_mask                                                  (0x0000FFFF)
#define PCR_SCPU_CLK90K_HI_VAL(data)                                                 (0x0000FFFF&((data)<<0))
#define PCR_SCPU_CLK90K_HI_VAL_src(data)                                             ((0x0000FFFF&(data))>>0)
#define PCR_SCPU_CLK90K_HI_get_VAL(data)                                             ((0x0000FFFF&(data))>>0)


#define PCR_ACPU_CLK27M_90K                                                          0x1801B6D0
#define PCR_ACPU_CLK27M_90K_reg_addr                                                 "0xB801B6D0"
#define PCR_ACPU_CLK27M_90K_reg                                                      0xB801B6D0
#define set_PCR_ACPU_CLK27M_90K_reg(data)   (*((volatile unsigned int*) PCR_ACPU_CLK27M_90K_reg)=data)
#define get_PCR_ACPU_CLK27M_90K_reg   (*((volatile unsigned int*) PCR_ACPU_CLK27M_90K_reg))
#define PCR_ACPU_CLK27M_90K_inst_adr                                                 "0x00B4"
#define PCR_ACPU_CLK27M_90K_inst                                                     0x00B4
#define PCR_ACPU_CLK27M_90K_CNT_shift                                                (0)
#define PCR_ACPU_CLK27M_90K_CNT_mask                                                 (0x000001FF)
#define PCR_ACPU_CLK27M_90K_CNT(data)                                                (0x000001FF&((data)<<0))
#define PCR_ACPU_CLK27M_90K_CNT_src(data)                                            ((0x000001FF&(data))>>0)
#define PCR_ACPU_CLK27M_90K_get_CNT(data)                                            ((0x000001FF&(data))>>0)


#define PCR_ACPU_CLK90K_LO                                                           0x1801B6D4
#define PCR_ACPU_CLK90K_LO_reg_addr                                                  "0xB801B6D4"
#define PCR_ACPU_CLK90K_LO_reg                                                       0xB801B6D4
#define set_PCR_ACPU_CLK90K_LO_reg(data)   (*((volatile unsigned int*) PCR_ACPU_CLK90K_LO_reg)=data)
#define get_PCR_ACPU_CLK90K_LO_reg   (*((volatile unsigned int*) PCR_ACPU_CLK90K_LO_reg))
#define PCR_ACPU_CLK90K_LO_inst_adr                                                  "0x00B5"
#define PCR_ACPU_CLK90K_LO_inst                                                      0x00B5
#define PCR_ACPU_CLK90K_LO_VAL_shift                                                 (0)
#define PCR_ACPU_CLK90K_LO_VAL_mask                                                  (0xFFFFFFFF)
#define PCR_ACPU_CLK90K_LO_VAL(data)                                                 (0xFFFFFFFF&((data)<<0))
#define PCR_ACPU_CLK90K_LO_VAL_src(data)                                             ((0xFFFFFFFF&(data))>>0)
#define PCR_ACPU_CLK90K_LO_get_VAL(data)                                             ((0xFFFFFFFF&(data))>>0)


#define PCR_ACPU_CLK90K_HI                                                           0x1801B6D8
#define PCR_ACPU_CLK90K_HI_reg_addr                                                  "0xB801B6D8"
#define PCR_ACPU_CLK90K_HI_reg                                                       0xB801B6D8
#define set_PCR_ACPU_CLK90K_HI_reg(data)   (*((volatile unsigned int*) PCR_ACPU_CLK90K_HI_reg)=data)
#define get_PCR_ACPU_CLK90K_HI_reg   (*((volatile unsigned int*) PCR_ACPU_CLK90K_HI_reg))
#define PCR_ACPU_CLK90K_HI_inst_adr                                                  "0x00B6"
#define PCR_ACPU_CLK90K_HI_inst                                                      0x00B6
#define PCR_ACPU_CLK90K_HI_VAL_shift                                                 (0)
#define PCR_ACPU_CLK90K_HI_VAL_mask                                                  (0x0000FFFF)
#define PCR_ACPU_CLK90K_HI_VAL(data)                                                 (0x0000FFFF&((data)<<0))
#define PCR_ACPU_CLK90K_HI_VAL_src(data)                                             ((0x0000FFFF&(data))>>0)
#define PCR_ACPU_CLK90K_HI_get_VAL(data)                                             ((0x0000FFFF&(data))>>0)


#define PCR_VCPU_CLK27M_90K                                                          0x1801B6DC
#define PCR_VCPU_CLK27M_90K_reg_addr                                                 "0xB801B6DC"
#define PCR_VCPU_CLK27M_90K_reg                                                      0xB801B6DC
#define set_PCR_VCPU_CLK27M_90K_reg(data)   (*((volatile unsigned int*) PCR_VCPU_CLK27M_90K_reg)=data)
#define get_PCR_VCPU_CLK27M_90K_reg   (*((volatile unsigned int*) PCR_VCPU_CLK27M_90K_reg))
#define PCR_VCPU_CLK27M_90K_inst_adr                                                 "0x00B7"
#define PCR_VCPU_CLK27M_90K_inst                                                     0x00B7
#define PCR_VCPU_CLK27M_90K_CNT_shift                                                (0)
#define PCR_VCPU_CLK27M_90K_CNT_mask                                                 (0x000001FF)
#define PCR_VCPU_CLK27M_90K_CNT(data)                                                (0x000001FF&((data)<<0))
#define PCR_VCPU_CLK27M_90K_CNT_src(data)                                            ((0x000001FF&(data))>>0)
#define PCR_VCPU_CLK27M_90K_get_CNT(data)                                            ((0x000001FF&(data))>>0)


#define PCR_VCPU_CLK90K_LO                                                           0x1801B6E0
#define PCR_VCPU_CLK90K_LO_reg_addr                                                  "0xB801B6E0"
#define PCR_VCPU_CLK90K_LO_reg                                                       0xB801B6E0
#define set_PCR_VCPU_CLK90K_LO_reg(data)   (*((volatile unsigned int*) PCR_VCPU_CLK90K_LO_reg)=data)
#define get_PCR_VCPU_CLK90K_LO_reg   (*((volatile unsigned int*) PCR_VCPU_CLK90K_LO_reg))
#define PCR_VCPU_CLK90K_LO_inst_adr                                                  "0x00B8"
#define PCR_VCPU_CLK90K_LO_inst                                                      0x00B8
#define PCR_VCPU_CLK90K_LO_VAL_shift                                                 (0)
#define PCR_VCPU_CLK90K_LO_VAL_mask                                                  (0xFFFFFFFF)
#define PCR_VCPU_CLK90K_LO_VAL(data)                                                 (0xFFFFFFFF&((data)<<0))
#define PCR_VCPU_CLK90K_LO_VAL_src(data)                                             ((0xFFFFFFFF&(data))>>0)
#define PCR_VCPU_CLK90K_LO_get_VAL(data)                                             ((0xFFFFFFFF&(data))>>0)


#define PCR_VCPU_CLK90K_HI                                                           0x1801B6E4
#define PCR_VCPU_CLK90K_HI_reg_addr                                                  "0xB801B6E4"
#define PCR_VCPU_CLK90K_HI_reg                                                       0xB801B6E4
#define set_PCR_VCPU_CLK90K_HI_reg(data)   (*((volatile unsigned int*) PCR_VCPU_CLK90K_HI_reg)=data)
#define get_PCR_VCPU_CLK90K_HI_reg   (*((volatile unsigned int*) PCR_VCPU_CLK90K_HI_reg))
#define PCR_VCPU_CLK90K_HI_inst_adr                                                  "0x00B9"
#define PCR_VCPU_CLK90K_HI_inst                                                      0x00B9
#define PCR_VCPU_CLK90K_HI_VAL_shift                                                 (0)
#define PCR_VCPU_CLK90K_HI_VAL_mask                                                  (0x0000FFFF)
#define PCR_VCPU_CLK90K_HI_VAL(data)                                                 (0x0000FFFF&((data)<<0))
#define PCR_VCPU_CLK90K_HI_VAL_src(data)                                             ((0x0000FFFF&(data))>>0)
#define PCR_VCPU_CLK90K_HI_get_VAL(data)                                             ((0x0000FFFF&(data))>>0)


#define TCWCR                                                                        0x1801B6F0
#define TCWCR_reg_addr                                                               "0xB801B6F0"
#define TCWCR_reg                                                                    0xB801B6F0
#define set_TCWCR_reg(data)   (*((volatile unsigned int*) TCWCR_reg)=data)
#define get_TCWCR_reg   (*((volatile unsigned int*) TCWCR_reg))
#define TCWCR_inst_adr                                                               "0x00BC"
#define TCWCR_inst                                                                   0x00BC
#define TCWCR_Im_wdog_rst_shift                                                      (31)
#define TCWCR_Im_wdog_rst_mask                                                       (0x80000000)
#define TCWCR_Im_wdog_rst(data)                                                      (0x80000000&((data)<<31))
#define TCWCR_Im_wdog_rst_src(data)                                                  ((0x80000000&(data))>>31)
#define TCWCR_get_Im_wdog_rst(data)                                                  ((0x80000000&(data))>>31)
#define TCWCR_NMIC_shift                                                             (12)
#define TCWCR_NMIC_mask                                                              (0x0000F000)
#define TCWCR_NMIC(data)                                                             (0x0000F000&((data)<<12))
#define TCWCR_NMIC_src(data)                                                         ((0x0000F000&(data))>>12)
#define TCWCR_get_NMIC(data)                                                         ((0x0000F000&(data))>>12)
#define TCWCR_WDC_shift                                                              (8)
#define TCWCR_WDC_mask                                                               (0x00000F00)
#define TCWCR_WDC(data)                                                              (0x00000F00&((data)<<8))
#define TCWCR_WDC_src(data)                                                          ((0x00000F00&(data))>>8)
#define TCWCR_get_WDC(data)                                                          ((0x00000F00&(data))>>8)
#define TCWCR_WDEN_shift                                                             (0)
#define TCWCR_WDEN_mask                                                              (0x000000FF)
#define TCWCR_WDEN(data)                                                             (0x000000FF&((data)<<0))
#define TCWCR_WDEN_src(data)                                                         ((0x000000FF&(data))>>0)
#define TCWCR_get_WDEN(data)                                                         ((0x000000FF&(data))>>0)


#define TCWTR                                                                        0x1801B6F4
#define TCWTR_reg_addr                                                               "0xB801B6F4"
#define TCWTR_reg                                                                    0xB801B6F4
#define set_TCWTR_reg(data)   (*((volatile unsigned int*) TCWTR_reg)=data)
#define get_TCWTR_reg   (*((volatile unsigned int*) TCWTR_reg))
#define TCWTR_inst_adr                                                               "0x00BD"
#define TCWTR_inst                                                                   0x00BD
#define TCWTR_WDCLR_shift                                                            (0)
#define TCWTR_WDCLR_mask                                                             (0x00000001)
#define TCWTR_WDCLR(data)                                                            (0x00000001&((data)<<0))
#define TCWTR_WDCLR_src(data)                                                        ((0x00000001&(data))>>0)
#define TCWTR_get_WDCLR(data)                                                        ((0x00000001&(data))>>0)


#define TCWNMI                                                                       0x1801B6F8
#define TCWNMI_reg_addr                                                              "0xB801B6F8"
#define TCWNMI_reg                                                                   0xB801B6F8
#define set_TCWNMI_reg(data)   (*((volatile unsigned int*) TCWNMI_reg)=data)
#define get_TCWNMI_reg   (*((volatile unsigned int*) TCWNMI_reg))
#define TCWNMI_inst_adr                                                              "0x00BE"
#define TCWNMI_inst                                                                  0x00BE
#define TCWNMI_SEL_shift                                                             (0)
#define TCWNMI_SEL_mask                                                              (0xFFFFFFFF)
#define TCWNMI_SEL(data)                                                             (0xFFFFFFFF&((data)<<0))
#define TCWNMI_SEL_src(data)                                                         ((0xFFFFFFFF&(data))>>0)
#define TCWNMI_get_SEL(data)                                                         ((0xFFFFFFFF&(data))>>0)


#define TCWOV                                                                        0x1801B6FC
#define TCWOV_reg_addr                                                               "0xB801B6FC"
#define TCWOV_reg                                                                    0xB801B6FC
#define set_TCWOV_reg(data)   (*((volatile unsigned int*) TCWOV_reg)=data)
#define get_TCWOV_reg   (*((volatile unsigned int*) TCWOV_reg))
#define TCWOV_inst_adr                                                               "0x00BF"
#define TCWOV_inst                                                                   0x00BF
#define TCWOV_SEL_shift                                                              (0)
#define TCWOV_SEL_mask                                                               (0xFFFFFFFF)
#define TCWOV_SEL(data)                                                              (0xFFFFFFFF&((data)<<0))
#define TCWOV_SEL_src(data)                                                          ((0xFFFFFFFF&(data))>>0)
#define TCWOV_get_SEL(data)                                                          ((0xFFFFFFFF&(data))>>0)


#define DDC1_I2C_CR                                                                  0x1801B900
#define DDC1_I2C_CR_reg_addr                                                         "0xB801B900"
#define DDC1_I2C_CR_reg                                                              0xB801B900
#define set_DDC1_I2C_CR_reg(data)   (*((volatile unsigned int*) DDC1_I2C_CR_reg)=data)
#define get_DDC1_I2C_CR_reg   (*((volatile unsigned int*) DDC1_I2C_CR_reg))
#define DDC1_I2C_CR_inst_adr                                                         "0x0040"
#define DDC1_I2C_CR_inst                                                             0x0040
#define DDC1_I2C_CR_CMDERR_IE_shift                                                  (7)
#define DDC1_I2C_CR_CMDERR_IE_mask                                                   (0x00000080)
#define DDC1_I2C_CR_CMDERR_IE(data)                                                  (0x00000080&((data)<<7))
#define DDC1_I2C_CR_CMDERR_IE_src(data)                                              ((0x00000080&(data))>>7)
#define DDC1_I2C_CR_get_CMDERR_IE(data)                                              ((0x00000080&(data))>>7)
#define DDC1_I2C_CR_TIMEOUT_EN_shift                                                 (6)
#define DDC1_I2C_CR_TIMEOUT_EN_mask                                                  (0x00000040)
#define DDC1_I2C_CR_TIMEOUT_EN(data)                                                 (0x00000040&((data)<<6))
#define DDC1_I2C_CR_TIMEOUT_EN_src(data)                                             ((0x00000040&(data))>>6)
#define DDC1_I2C_CR_get_TIMEOUT_EN(data)                                             ((0x00000040&(data))>>6)
#define DDC1_I2C_CR_DEBOUNCE_MODE_shift                                              (4)
#define DDC1_I2C_CR_DEBOUNCE_MODE_mask                                               (0x00000030)
#define DDC1_I2C_CR_DEBOUNCE_MODE(data)                                              (0x00000030&((data)<<4))
#define DDC1_I2C_CR_DEBOUNCE_MODE_src(data)                                          ((0x00000030&(data))>>4)
#define DDC1_I2C_CR_get_DEBOUNCE_MODE(data)                                          ((0x00000030&(data))>>4)
#define DDC1_I2C_CR_TIMEOUT_IE_shift                                                 (3)
#define DDC1_I2C_CR_TIMEOUT_IE_mask                                                  (0x00000008)
#define DDC1_I2C_CR_TIMEOUT_IE(data)                                                 (0x00000008&((data)<<3))
#define DDC1_I2C_CR_TIMEOUT_IE_src(data)                                             ((0x00000008&(data))>>3)
#define DDC1_I2C_CR_get_TIMEOUT_IE(data)                                             ((0x00000008&(data))>>3)
#define DDC1_I2C_CR_RETIME_M_shift                                                   (0)
#define DDC1_I2C_CR_RETIME_M_mask                                                    (0x00000007)
#define DDC1_I2C_CR_RETIME_M(data)                                                   (0x00000007&((data)<<0))
#define DDC1_I2C_CR_RETIME_M_src(data)                                               ((0x00000007&(data))>>0)
#define DDC1_I2C_CR_get_RETIME_M(data)                                               ((0x00000007&(data))>>0)


#define DDC1_I2C_SR1                                                                 0x1801B904
#define DDC1_I2C_SR1_reg_addr                                                        "0xB801B904"
#define DDC1_I2C_SR1_reg                                                             0xB801B904
#define set_DDC1_I2C_SR1_reg(data)   (*((volatile unsigned int*) DDC1_I2C_SR1_reg)=data)
#define get_DDC1_I2C_SR1_reg   (*((volatile unsigned int*) DDC1_I2C_SR1_reg))
#define DDC1_I2C_SR1_inst_adr                                                        "0x0041"
#define DDC1_I2C_SR1_inst                                                            0x0041
#define DDC1_I2C_SR1_CMDERR_shift                                                    (7)
#define DDC1_I2C_SR1_CMDERR_mask                                                     (0x00000080)
#define DDC1_I2C_SR1_CMDERR(data)                                                    (0x00000080&((data)<<7))
#define DDC1_I2C_SR1_CMDERR_src(data)                                                ((0x00000080&(data))>>7)
#define DDC1_I2C_SR1_get_CMDERR(data)                                                ((0x00000080&(data))>>7)
#define DDC1_I2C_SR1_Finish_shift                                                    (4)
#define DDC1_I2C_SR1_Finish_mask                                                     (0x00000010)
#define DDC1_I2C_SR1_Finish(data)                                                    (0x00000010&((data)<<4))
#define DDC1_I2C_SR1_Finish_src(data)                                                ((0x00000010&(data))>>4)
#define DDC1_I2C_SR1_get_Finish(data)                                                ((0x00000010&(data))>>4)
#define DDC1_I2C_SR1_timeout_shift                                                   (3)
#define DDC1_I2C_SR1_timeout_mask                                                    (0x00000008)
#define DDC1_I2C_SR1_timeout(data)                                                   (0x00000008&((data)<<3))
#define DDC1_I2C_SR1_timeout_src(data)                                               ((0x00000008&(data))>>3)
#define DDC1_I2C_SR1_get_timeout(data)                                               ((0x00000008&(data))>>3)


#define DDC1_I2C_TR                                                                  0x1801B908
#define DDC1_I2C_TR_reg_addr                                                         "0xB801B908"
#define DDC1_I2C_TR_reg                                                              0xB801B908
#define set_DDC1_I2C_TR_reg(data)   (*((volatile unsigned int*) DDC1_I2C_TR_reg)=data)
#define get_DDC1_I2C_TR_reg   (*((volatile unsigned int*) DDC1_I2C_TR_reg))
#define DDC1_I2C_TR_inst_adr                                                         "0x0042"
#define DDC1_I2C_TR_inst                                                             0x0042
#define DDC1_I2C_TR_timeout_val_shift                                                (0)
#define DDC1_I2C_TR_timeout_val_mask                                                 (0x000000FF)
#define DDC1_I2C_TR_timeout_val(data)                                                (0x000000FF&((data)<<0))
#define DDC1_I2C_TR_timeout_val_src(data)                                            ((0x000000FF&(data))>>0)
#define DDC1_I2C_TR_get_timeout_val(data)                                            ((0x000000FF&(data))>>0)


#define DDC1_EDID_CR                                                                 0x1801B90C
#define DDC1_EDID_CR_reg_addr                                                        "0xB801B90C"
#define DDC1_EDID_CR_reg                                                             0xB801B90C
#define set_DDC1_EDID_CR_reg(data)   (*((volatile unsigned int*) DDC1_EDID_CR_reg)=data)
#define get_DDC1_EDID_CR_reg   (*((volatile unsigned int*) DDC1_EDID_CR_reg))
#define DDC1_EDID_CR_inst_adr                                                        "0x0043"
#define DDC1_EDID_CR_inst                                                            0x0043
#define DDC1_EDID_CR_EDID_ADDRESS_shift                                              (5)
#define DDC1_EDID_CR_EDID_ADDRESS_mask                                               (0x000000E0)
#define DDC1_EDID_CR_EDID_ADDRESS(data)                                              (0x000000E0&((data)<<5))
#define DDC1_EDID_CR_EDID_ADDRESS_src(data)                                          ((0x000000E0&(data))>>5)
#define DDC1_EDID_CR_get_EDID_ADDRESS(data)                                          ((0x000000E0&(data))>>5)
#define DDC1_EDID_CR_FINISH_INT_EN_shift                                             (4)
#define DDC1_EDID_CR_FINISH_INT_EN_mask                                              (0x00000010)
#define DDC1_EDID_CR_FINISH_INT_EN(data)                                             (0x00000010&((data)<<4))
#define DDC1_EDID_CR_FINISH_INT_EN_src(data)                                         ((0x00000010&(data))>>4)
#define DDC1_EDID_CR_get_FINISH_INT_EN(data)                                         ((0x00000010&(data))>>4)
#define DDC1_EDID_CR_DDC1_FORCE_shift                                                (3)
#define DDC1_EDID_CR_DDC1_FORCE_mask                                                 (0x00000008)
#define DDC1_EDID_CR_DDC1_FORCE(data)                                                (0x00000008&((data)<<3))
#define DDC1_EDID_CR_DDC1_FORCE_src(data)                                            ((0x00000008&(data))>>3)
#define DDC1_EDID_CR_get_DDC1_FORCE(data)                                            ((0x00000008&(data))>>3)
#define DDC1_EDID_CR_DDC2B_FORCE_shift                                               (2)
#define DDC1_EDID_CR_DDC2B_FORCE_mask                                                (0x00000004)
#define DDC1_EDID_CR_DDC2B_FORCE(data)                                               (0x00000004&((data)<<2))
#define DDC1_EDID_CR_DDC2B_FORCE_src(data)                                           ((0x00000004&(data))>>2)
#define DDC1_EDID_CR_get_DDC2B_FORCE(data)                                           ((0x00000004&(data))>>2)
#define DDC1_EDID_CR_EDID_SRWEN_shift                                                (1)
#define DDC1_EDID_CR_EDID_SRWEN_mask                                                 (0x00000002)
#define DDC1_EDID_CR_EDID_SRWEN(data)                                                (0x00000002&((data)<<1))
#define DDC1_EDID_CR_EDID_SRWEN_src(data)                                            ((0x00000002&(data))>>1)
#define DDC1_EDID_CR_get_EDID_SRWEN(data)                                            ((0x00000002&(data))>>1)
#define DDC1_EDID_CR_EDID_EN_shift                                                   (0)
#define DDC1_EDID_CR_EDID_EN_mask                                                    (0x00000001)
#define DDC1_EDID_CR_EDID_EN(data)                                                   (0x00000001&((data)<<0))
#define DDC1_EDID_CR_EDID_EN_src(data)                                               ((0x00000001&(data))>>0)
#define DDC1_EDID_CR_get_EDID_EN(data)                                               ((0x00000001&(data))>>0)


#define DDC1_DDC_VCR                                                                 0x1801B910
#define DDC1_DDC_VCR_reg_addr                                                        "0xB801B910"
#define DDC1_DDC_VCR_reg                                                             0xB801B910
#define set_DDC1_DDC_VCR_reg(data)   (*((volatile unsigned int*) DDC1_DDC_VCR_reg)=data)
#define get_DDC1_DDC_VCR_reg   (*((volatile unsigned int*) DDC1_DDC_VCR_reg))
#define DDC1_DDC_VCR_inst_adr                                                        "0x0044"
#define DDC1_DDC_VCR_inst                                                            0x0044
#define DDC1_DDC_VCR_DDC1_VCount_shift                                               (0)
#define DDC1_DDC_VCR_DDC1_VCount_mask                                                (0x000000FF)
#define DDC1_DDC_VCR_DDC1_VCount(data)                                               (0x000000FF&((data)<<0))
#define DDC1_DDC_VCR_DDC1_VCount_src(data)                                           ((0x000000FF&(data))>>0)
#define DDC1_DDC_VCR_get_DDC1_VCount(data)                                           ((0x000000FF&(data))>>0)


#define DDC1_EDID_IMSWSAR                                                            0x1801B914
#define DDC1_EDID_IMSWSAR_reg_addr                                                   "0xB801B914"
#define DDC1_EDID_IMSWSAR_reg                                                        0xB801B914
#define set_DDC1_EDID_IMSWSAR_reg(data)   (*((volatile unsigned int*) DDC1_EDID_IMSWSAR_reg)=data)
#define get_DDC1_EDID_IMSWSAR_reg   (*((volatile unsigned int*) DDC1_EDID_IMSWSAR_reg))
#define DDC1_EDID_IMSWSAR_inst_adr                                                   "0x0045"
#define DDC1_EDID_IMSWSAR_inst                                                       0x0045
#define DDC1_EDID_IMSWSAR_EDID_SADR_shift                                            (0)
#define DDC1_EDID_IMSWSAR_EDID_SADR_mask                                             (0x000000FF)
#define DDC1_EDID_IMSWSAR_EDID_SADR(data)                                            (0x000000FF&((data)<<0))
#define DDC1_EDID_IMSWSAR_EDID_SADR_src(data)                                        ((0x000000FF&(data))>>0)
#define DDC1_EDID_IMSWSAR_get_EDID_SADR(data)                                        ((0x000000FF&(data))>>0)


#define DDC1_EDID_IMSWEAR                                                            0x1801B918
#define DDC1_EDID_IMSWEAR_reg_addr                                                   "0xB801B918"
#define DDC1_EDID_IMSWEAR_reg                                                        0xB801B918
#define set_DDC1_EDID_IMSWEAR_reg(data)   (*((volatile unsigned int*) DDC1_EDID_IMSWEAR_reg)=data)
#define get_DDC1_EDID_IMSWEAR_reg   (*((volatile unsigned int*) DDC1_EDID_IMSWEAR_reg))
#define DDC1_EDID_IMSWEAR_inst_adr                                                   "0x0046"
#define DDC1_EDID_IMSWEAR_inst                                                       0x0046
#define DDC1_EDID_IMSWEAR_EDID_EADR_shift                                            (0)
#define DDC1_EDID_IMSWEAR_EDID_EADR_mask                                             (0x000000FF)
#define DDC1_EDID_IMSWEAR_EDID_EADR(data)                                            (0x000000FF&((data)<<0))
#define DDC1_EDID_IMSWEAR_EDID_EADR_src(data)                                        ((0x000000FF&(data))>>0)
#define DDC1_EDID_IMSWEAR_get_EDID_EADR(data)                                        ((0x000000FF&(data))>>0)


#define DDC1_EDID_IR                                                                 0x1801B91C
#define DDC1_EDID_IR_reg_addr                                                        "0xB801B91C"
#define DDC1_EDID_IR_reg                                                             0xB801B91C
#define set_DDC1_EDID_IR_reg(data)   (*((volatile unsigned int*) DDC1_EDID_IR_reg)=data)
#define get_DDC1_EDID_IR_reg   (*((volatile unsigned int*) DDC1_EDID_IR_reg))
#define DDC1_EDID_IR_inst_adr                                                        "0x0047"
#define DDC1_EDID_IR_inst                                                            0x0047
#define DDC1_EDID_IR_EDIDMODE_shift                                                  (6)
#define DDC1_EDID_IR_EDIDMODE_mask                                                   (0x00000040)
#define DDC1_EDID_IR_EDIDMODE(data)                                                  (0x00000040&((data)<<6))
#define DDC1_EDID_IR_EDIDMODE_src(data)                                              ((0x00000040&(data))>>6)
#define DDC1_EDID_IR_get_EDIDMODE(data)                                              ((0x00000040&(data))>>6)
#define DDC1_EDID_IR_EDIDSUBADDRESS_shift                                            (5)
#define DDC1_EDID_IR_EDIDSUBADDRESS_mask                                             (0x00000020)
#define DDC1_EDID_IR_EDIDSUBADDRESS(data)                                            (0x00000020&((data)<<5))
#define DDC1_EDID_IR_EDIDSUBADDRESS_src(data)                                        ((0x00000020&(data))>>5)
#define DDC1_EDID_IR_get_EDIDSUBADDRESS(data)                                        ((0x00000020&(data))>>5)
#define DDC1_EDID_IR_EDIDSTOP_shift                                                  (4)
#define DDC1_EDID_IR_EDIDSTOP_mask                                                   (0x00000010)
#define DDC1_EDID_IR_EDIDSTOP(data)                                                  (0x00000010&((data)<<4))
#define DDC1_EDID_IR_EDIDSTOP_src(data)                                              ((0x00000010&(data))>>4)
#define DDC1_EDID_IR_get_EDIDSTOP(data)                                              ((0x00000010&(data))>>4)
#define DDC1_EDID_IR_I2C_M_RD_ST_IE_shift                                            (3)
#define DDC1_EDID_IR_I2C_M_RD_ST_IE_mask                                             (0x00000008)
#define DDC1_EDID_IR_I2C_M_RD_ST_IE(data)                                            (0x00000008&((data)<<3))
#define DDC1_EDID_IR_I2C_M_RD_ST_IE_src(data)                                        ((0x00000008&(data))>>3)
#define DDC1_EDID_IR_get_I2C_M_RD_ST_IE(data)                                        ((0x00000008&(data))>>3)
#define DDC1_EDID_IR_I2C_M_RD_SP_IE_shift                                            (2)
#define DDC1_EDID_IR_I2C_M_RD_SP_IE_mask                                             (0x00000004)
#define DDC1_EDID_IR_I2C_M_RD_SP_IE(data)                                            (0x00000004&((data)<<2))
#define DDC1_EDID_IR_I2C_M_RD_SP_IE_src(data)                                        ((0x00000004&(data))>>2)
#define DDC1_EDID_IR_get_I2C_M_RD_SP_IE(data)                                        ((0x00000004&(data))>>2)
#define DDC1_EDID_IR_EDIDSUBADDRESS_IE_shift                                         (1)
#define DDC1_EDID_IR_EDIDSUBADDRESS_IE_mask                                          (0x00000002)
#define DDC1_EDID_IR_EDIDSUBADDRESS_IE(data)                                         (0x00000002&((data)<<1))
#define DDC1_EDID_IR_EDIDSUBADDRESS_IE_src(data)                                     ((0x00000002&(data))>>1)
#define DDC1_EDID_IR_get_EDIDSUBADDRESS_IE(data)                                     ((0x00000002&(data))>>1)
#define DDC1_EDID_IR_EDIDSTOP_IE_shift                                               (0)
#define DDC1_EDID_IR_EDIDSTOP_IE_mask                                                (0x00000001)
#define DDC1_EDID_IR_EDIDSTOP_IE(data)                                               (0x00000001&((data)<<0))
#define DDC1_EDID_IR_EDIDSTOP_IE_src(data)                                           ((0x00000001&(data))>>0)
#define DDC1_EDID_IR_get_EDIDSTOP_IE(data)                                           ((0x00000001&(data))>>0)


#define DDC1_DDC_SIR                                                                 0x1801B920
#define DDC1_DDC_SIR_reg_addr                                                        "0xB801B920"
#define DDC1_DDC_SIR_reg                                                             0xB801B920
#define set_DDC1_DDC_SIR_reg(data)   (*((volatile unsigned int*) DDC1_DDC_SIR_reg)=data)
#define get_DDC1_DDC_SIR_reg   (*((volatile unsigned int*) DDC1_DDC_SIR_reg))
#define DDC1_DDC_SIR_inst_adr                                                        "0x0048"
#define DDC1_DDC_SIR_inst                                                            0x0048
#define DDC1_DDC_SIR_EDIDAP_shift                                                    (0)
#define DDC1_DDC_SIR_EDIDAP_mask                                                     (0x000000FF)
#define DDC1_DDC_SIR_EDIDAP(data)                                                    (0x000000FF&((data)<<0))
#define DDC1_DDC_SIR_EDIDAP_src(data)                                                ((0x000000FF&(data))>>0)
#define DDC1_DDC_SIR_get_EDIDAP(data)                                                ((0x000000FF&(data))>>0)


#define DDC1_DDC_SAP                                                                 0x1801B924
#define DDC1_DDC_SAP_reg_addr                                                        "0xB801B924"
#define DDC1_DDC_SAP_reg                                                             0xB801B924
#define set_DDC1_DDC_SAP_reg(data)   (*((volatile unsigned int*) DDC1_DDC_SAP_reg)=data)
#define get_DDC1_DDC_SAP_reg   (*((volatile unsigned int*) DDC1_DDC_SAP_reg))
#define DDC1_DDC_SAP_inst_adr                                                        "0x0049"
#define DDC1_DDC_SAP_inst                                                            0x0049
#define DDC1_DDC_SAP_EDIDDP_shift                                                    (0)
#define DDC1_DDC_SAP_EDIDDP_mask                                                     (0x000000FF)
#define DDC1_DDC_SAP_EDIDDP(data)                                                    (0x000000FF&((data)<<0))
#define DDC1_DDC_SAP_EDIDDP_src(data)                                                ((0x000000FF&(data))>>0)
#define DDC1_DDC_SAP_get_EDIDDP(data)                                                ((0x000000FF&(data))>>0)


#define DDC1_DDC_BISTCR                                                              0x1801B928
#define DDC1_DDC_BISTCR_reg_addr                                                     "0xB801B928"
#define DDC1_DDC_BISTCR_reg                                                          0xB801B928
#define set_DDC1_DDC_BISTCR_reg(data)   (*((volatile unsigned int*) DDC1_DDC_BISTCR_reg)=data)
#define get_DDC1_DDC_BISTCR_reg   (*((volatile unsigned int*) DDC1_DDC_BISTCR_reg))
#define DDC1_DDC_BISTCR_inst_adr                                                     "0x004A"
#define DDC1_DDC_BISTCR_inst                                                         0x004A
#define DDC1_DDC_BISTCR_DDC_BIST_RME_shift                                           (4)
#define DDC1_DDC_BISTCR_DDC_BIST_RME_mask                                            (0x00000010)
#define DDC1_DDC_BISTCR_DDC_BIST_RME(data)                                           (0x00000010&((data)<<4))
#define DDC1_DDC_BISTCR_DDC_BIST_RME_src(data)                                       ((0x00000010&(data))>>4)
#define DDC1_DDC_BISTCR_get_DDC_BIST_RME(data)                                       ((0x00000010&(data))>>4)
#define DDC1_DDC_BISTCR_DDC_BIST_RM_shift                                            (0)
#define DDC1_DDC_BISTCR_DDC_BIST_RM_mask                                             (0x0000000F)
#define DDC1_DDC_BISTCR_DDC_BIST_RM(data)                                            (0x0000000F&((data)<<0))
#define DDC1_DDC_BISTCR_DDC_BIST_RM_src(data)                                        ((0x0000000F&(data))>>0)
#define DDC1_DDC_BISTCR_get_DDC_BIST_RM(data)                                        ((0x0000000F&(data))>>0)


#define DDC1_DDC_SCR                                                                 0x1801B92C
#define DDC1_DDC_SCR_reg_addr                                                        "0xB801B92C"
#define DDC1_DDC_SCR_reg                                                             0xB801B92C
#define set_DDC1_DDC_SCR_reg(data)   (*((volatile unsigned int*) DDC1_DDC_SCR_reg)=data)
#define get_DDC1_DDC_SCR_reg   (*((volatile unsigned int*) DDC1_DDC_SCR_reg))
#define DDC1_DDC_SCR_inst_adr                                                        "0x004B"
#define DDC1_DDC_SCR_inst                                                            0x004B
#define DDC1_DDC_SCR_SEGPT_LATIE_shift                                               (7)
#define DDC1_DDC_SCR_SEGPT_LATIE_mask                                                (0x00000080)
#define DDC1_DDC_SCR_SEGPT_LATIE(data)                                               (0x00000080&((data)<<7))
#define DDC1_DDC_SCR_SEGPT_LATIE_src(data)                                           ((0x00000080&(data))>>7)
#define DDC1_DDC_SCR_get_SEGPT_LATIE(data)                                           ((0x00000080&(data))>>7)
#define DDC1_DDC_SCR_Dataoutputdelay_sel_shift                                       (4)
#define DDC1_DDC_SCR_Dataoutputdelay_sel_mask                                        (0x00000070)
#define DDC1_DDC_SCR_Dataoutputdelay_sel(data)                                       (0x00000070&((data)<<4))
#define DDC1_DDC_SCR_Dataoutputdelay_sel_src(data)                                   ((0x00000070&(data))>>4)
#define DDC1_DDC_SCR_get_Dataoutputdelay_sel(data)                                   ((0x00000070&(data))>>4)
#define DDC1_DDC_SCR_I2C_M_RD_ST_STS_shift                                           (2)
#define DDC1_DDC_SCR_I2C_M_RD_ST_STS_mask                                            (0x00000004)
#define DDC1_DDC_SCR_I2C_M_RD_ST_STS(data)                                           (0x00000004&((data)<<2))
#define DDC1_DDC_SCR_I2C_M_RD_ST_STS_src(data)                                       ((0x00000004&(data))>>2)
#define DDC1_DDC_SCR_get_I2C_M_RD_ST_STS(data)                                       ((0x00000004&(data))>>2)
#define DDC1_DDC_SCR_I2C_M_RD_SP_STS_shift                                           (1)
#define DDC1_DDC_SCR_I2C_M_RD_SP_STS_mask                                            (0x00000002)
#define DDC1_DDC_SCR_I2C_M_RD_SP_STS(data)                                           (0x00000002&((data)<<1))
#define DDC1_DDC_SCR_I2C_M_RD_SP_STS_src(data)                                       ((0x00000002&(data))>>1)
#define DDC1_DDC_SCR_get_I2C_M_RD_SP_STS(data)                                       ((0x00000002&(data))>>1)
#define DDC1_DDC_SCR_SGID_EN_shift                                                   (0)
#define DDC1_DDC_SCR_SGID_EN_mask                                                    (0x00000001)
#define DDC1_DDC_SCR_SGID_EN(data)                                                   (0x00000001&((data)<<0))
#define DDC1_DDC_SCR_SGID_EN_src(data)                                               ((0x00000001&(data))>>0)
#define DDC1_DDC_SCR_get_SGID_EN(data)                                               ((0x00000001&(data))>>0)


#define DDC1_DDC_SSAR                                                                0x1801B930
#define DDC1_DDC_SSAR_reg_addr                                                       "0xB801B930"
#define DDC1_DDC_SSAR_reg                                                            0xB801B930
#define set_DDC1_DDC_SSAR_reg(data)   (*((volatile unsigned int*) DDC1_DDC_SSAR_reg)=data)
#define get_DDC1_DDC_SSAR_reg   (*((volatile unsigned int*) DDC1_DDC_SSAR_reg))
#define DDC1_DDC_SSAR_inst_adr                                                       "0x004C"
#define DDC1_DDC_SSAR_inst                                                           0x004C
#define DDC1_DDC_SSAR_SGID_ADDRESS_shift                                             (1)
#define DDC1_DDC_SSAR_SGID_ADDRESS_mask                                              (0x000000FE)
#define DDC1_DDC_SSAR_SGID_ADDRESS(data)                                             (0x000000FE&((data)<<1))
#define DDC1_DDC_SSAR_SGID_ADDRESS_src(data)                                         ((0x000000FE&(data))>>1)
#define DDC1_DDC_SSAR_get_SGID_ADDRESS(data)                                         ((0x000000FE&(data))>>1)
#define DDC1_DDC_SSAR_SGID_DTRDEN_shift                                              (0)
#define DDC1_DDC_SSAR_SGID_DTRDEN_mask                                               (0x00000001)
#define DDC1_DDC_SSAR_SGID_DTRDEN(data)                                              (0x00000001&((data)<<0))
#define DDC1_DDC_SSAR_SGID_DTRDEN_src(data)                                          ((0x00000001&(data))>>0)
#define DDC1_DDC_SSAR_get_SGID_DTRDEN(data)                                          ((0x00000001&(data))>>0)


#define DDC1_DDC_SPR                                                                 0x1801B934
#define DDC1_DDC_SPR_reg_addr                                                        "0xB801B934"
#define DDC1_DDC_SPR_reg                                                             0xB801B934
#define set_DDC1_DDC_SPR_reg(data)   (*((volatile unsigned int*) DDC1_DDC_SPR_reg)=data)
#define get_DDC1_DDC_SPR_reg   (*((volatile unsigned int*) DDC1_DDC_SPR_reg))
#define DDC1_DDC_SPR_inst_adr                                                        "0x004D"
#define DDC1_DDC_SPR_inst                                                            0x004D
#define DDC1_DDC_SPR_SEGPT_LATCHED_shift                                             (7)
#define DDC1_DDC_SPR_SEGPT_LATCHED_mask                                              (0x00000080)
#define DDC1_DDC_SPR_SEGPT_LATCHED(data)                                             (0x00000080&((data)<<7))
#define DDC1_DDC_SPR_SEGPT_LATCHED_src(data)                                         ((0x00000080&(data))>>7)
#define DDC1_DDC_SPR_get_SEGPT_LATCHED(data)                                         ((0x00000080&(data))>>7)
#define DDC1_DDC_SPR_SEG_PT_shift                                                    (0)
#define DDC1_DDC_SPR_SEG_PT_mask                                                     (0x0000007F)
#define DDC1_DDC_SPR_SEG_PT(data)                                                    (0x0000007F&((data)<<0))
#define DDC1_DDC_SPR_SEG_PT_src(data)                                                ((0x0000007F&(data))>>0)
#define DDC1_DDC_SPR_get_SEG_PT(data)                                                ((0x0000007F&(data))>>0)


#define DDC1_DDC_SFCR                                                                0x1801B938
#define DDC1_DDC_SFCR_reg_addr                                                       "0xB801B938"
#define DDC1_DDC_SFCR_reg                                                            0xB801B938
#define set_DDC1_DDC_SFCR_reg(data)   (*((volatile unsigned int*) DDC1_DDC_SFCR_reg)=data)
#define get_DDC1_DDC_SFCR_reg   (*((volatile unsigned int*) DDC1_DDC_SFCR_reg))
#define DDC1_DDC_SFCR_inst_adr                                                       "0x004E"
#define DDC1_DDC_SFCR_inst                                                           0x004E
#define DDC1_DDC_SFCR_SPECIAL_MODE_shift                                             (3)
#define DDC1_DDC_SFCR_SPECIAL_MODE_mask                                              (0x00000008)
#define DDC1_DDC_SFCR_SPECIAL_MODE(data)                                             (0x00000008&((data)<<3))
#define DDC1_DDC_SFCR_SPECIAL_MODE_src(data)                                         ((0x00000008&(data))>>3)
#define DDC1_DDC_SFCR_get_SPECIAL_MODE(data)                                         ((0x00000008&(data))>>3)
#define DDC1_DDC_SFCR_DOFFPT_RESET_shift                                             (2)
#define DDC1_DDC_SFCR_DOFFPT_RESET_mask                                              (0x00000004)
#define DDC1_DDC_SFCR_DOFFPT_RESET(data)                                             (0x00000004&((data)<<2))
#define DDC1_DDC_SFCR_DOFFPT_RESET_src(data)                                         ((0x00000004&(data))>>2)
#define DDC1_DDC_SFCR_get_DOFFPT_RESET(data)                                         ((0x00000004&(data))>>2)
#define DDC1_DDC_SFCR_DIFFPT_RESET_shift                                             (1)
#define DDC1_DDC_SFCR_DIFFPT_RESET_mask                                              (0x00000002)
#define DDC1_DDC_SFCR_DIFFPT_RESET(data)                                             (0x00000002&((data)<<1))
#define DDC1_DDC_SFCR_DIFFPT_RESET_src(data)                                         ((0x00000002&(data))>>1)
#define DDC1_DDC_SFCR_get_DIFFPT_RESET(data)                                         ((0x00000002&(data))>>1)
#define DDC1_DDC_SFCR_CIID_EN_shift                                                  (0)
#define DDC1_DDC_SFCR_CIID_EN_mask                                                   (0x00000001)
#define DDC1_DDC_SFCR_CIID_EN(data)                                                  (0x00000001&((data)<<0))
#define DDC1_DDC_SFCR_CIID_EN_src(data)                                              ((0x00000001&(data))>>0)
#define DDC1_DDC_SFCR_get_CIID_EN(data)                                              ((0x00000001&(data))>>0)


#define DDC1_DDC_SFSAR                                                               0x1801B93C
#define DDC1_DDC_SFSAR_reg_addr                                                      "0xB801B93C"
#define DDC1_DDC_SFSAR_reg                                                           0xB801B93C
#define set_DDC1_DDC_SFSAR_reg(data)   (*((volatile unsigned int*) DDC1_DDC_SFSAR_reg)=data)
#define get_DDC1_DDC_SFSAR_reg   (*((volatile unsigned int*) DDC1_DDC_SFSAR_reg))
#define DDC1_DDC_SFSAR_inst_adr                                                      "0x004F"
#define DDC1_DDC_SFSAR_inst                                                          0x004F
#define DDC1_DDC_SFSAR_CIID_ADDRESS_shift                                            (1)
#define DDC1_DDC_SFSAR_CIID_ADDRESS_mask                                             (0x000000FE)
#define DDC1_DDC_SFSAR_CIID_ADDRESS(data)                                            (0x000000FE&((data)<<1))
#define DDC1_DDC_SFSAR_CIID_ADDRESS_src(data)                                        ((0x000000FE&(data))>>1)
#define DDC1_DDC_SFSAR_get_CIID_ADDRESS(data)                                        ((0x000000FE&(data))>>1)
#define DDC1_DDC_SFSAR_CIRWS_CURRENT_shift                                           (0)
#define DDC1_DDC_SFSAR_CIRWS_CURRENT_mask                                            (0x00000001)
#define DDC1_DDC_SFSAR_CIRWS_CURRENT(data)                                           (0x00000001&((data)<<0))
#define DDC1_DDC_SFSAR_CIRWS_CURRENT_src(data)                                       ((0x00000001&(data))>>0)
#define DDC1_DDC_SFSAR_get_CIRWS_CURRENT(data)                                       ((0x00000001&(data))>>0)


#define DDC1_DDC_SFDR                                                                0x1801B940
#define DDC1_DDC_SFDR_reg_addr                                                       "0xB801B940"
#define DDC1_DDC_SFDR_reg                                                            0xB801B940
#define set_DDC1_DDC_SFDR_reg(data)   (*((volatile unsigned int*) DDC1_DDC_SFDR_reg)=data)
#define get_DDC1_DDC_SFDR_reg   (*((volatile unsigned int*) DDC1_DDC_SFDR_reg))
#define DDC1_DDC_SFDR_inst_adr                                                       "0x0050"
#define DDC1_DDC_SFDR_inst                                                           0x0050
#define DDC1_DDC_SFDR_CIIDDP_shift                                                   (0)
#define DDC1_DDC_SFDR_CIIDDP_mask                                                    (0x000000FF)
#define DDC1_DDC_SFDR_CIIDDP(data)                                                   (0x000000FF&((data)<<0))
#define DDC1_DDC_SFDR_CIIDDP_src(data)                                               ((0x000000FF&(data))>>0)
#define DDC1_DDC_SFDR_get_CIIDDP(data)                                               ((0x000000FF&(data))>>0)


#define DDC1_DDC_SFBSR                                                               0x1801B944
#define DDC1_DDC_SFBSR_reg_addr                                                      "0xB801B944"
#define DDC1_DDC_SFBSR_reg                                                           0xB801B944
#define set_DDC1_DDC_SFBSR_reg(data)   (*((volatile unsigned int*) DDC1_DDC_SFBSR_reg)=data)
#define get_DDC1_DDC_SFBSR_reg   (*((volatile unsigned int*) DDC1_DDC_SFBSR_reg))
#define DDC1_DDC_SFBSR_inst_adr                                                      "0x0051"
#define DDC1_DDC_SFBSR_inst                                                          0x0051
#define DDC1_DDC_SFBSR_CIRWS_2ND_shift                                               (5)
#define DDC1_DDC_SFBSR_CIRWS_2ND_mask                                                (0x00000020)
#define DDC1_DDC_SFBSR_CIRWS_2ND(data)                                               (0x00000020&((data)<<5))
#define DDC1_DDC_SFBSR_CIRWS_2ND_src(data)                                           ((0x00000020&(data))>>5)
#define DDC1_DDC_SFBSR_get_CIRWS_2ND(data)                                           ((0x00000020&(data))>>5)
#define DDC1_DDC_SFBSR_CIRWS_1ST_shift                                               (4)
#define DDC1_DDC_SFBSR_CIRWS_1ST_mask                                                (0x00000010)
#define DDC1_DDC_SFBSR_CIRWS_1ST(data)                                               (0x00000010&((data)<<4))
#define DDC1_DDC_SFBSR_CIRWS_1ST_src(data)                                           ((0x00000010&(data))>>4)
#define DDC1_DDC_SFBSR_get_CIRWS_1ST(data)                                           ((0x00000010&(data))>>4)
#define DDC1_DDC_SFBSR_CIPPT_2ND_shift                                               (3)
#define DDC1_DDC_SFBSR_CIPPT_2ND_mask                                                (0x00000008)
#define DDC1_DDC_SFBSR_CIPPT_2ND(data)                                               (0x00000008&((data)<<3))
#define DDC1_DDC_SFBSR_CIPPT_2ND_src(data)                                           ((0x00000008&(data))>>3)
#define DDC1_DDC_SFBSR_get_CIPPT_2ND(data)                                           ((0x00000008&(data))>>3)
#define DDC1_DDC_SFBSR_CISPT_2ND_shift                                               (2)
#define DDC1_DDC_SFBSR_CISPT_2ND_mask                                                (0x00000004)
#define DDC1_DDC_SFBSR_CISPT_2ND(data)                                               (0x00000004&((data)<<2))
#define DDC1_DDC_SFBSR_CISPT_2ND_src(data)                                           ((0x00000004&(data))>>2)
#define DDC1_DDC_SFBSR_get_CISPT_2ND(data)                                           ((0x00000004&(data))>>2)
#define DDC1_DDC_SFBSR_CIPPT_1ST_shift                                               (1)
#define DDC1_DDC_SFBSR_CIPPT_1ST_mask                                                (0x00000002)
#define DDC1_DDC_SFBSR_CIPPT_1ST(data)                                               (0x00000002&((data)<<1))
#define DDC1_DDC_SFBSR_CIPPT_1ST_src(data)                                           ((0x00000002&(data))>>1)
#define DDC1_DDC_SFBSR_get_CIPPT_1ST(data)                                           ((0x00000002&(data))>>1)
#define DDC1_DDC_SFBSR_CISPT_1ST_shift                                               (0)
#define DDC1_DDC_SFBSR_CISPT_1ST_mask                                                (0x00000001)
#define DDC1_DDC_SFBSR_CISPT_1ST(data)                                               (0x00000001&((data)<<0))
#define DDC1_DDC_SFBSR_CISPT_1ST_src(data)                                           ((0x00000001&(data))>>0)
#define DDC1_DDC_SFBSR_get_CISPT_1ST(data)                                           ((0x00000001&(data))>>0)


#define DDC1_DDC_SFIBLR                                                              0x1801B948
#define DDC1_DDC_SFIBLR_reg_addr                                                     "0xB801B948"
#define DDC1_DDC_SFIBLR_reg                                                          0xB801B948
#define set_DDC1_DDC_SFIBLR_reg(data)   (*((volatile unsigned int*) DDC1_DDC_SFIBLR_reg)=data)
#define get_DDC1_DDC_SFIBLR_reg   (*((volatile unsigned int*) DDC1_DDC_SFIBLR_reg))
#define DDC1_DDC_SFIBLR_inst_adr                                                     "0x0052"
#define DDC1_DDC_SFIBLR_inst                                                         0x0052
#define DDC1_DDC_SFIBLR_FFDI_DLEN_shift                                              (0)
#define DDC1_DDC_SFIBLR_FFDI_DLEN_mask                                               (0x0000001F)
#define DDC1_DDC_SFIBLR_FFDI_DLEN(data)                                              (0x0000001F&((data)<<0))
#define DDC1_DDC_SFIBLR_FFDI_DLEN_src(data)                                          ((0x0000001F&(data))>>0)
#define DDC1_DDC_SFIBLR_get_FFDI_DLEN(data)                                          ((0x0000001F&(data))>>0)


#define DDC1_DDC_SFIBRWPR                                                            0x1801B94C
#define DDC1_DDC_SFIBRWPR_reg_addr                                                   "0xB801B94C"
#define DDC1_DDC_SFIBRWPR_reg                                                        0xB801B94C
#define set_DDC1_DDC_SFIBRWPR_reg(data)   (*((volatile unsigned int*) DDC1_DDC_SFIBRWPR_reg)=data)
#define get_DDC1_DDC_SFIBRWPR_reg   (*((volatile unsigned int*) DDC1_DDC_SFIBRWPR_reg))
#define DDC1_DDC_SFIBRWPR_inst_adr                                                   "0x0053"
#define DDC1_DDC_SFIBRWPR_inst                                                       0x0053
#define DDC1_DDC_SFIBRWPR_DIFF_WPT_shift                                             (4)
#define DDC1_DDC_SFIBRWPR_DIFF_WPT_mask                                              (0x000000F0)
#define DDC1_DDC_SFIBRWPR_DIFF_WPT(data)                                             (0x000000F0&((data)<<4))
#define DDC1_DDC_SFIBRWPR_DIFF_WPT_src(data)                                         ((0x000000F0&(data))>>4)
#define DDC1_DDC_SFIBRWPR_get_DIFF_WPT(data)                                         ((0x000000F0&(data))>>4)
#define DDC1_DDC_SFIBRWPR_DIFF_RPT_shift                                             (0)
#define DDC1_DDC_SFIBRWPR_DIFF_RPT_mask                                              (0x0000000F)
#define DDC1_DDC_SFIBRWPR_DIFF_RPT(data)                                             (0x0000000F&((data)<<0))
#define DDC1_DDC_SFIBRWPR_DIFF_RPT_src(data)                                         ((0x0000000F&(data))>>0)
#define DDC1_DDC_SFIBRWPR_get_DIFF_RPT(data)                                         ((0x0000000F&(data))>>0)


#define DDC1_DDC_SFIBSWPR                                                            0x1801B950
#define DDC1_DDC_SFIBSWPR_reg_addr                                                   "0xB801B950"
#define DDC1_DDC_SFIBSWPR_reg                                                        0xB801B950
#define set_DDC1_DDC_SFIBSWPR_reg(data)   (*((volatile unsigned int*) DDC1_DDC_SFIBSWPR_reg)=data)
#define get_DDC1_DDC_SFIBSWPR_reg   (*((volatile unsigned int*) DDC1_DDC_SFIBSWPR_reg))
#define DDC1_DDC_SFIBSWPR_inst_adr                                                   "0x0054"
#define DDC1_DDC_SFIBSWPR_inst                                                       0x0054
#define DDC1_DDC_SFIBSWPR_DIFFSTOP_PT_shift                                          (0)
#define DDC1_DDC_SFIBSWPR_DIFFSTOP_PT_mask                                           (0x0000000F)
#define DDC1_DDC_SFIBSWPR_DIFFSTOP_PT(data)                                          (0x0000000F&((data)<<0))
#define DDC1_DDC_SFIBSWPR_DIFFSTOP_PT_src(data)                                      ((0x0000000F&(data))>>0)
#define DDC1_DDC_SFIBSWPR_get_DIFFSTOP_PT(data)                                      ((0x0000000F&(data))>>0)


#define DDC1_DDC_SFOBSR                                                              0x1801B954
#define DDC1_DDC_SFOBSR_reg_addr                                                     "0xB801B954"
#define DDC1_DDC_SFOBSR_reg                                                          0xB801B954
#define set_DDC1_DDC_SFOBSR_reg(data)   (*((volatile unsigned int*) DDC1_DDC_SFOBSR_reg)=data)
#define get_DDC1_DDC_SFOBSR_reg   (*((volatile unsigned int*) DDC1_DDC_SFOBSR_reg))
#define DDC1_DDC_SFOBSR_inst_adr                                                     "0x0055"
#define DDC1_DDC_SFOBSR_inst                                                         0x0055
#define DDC1_DDC_SFOBSR_FFDO_DLEN_shift                                              (0)
#define DDC1_DDC_SFOBSR_FFDO_DLEN_mask                                               (0x0000001F)
#define DDC1_DDC_SFOBSR_FFDO_DLEN(data)                                              (0x0000001F&((data)<<0))
#define DDC1_DDC_SFOBSR_FFDO_DLEN_src(data)                                          ((0x0000001F&(data))>>0)
#define DDC1_DDC_SFOBSR_get_FFDO_DLEN(data)                                          ((0x0000001F&(data))>>0)


#define DDC1_DDC_SFOBRWPR                                                            0x1801B958
#define DDC1_DDC_SFOBRWPR_reg_addr                                                   "0xB801B958"
#define DDC1_DDC_SFOBRWPR_reg                                                        0xB801B958
#define set_DDC1_DDC_SFOBRWPR_reg(data)   (*((volatile unsigned int*) DDC1_DDC_SFOBRWPR_reg)=data)
#define get_DDC1_DDC_SFOBRWPR_reg   (*((volatile unsigned int*) DDC1_DDC_SFOBRWPR_reg))
#define DDC1_DDC_SFOBRWPR_inst_adr                                                   "0x0056"
#define DDC1_DDC_SFOBRWPR_inst                                                       0x0056
#define DDC1_DDC_SFOBRWPR_DOFF_WPT_shift                                             (4)
#define DDC1_DDC_SFOBRWPR_DOFF_WPT_mask                                              (0x000000F0)
#define DDC1_DDC_SFOBRWPR_DOFF_WPT(data)                                             (0x000000F0&((data)<<4))
#define DDC1_DDC_SFOBRWPR_DOFF_WPT_src(data)                                         ((0x000000F0&(data))>>4)
#define DDC1_DDC_SFOBRWPR_get_DOFF_WPT(data)                                         ((0x000000F0&(data))>>4)
#define DDC1_DDC_SFOBRWPR_DOFF_RPT_shift                                             (0)
#define DDC1_DDC_SFOBRWPR_DOFF_RPT_mask                                              (0x0000000F)
#define DDC1_DDC_SFOBRWPR_DOFF_RPT(data)                                             (0x0000000F&((data)<<0))
#define DDC1_DDC_SFOBRWPR_DOFF_RPT_src(data)                                         ((0x0000000F&(data))>>0)
#define DDC1_DDC_SFOBRWPR_get_DOFF_RPT(data)                                         ((0x0000000F&(data))>>0)


#define DDC1_DDC_SFSR                                                                0x1801B95C
#define DDC1_DDC_SFSR_reg_addr                                                       "0xB801B95C"
#define DDC1_DDC_SFSR_reg                                                            0xB801B95C
#define set_DDC1_DDC_SFSR_reg(data)   (*((volatile unsigned int*) DDC1_DDC_SFSR_reg)=data)
#define get_DDC1_DDC_SFSR_reg   (*((volatile unsigned int*) DDC1_DDC_SFSR_reg))
#define DDC1_DDC_SFSR_inst_adr                                                       "0x0057"
#define DDC1_DDC_SFSR_inst                                                           0x0057
#define DDC1_DDC_SFSR_FFDOUF_ST_shift                                                (7)
#define DDC1_DDC_SFSR_FFDOUF_ST_mask                                                 (0x00000080)
#define DDC1_DDC_SFSR_FFDOUF_ST(data)                                                (0x00000080&((data)<<7))
#define DDC1_DDC_SFSR_FFDOUF_ST_src(data)                                            ((0x00000080&(data))>>7)
#define DDC1_DDC_SFSR_get_FFDOUF_ST(data)                                            ((0x00000080&(data))>>7)
#define DDC1_DDC_SFSR_FFDIOF_ST_shift                                                (6)
#define DDC1_DDC_SFSR_FFDIOF_ST_mask                                                 (0x00000040)
#define DDC1_DDC_SFSR_FFDIOF_ST(data)                                                (0x00000040&((data)<<6))
#define DDC1_DDC_SFSR_FFDIOF_ST_src(data)                                            ((0x00000040&(data))>>6)
#define DDC1_DDC_SFSR_get_FFDIOF_ST(data)                                            ((0x00000040&(data))>>6)
#define DDC1_DDC_SFSR_FFDONF_ST_shift                                                (5)
#define DDC1_DDC_SFSR_FFDONF_ST_mask                                                 (0x00000020)
#define DDC1_DDC_SFSR_FFDONF_ST(data)                                                (0x00000020&((data)<<5))
#define DDC1_DDC_SFSR_FFDONF_ST_src(data)                                            ((0x00000020&(data))>>5)
#define DDC1_DDC_SFSR_get_FFDONF_ST(data)                                            ((0x00000020&(data))>>5)
#define DDC1_DDC_SFSR_FFDOET_ST_shift                                                (4)
#define DDC1_DDC_SFSR_FFDOET_ST_mask                                                 (0x00000010)
#define DDC1_DDC_SFSR_FFDOET_ST(data)                                                (0x00000010&((data)<<4))
#define DDC1_DDC_SFSR_FFDOET_ST_src(data)                                            ((0x00000010&(data))>>4)
#define DDC1_DDC_SFSR_get_FFDOET_ST(data)                                            ((0x00000010&(data))>>4)
#define DDC1_DDC_SFSR_FFDIFU_ST_shift                                                (3)
#define DDC1_DDC_SFSR_FFDIFU_ST_mask                                                 (0x00000008)
#define DDC1_DDC_SFSR_FFDIFU_ST(data)                                                (0x00000008&((data)<<3))
#define DDC1_DDC_SFSR_FFDIFU_ST_src(data)                                            ((0x00000008&(data))>>3)
#define DDC1_DDC_SFSR_get_FFDIFU_ST(data)                                            ((0x00000008&(data))>>3)
#define DDC1_DDC_SFSR_FFDINE_ST_shift                                                (2)
#define DDC1_DDC_SFSR_FFDINE_ST_mask                                                 (0x00000004)
#define DDC1_DDC_SFSR_FFDINE_ST(data)                                                (0x00000004&((data)<<2))
#define DDC1_DDC_SFSR_FFDINE_ST_src(data)                                            ((0x00000004&(data))>>2)
#define DDC1_DDC_SFSR_get_FFDINE_ST(data)                                            ((0x00000004&(data))>>2)


#define DDC1_DDC_SFIR                                                                0x1801B960
#define DDC1_DDC_SFIR_reg_addr                                                       "0xB801B960"
#define DDC1_DDC_SFIR_reg                                                            0xB801B960
#define set_DDC1_DDC_SFIR_reg(data)   (*((volatile unsigned int*) DDC1_DDC_SFIR_reg)=data)
#define get_DDC1_DDC_SFIR_reg   (*((volatile unsigned int*) DDC1_DDC_SFIR_reg))
#define DDC1_DDC_SFIR_inst_adr                                                       "0x0058"
#define DDC1_DDC_SFIR_inst                                                           0x0058
#define DDC1_DDC_SFIR_FFDOUF_IE_shift                                                (7)
#define DDC1_DDC_SFIR_FFDOUF_IE_mask                                                 (0x00000080)
#define DDC1_DDC_SFIR_FFDOUF_IE(data)                                                (0x00000080&((data)<<7))
#define DDC1_DDC_SFIR_FFDOUF_IE_src(data)                                            ((0x00000080&(data))>>7)
#define DDC1_DDC_SFIR_get_FFDOUF_IE(data)                                            ((0x00000080&(data))>>7)
#define DDC1_DDC_SFIR_FFDIOF_IE_shift                                                (6)
#define DDC1_DDC_SFIR_FFDIOF_IE_mask                                                 (0x00000040)
#define DDC1_DDC_SFIR_FFDIOF_IE(data)                                                (0x00000040&((data)<<6))
#define DDC1_DDC_SFIR_FFDIOF_IE_src(data)                                            ((0x00000040&(data))>>6)
#define DDC1_DDC_SFIR_get_FFDIOF_IE(data)                                            ((0x00000040&(data))>>6)
#define DDC1_DDC_SFIR_FFDONF_IE_shift                                                (5)
#define DDC1_DDC_SFIR_FFDONF_IE_mask                                                 (0x00000020)
#define DDC1_DDC_SFIR_FFDONF_IE(data)                                                (0x00000020&((data)<<5))
#define DDC1_DDC_SFIR_FFDONF_IE_src(data)                                            ((0x00000020&(data))>>5)
#define DDC1_DDC_SFIR_get_FFDONF_IE(data)                                            ((0x00000020&(data))>>5)
#define DDC1_DDC_SFIR_FFDOET_IE_shift                                                (4)
#define DDC1_DDC_SFIR_FFDOET_IE_mask                                                 (0x00000010)
#define DDC1_DDC_SFIR_FFDOET_IE(data)                                                (0x00000010&((data)<<4))
#define DDC1_DDC_SFIR_FFDOET_IE_src(data)                                            ((0x00000010&(data))>>4)
#define DDC1_DDC_SFIR_get_FFDOET_IE(data)                                            ((0x00000010&(data))>>4)
#define DDC1_DDC_SFIR_FFDIFU_IE_shift                                                (3)
#define DDC1_DDC_SFIR_FFDIFU_IE_mask                                                 (0x00000008)
#define DDC1_DDC_SFIR_FFDIFU_IE(data)                                                (0x00000008&((data)<<3))
#define DDC1_DDC_SFIR_FFDIFU_IE_src(data)                                            ((0x00000008&(data))>>3)
#define DDC1_DDC_SFIR_get_FFDIFU_IE(data)                                            ((0x00000008&(data))>>3)
#define DDC1_DDC_SFIR_FFDINE_IE_shift                                                (2)
#define DDC1_DDC_SFIR_FFDINE_IE_mask                                                 (0x00000004)
#define DDC1_DDC_SFIR_FFDINE_IE(data)                                                (0x00000004&((data)<<2))
#define DDC1_DDC_SFIR_FFDINE_IE_src(data)                                            ((0x00000004&(data))>>2)
#define DDC1_DDC_SFIR_get_FFDINE_IE(data)                                            ((0x00000004&(data))>>2)
#define DDC1_DDC_SFIR_CIPPT_IE_shift                                                 (1)
#define DDC1_DDC_SFIR_CIPPT_IE_mask                                                  (0x00000002)
#define DDC1_DDC_SFIR_CIPPT_IE(data)                                                 (0x00000002&((data)<<1))
#define DDC1_DDC_SFIR_CIPPT_IE_src(data)                                             ((0x00000002&(data))>>1)
#define DDC1_DDC_SFIR_get_CIPPT_IE(data)                                             ((0x00000002&(data))>>1)
#define DDC1_DDC_SFIR_CISPT_IE_shift                                                 (0)
#define DDC1_DDC_SFIR_CISPT_IE_mask                                                  (0x00000001)
#define DDC1_DDC_SFIR_CISPT_IE(data)                                                 (0x00000001&((data)<<0))
#define DDC1_DDC_SFIR_CISPT_IE_src(data)                                             ((0x00000001&(data))>>0)
#define DDC1_DDC_SFIR_get_CISPT_IE(data)                                             ((0x00000001&(data))>>0)


#define DDC1_DDC_FSMS                                                                0x1801B964
#define DDC1_DDC_FSMS_reg_addr                                                       "0xB801B964"
#define DDC1_DDC_FSMS_reg                                                            0xB801B964
#define set_DDC1_DDC_FSMS_reg(data)   (*((volatile unsigned int*) DDC1_DDC_FSMS_reg)=data)
#define get_DDC1_DDC_FSMS_reg   (*((volatile unsigned int*) DDC1_DDC_FSMS_reg))
#define DDC1_DDC_FSMS_inst_adr                                                       "0x0059"
#define DDC1_DDC_FSMS_inst                                                           0x0059
#define DDC1_DDC_FSMS_CMDFSM_ST_shift                                                (0)
#define DDC1_DDC_FSMS_CMDFSM_ST_mask                                                 (0x000000FF)
#define DDC1_DDC_FSMS_CMDFSM_ST(data)                                                (0x000000FF&((data)<<0))
#define DDC1_DDC_FSMS_CMDFSM_ST_src(data)                                            ((0x000000FF&(data))>>0)
#define DDC1_DDC_FSMS_get_CMDFSM_ST(data)                                            ((0x000000FF&(data))>>0)


#define DDC1_DDC_DUMMY                                                               0x1801B968
#define DDC1_DDC_DUMMY_reg_addr                                                      "0xB801B968"
#define DDC1_DDC_DUMMY_reg                                                           0xB801B968
#define set_DDC1_DDC_DUMMY_reg(data)   (*((volatile unsigned int*) DDC1_DDC_DUMMY_reg)=data)
#define get_DDC1_DDC_DUMMY_reg   (*((volatile unsigned int*) DDC1_DDC_DUMMY_reg))
#define DDC1_DDC_DUMMY_inst_adr                                                      "0x005A"
#define DDC1_DDC_DUMMY_inst                                                          0x005A
#define DDC1_DDC_DUMMY_Dummy_shift                                                   (0)
#define DDC1_DDC_DUMMY_Dummy_mask                                                    (0x000000FF)
#define DDC1_DDC_DUMMY_Dummy(data)                                                   (0x000000FF&((data)<<0))
#define DDC1_DDC_DUMMY_Dummy_src(data)                                               ((0x000000FF&(data))>>0)
#define DDC1_DDC_DUMMY_get_Dummy(data)                                               ((0x000000FF&(data))>>0)


#define DDC1_DDC_EDID_SRAM_READ_IRQ_EN                                               0x1801B970
#define DDC1_DDC_EDID_SRAM_READ_IRQ_EN_reg_addr                                      "0xB801B970"
#define DDC1_DDC_EDID_SRAM_READ_IRQ_EN_reg                                           0xB801B970
#define set_DDC1_DDC_EDID_SRAM_READ_IRQ_EN_reg(data)   (*((volatile unsigned int*) DDC1_DDC_EDID_SRAM_READ_IRQ_EN_reg)=data)
#define get_DDC1_DDC_EDID_SRAM_READ_IRQ_EN_reg   (*((volatile unsigned int*) DDC1_DDC_EDID_SRAM_READ_IRQ_EN_reg))
#define DDC1_DDC_EDID_SRAM_READ_IRQ_EN_inst_adr                                      "0x005C"
#define DDC1_DDC_EDID_SRAM_READ_IRQ_EN_inst                                          0x005C
#define DDC1_DDC_EDID_SRAM_READ_IRQ_EN_START_IRQ_EN_shift                            (1)
#define DDC1_DDC_EDID_SRAM_READ_IRQ_EN_START_IRQ_EN_mask                             (0x00000002)
#define DDC1_DDC_EDID_SRAM_READ_IRQ_EN_START_IRQ_EN(data)                            (0x00000002&((data)<<1))
#define DDC1_DDC_EDID_SRAM_READ_IRQ_EN_START_IRQ_EN_src(data)                        ((0x00000002&(data))>>1)
#define DDC1_DDC_EDID_SRAM_READ_IRQ_EN_get_START_IRQ_EN(data)                        ((0x00000002&(data))>>1)
#define DDC1_DDC_EDID_SRAM_READ_IRQ_EN_STOP_IRQ_EN_shift                             (0)
#define DDC1_DDC_EDID_SRAM_READ_IRQ_EN_STOP_IRQ_EN_mask                              (0x00000001)
#define DDC1_DDC_EDID_SRAM_READ_IRQ_EN_STOP_IRQ_EN(data)                             (0x00000001&((data)<<0))
#define DDC1_DDC_EDID_SRAM_READ_IRQ_EN_STOP_IRQ_EN_src(data)                         ((0x00000001&(data))>>0)
#define DDC1_DDC_EDID_SRAM_READ_IRQ_EN_get_STOP_IRQ_EN(data)                         ((0x00000001&(data))>>0)


#define DDC1_DDC_EDID_SRAM_READ_AUX                                                  0x1801B974
#define DDC1_DDC_EDID_SRAM_READ_AUX_reg_addr                                         "0xB801B974"
#define DDC1_DDC_EDID_SRAM_READ_AUX_reg                                              0xB801B974
#define set_DDC1_DDC_EDID_SRAM_READ_AUX_reg(data)   (*((volatile unsigned int*) DDC1_DDC_EDID_SRAM_READ_AUX_reg)=data)
#define get_DDC1_DDC_EDID_SRAM_READ_AUX_reg   (*((volatile unsigned int*) DDC1_DDC_EDID_SRAM_READ_AUX_reg))
#define DDC1_DDC_EDID_SRAM_READ_AUX_inst_adr                                         "0x005D"
#define DDC1_DDC_EDID_SRAM_READ_AUX_inst                                             0x005D
#define DDC1_DDC_EDID_SRAM_READ_AUX_START_shift                                      (1)
#define DDC1_DDC_EDID_SRAM_READ_AUX_START_mask                                       (0x00000002)
#define DDC1_DDC_EDID_SRAM_READ_AUX_START(data)                                      (0x00000002&((data)<<1))
#define DDC1_DDC_EDID_SRAM_READ_AUX_START_src(data)                                  ((0x00000002&(data))>>1)
#define DDC1_DDC_EDID_SRAM_READ_AUX_get_START(data)                                  ((0x00000002&(data))>>1)
#define DDC1_DDC_EDID_SRAM_READ_AUX_STOP_shift                                       (0)
#define DDC1_DDC_EDID_SRAM_READ_AUX_STOP_mask                                        (0x00000001)
#define DDC1_DDC_EDID_SRAM_READ_AUX_STOP(data)                                       (0x00000001&((data)<<0))
#define DDC1_DDC_EDID_SRAM_READ_AUX_STOP_src(data)                                   ((0x00000001&(data))>>0)
#define DDC1_DDC_EDID_SRAM_READ_AUX_get_STOP(data)                                   ((0x00000001&(data))>>0)


#define DDC1_DDC_BIST_MODE                                                           0x1801B978
#define DDC1_DDC_BIST_MODE_reg_addr                                                  "0xB801B978"
#define DDC1_DDC_BIST_MODE_reg                                                       0xB801B978
#define set_DDC1_DDC_BIST_MODE_reg(data)   (*((volatile unsigned int*) DDC1_DDC_BIST_MODE_reg)=data)
#define get_DDC1_DDC_BIST_MODE_reg   (*((volatile unsigned int*) DDC1_DDC_BIST_MODE_reg))
#define DDC1_DDC_BIST_MODE_inst_adr                                                  "0x005E"
#define DDC1_DDC_BIST_MODE_inst                                                      0x005E
#define DDC1_DDC_BIST_MODE_DDC_BIST_MODE_shift                                       (0)
#define DDC1_DDC_BIST_MODE_DDC_BIST_MODE_mask                                        (0x00000001)
#define DDC1_DDC_BIST_MODE_DDC_BIST_MODE(data)                                       (0x00000001&((data)<<0))
#define DDC1_DDC_BIST_MODE_DDC_BIST_MODE_src(data)                                   ((0x00000001&(data))>>0)
#define DDC1_DDC_BIST_MODE_get_DDC_BIST_MODE(data)                                   ((0x00000001&(data))>>0)


#define DDC1_DDC_BIST_DONE                                                           0x1801B97C
#define DDC1_DDC_BIST_DONE_reg_addr                                                  "0xB801B97C"
#define DDC1_DDC_BIST_DONE_reg                                                       0xB801B97C
#define set_DDC1_DDC_BIST_DONE_reg(data)   (*((volatile unsigned int*) DDC1_DDC_BIST_DONE_reg)=data)
#define get_DDC1_DDC_BIST_DONE_reg   (*((volatile unsigned int*) DDC1_DDC_BIST_DONE_reg))
#define DDC1_DDC_BIST_DONE_inst_adr                                                  "0x005F"
#define DDC1_DDC_BIST_DONE_inst                                                      0x005F
#define DDC1_DDC_BIST_DONE_DDC_BIST_DONE_shift                                       (0)
#define DDC1_DDC_BIST_DONE_DDC_BIST_DONE_mask                                        (0x00000001)
#define DDC1_DDC_BIST_DONE_DDC_BIST_DONE(data)                                       (0x00000001&((data)<<0))
#define DDC1_DDC_BIST_DONE_DDC_BIST_DONE_src(data)                                   ((0x00000001&(data))>>0)
#define DDC1_DDC_BIST_DONE_get_DDC_BIST_DONE(data)                                   ((0x00000001&(data))>>0)


#define DDC1_DDC_BIST_FAIL                                                           0x1801B980
#define DDC1_DDC_BIST_FAIL_reg_addr                                                  "0xB801B980"
#define DDC1_DDC_BIST_FAIL_reg                                                       0xB801B980
#define set_DDC1_DDC_BIST_FAIL_reg(data)   (*((volatile unsigned int*) DDC1_DDC_BIST_FAIL_reg)=data)
#define get_DDC1_DDC_BIST_FAIL_reg   (*((volatile unsigned int*) DDC1_DDC_BIST_FAIL_reg))
#define DDC1_DDC_BIST_FAIL_inst_adr                                                  "0x0060"
#define DDC1_DDC_BIST_FAIL_inst                                                      0x0060
#define DDC1_DDC_BIST_FAIL_DDC_BIST_FAIL_shift                                       (0)
#define DDC1_DDC_BIST_FAIL_DDC_BIST_FAIL_mask                                        (0x00000001)
#define DDC1_DDC_BIST_FAIL_DDC_BIST_FAIL(data)                                       (0x00000001&((data)<<0))
#define DDC1_DDC_BIST_FAIL_DDC_BIST_FAIL_src(data)                                   ((0x00000001&(data))>>0)
#define DDC1_DDC_BIST_FAIL_get_DDC_BIST_FAIL(data)                                   ((0x00000001&(data))>>0)


#define DDC1_DDC_DRF_MODE                                                            0x1801B984
#define DDC1_DDC_DRF_MODE_reg_addr                                                   "0xB801B984"
#define DDC1_DDC_DRF_MODE_reg                                                        0xB801B984
#define set_DDC1_DDC_DRF_MODE_reg(data)   (*((volatile unsigned int*) DDC1_DDC_DRF_MODE_reg)=data)
#define get_DDC1_DDC_DRF_MODE_reg   (*((volatile unsigned int*) DDC1_DDC_DRF_MODE_reg))
#define DDC1_DDC_DRF_MODE_inst_adr                                                   "0x0061"
#define DDC1_DDC_DRF_MODE_inst                                                       0x0061
#define DDC1_DDC_DRF_MODE_DDC_DRF_MODE_shift                                         (0)
#define DDC1_DDC_DRF_MODE_DDC_DRF_MODE_mask                                          (0x00000001)
#define DDC1_DDC_DRF_MODE_DDC_DRF_MODE(data)                                         (0x00000001&((data)<<0))
#define DDC1_DDC_DRF_MODE_DDC_DRF_MODE_src(data)                                     ((0x00000001&(data))>>0)
#define DDC1_DDC_DRF_MODE_get_DDC_DRF_MODE(data)                                     ((0x00000001&(data))>>0)


#define DDC1_DDC_DRF_RESUME                                                          0x1801B988
#define DDC1_DDC_DRF_RESUME_reg_addr                                                 "0xB801B988"
#define DDC1_DDC_DRF_RESUME_reg                                                      0xB801B988
#define set_DDC1_DDC_DRF_RESUME_reg(data)   (*((volatile unsigned int*) DDC1_DDC_DRF_RESUME_reg)=data)
#define get_DDC1_DDC_DRF_RESUME_reg   (*((volatile unsigned int*) DDC1_DDC_DRF_RESUME_reg))
#define DDC1_DDC_DRF_RESUME_inst_adr                                                 "0x0062"
#define DDC1_DDC_DRF_RESUME_inst                                                     0x0062
#define DDC1_DDC_DRF_RESUME_DDC_DRF_RESUME_shift                                     (0)
#define DDC1_DDC_DRF_RESUME_DDC_DRF_RESUME_mask                                      (0x00000001)
#define DDC1_DDC_DRF_RESUME_DDC_DRF_RESUME(data)                                     (0x00000001&((data)<<0))
#define DDC1_DDC_DRF_RESUME_DDC_DRF_RESUME_src(data)                                 ((0x00000001&(data))>>0)
#define DDC1_DDC_DRF_RESUME_get_DDC_DRF_RESUME(data)                                 ((0x00000001&(data))>>0)


#define DDC1_DDC_DRF_DONE                                                            0x1801B98C
#define DDC1_DDC_DRF_DONE_reg_addr                                                   "0xB801B98C"
#define DDC1_DDC_DRF_DONE_reg                                                        0xB801B98C
#define set_DDC1_DDC_DRF_DONE_reg(data)   (*((volatile unsigned int*) DDC1_DDC_DRF_DONE_reg)=data)
#define get_DDC1_DDC_DRF_DONE_reg   (*((volatile unsigned int*) DDC1_DDC_DRF_DONE_reg))
#define DDC1_DDC_DRF_DONE_inst_adr                                                   "0x0063"
#define DDC1_DDC_DRF_DONE_inst                                                       0x0063
#define DDC1_DDC_DRF_DONE_DDC_DRF_DONE_shift                                         (0)
#define DDC1_DDC_DRF_DONE_DDC_DRF_DONE_mask                                          (0x00000001)
#define DDC1_DDC_DRF_DONE_DDC_DRF_DONE(data)                                         (0x00000001&((data)<<0))
#define DDC1_DDC_DRF_DONE_DDC_DRF_DONE_src(data)                                     ((0x00000001&(data))>>0)
#define DDC1_DDC_DRF_DONE_get_DDC_DRF_DONE(data)                                     ((0x00000001&(data))>>0)


#define DDC1_DDC_DRF_PAUSE                                                           0x1801B990
#define DDC1_DDC_DRF_PAUSE_reg_addr                                                  "0xB801B990"
#define DDC1_DDC_DRF_PAUSE_reg                                                       0xB801B990
#define set_DDC1_DDC_DRF_PAUSE_reg(data)   (*((volatile unsigned int*) DDC1_DDC_DRF_PAUSE_reg)=data)
#define get_DDC1_DDC_DRF_PAUSE_reg   (*((volatile unsigned int*) DDC1_DDC_DRF_PAUSE_reg))
#define DDC1_DDC_DRF_PAUSE_inst_adr                                                  "0x0064"
#define DDC1_DDC_DRF_PAUSE_inst                                                      0x0064
#define DDC1_DDC_DRF_PAUSE_DDC_DRF_PAUSE_shift                                       (0)
#define DDC1_DDC_DRF_PAUSE_DDC_DRF_PAUSE_mask                                        (0x00000001)
#define DDC1_DDC_DRF_PAUSE_DDC_DRF_PAUSE(data)                                       (0x00000001&((data)<<0))
#define DDC1_DDC_DRF_PAUSE_DDC_DRF_PAUSE_src(data)                                   ((0x00000001&(data))>>0)
#define DDC1_DDC_DRF_PAUSE_get_DDC_DRF_PAUSE(data)                                   ((0x00000001&(data))>>0)


#define DDC1_DDC_DRF_FAIL                                                            0x1801B994
#define DDC1_DDC_DRF_FAIL_reg_addr                                                   "0xB801B994"
#define DDC1_DDC_DRF_FAIL_reg                                                        0xB801B994
#define set_DDC1_DDC_DRF_FAIL_reg(data)   (*((volatile unsigned int*) DDC1_DDC_DRF_FAIL_reg)=data)
#define get_DDC1_DDC_DRF_FAIL_reg   (*((volatile unsigned int*) DDC1_DDC_DRF_FAIL_reg))
#define DDC1_DDC_DRF_FAIL_inst_adr                                                   "0x0065"
#define DDC1_DDC_DRF_FAIL_inst                                                       0x0065
#define DDC1_DDC_DRF_FAIL_DDC_DRF_FAIL_shift                                         (0)
#define DDC1_DDC_DRF_FAIL_DDC_DRF_FAIL_mask                                          (0x00000001)
#define DDC1_DDC_DRF_FAIL_DDC_DRF_FAIL(data)                                         (0x00000001&((data)<<0))
#define DDC1_DDC_DRF_FAIL_DDC_DRF_FAIL_src(data)                                     ((0x00000001&(data))>>0)
#define DDC1_DDC_DRF_FAIL_get_DDC_DRF_FAIL(data)                                     ((0x00000001&(data))>>0)


#define DDC2_I2C_CR                                                                  0x1801BA00
#define DDC2_I2C_CR_reg_addr                                                         "0xB801BA00"
#define DDC2_I2C_CR_reg                                                              0xB801BA00
#define set_DDC2_I2C_CR_reg(data)   (*((volatile unsigned int*) DDC2_I2C_CR_reg)=data)
#define get_DDC2_I2C_CR_reg   (*((volatile unsigned int*) DDC2_I2C_CR_reg))
#define DDC2_I2C_CR_inst_adr                                                         "0x0080"
#define DDC2_I2C_CR_inst                                                             0x0080
#define DDC2_I2C_CR_CMDERR_IE_shift                                                  (7)
#define DDC2_I2C_CR_CMDERR_IE_mask                                                   (0x00000080)
#define DDC2_I2C_CR_CMDERR_IE(data)                                                  (0x00000080&((data)<<7))
#define DDC2_I2C_CR_CMDERR_IE_src(data)                                              ((0x00000080&(data))>>7)
#define DDC2_I2C_CR_get_CMDERR_IE(data)                                              ((0x00000080&(data))>>7)
#define DDC2_I2C_CR_TIMEOUT_EN_shift                                                 (6)
#define DDC2_I2C_CR_TIMEOUT_EN_mask                                                  (0x00000040)
#define DDC2_I2C_CR_TIMEOUT_EN(data)                                                 (0x00000040&((data)<<6))
#define DDC2_I2C_CR_TIMEOUT_EN_src(data)                                             ((0x00000040&(data))>>6)
#define DDC2_I2C_CR_get_TIMEOUT_EN(data)                                             ((0x00000040&(data))>>6)
#define DDC2_I2C_CR_DEBOUNCE_MODE_shift                                              (4)
#define DDC2_I2C_CR_DEBOUNCE_MODE_mask                                               (0x00000030)
#define DDC2_I2C_CR_DEBOUNCE_MODE(data)                                              (0x00000030&((data)<<4))
#define DDC2_I2C_CR_DEBOUNCE_MODE_src(data)                                          ((0x00000030&(data))>>4)
#define DDC2_I2C_CR_get_DEBOUNCE_MODE(data)                                          ((0x00000030&(data))>>4)
#define DDC2_I2C_CR_TIMEOUT_IE_shift                                                 (3)
#define DDC2_I2C_CR_TIMEOUT_IE_mask                                                  (0x00000008)
#define DDC2_I2C_CR_TIMEOUT_IE(data)                                                 (0x00000008&((data)<<3))
#define DDC2_I2C_CR_TIMEOUT_IE_src(data)                                             ((0x00000008&(data))>>3)
#define DDC2_I2C_CR_get_TIMEOUT_IE(data)                                             ((0x00000008&(data))>>3)
#define DDC2_I2C_CR_RETIME_M_shift                                                   (0)
#define DDC2_I2C_CR_RETIME_M_mask                                                    (0x00000007)
#define DDC2_I2C_CR_RETIME_M(data)                                                   (0x00000007&((data)<<0))
#define DDC2_I2C_CR_RETIME_M_src(data)                                               ((0x00000007&(data))>>0)
#define DDC2_I2C_CR_get_RETIME_M(data)                                               ((0x00000007&(data))>>0)


#define DDC2_I2C_SR1                                                                 0x1801BA04
#define DDC2_I2C_SR1_reg_addr                                                        "0xB801BA04"
#define DDC2_I2C_SR1_reg                                                             0xB801BA04
#define set_DDC2_I2C_SR1_reg(data)   (*((volatile unsigned int*) DDC2_I2C_SR1_reg)=data)
#define get_DDC2_I2C_SR1_reg   (*((volatile unsigned int*) DDC2_I2C_SR1_reg))
#define DDC2_I2C_SR1_inst_adr                                                        "0x0081"
#define DDC2_I2C_SR1_inst                                                            0x0081
#define DDC2_I2C_SR1_CMDERR_shift                                                    (7)
#define DDC2_I2C_SR1_CMDERR_mask                                                     (0x00000080)
#define DDC2_I2C_SR1_CMDERR(data)                                                    (0x00000080&((data)<<7))
#define DDC2_I2C_SR1_CMDERR_src(data)                                                ((0x00000080&(data))>>7)
#define DDC2_I2C_SR1_get_CMDERR(data)                                                ((0x00000080&(data))>>7)
#define DDC2_I2C_SR1_Finish_shift                                                    (4)
#define DDC2_I2C_SR1_Finish_mask                                                     (0x00000010)
#define DDC2_I2C_SR1_Finish(data)                                                    (0x00000010&((data)<<4))
#define DDC2_I2C_SR1_Finish_src(data)                                                ((0x00000010&(data))>>4)
#define DDC2_I2C_SR1_get_Finish(data)                                                ((0x00000010&(data))>>4)
#define DDC2_I2C_SR1_timeout_shift                                                   (3)
#define DDC2_I2C_SR1_timeout_mask                                                    (0x00000008)
#define DDC2_I2C_SR1_timeout(data)                                                   (0x00000008&((data)<<3))
#define DDC2_I2C_SR1_timeout_src(data)                                               ((0x00000008&(data))>>3)
#define DDC2_I2C_SR1_get_timeout(data)                                               ((0x00000008&(data))>>3)


#define DDC2_I2C_TR                                                                  0x1801BA08
#define DDC2_I2C_TR_reg_addr                                                         "0xB801BA08"
#define DDC2_I2C_TR_reg                                                              0xB801BA08
#define set_DDC2_I2C_TR_reg(data)   (*((volatile unsigned int*) DDC2_I2C_TR_reg)=data)
#define get_DDC2_I2C_TR_reg   (*((volatile unsigned int*) DDC2_I2C_TR_reg))
#define DDC2_I2C_TR_inst_adr                                                         "0x0082"
#define DDC2_I2C_TR_inst                                                             0x0082
#define DDC2_I2C_TR_timeout_val_shift                                                (0)
#define DDC2_I2C_TR_timeout_val_mask                                                 (0x000000FF)
#define DDC2_I2C_TR_timeout_val(data)                                                (0x000000FF&((data)<<0))
#define DDC2_I2C_TR_timeout_val_src(data)                                            ((0x000000FF&(data))>>0)
#define DDC2_I2C_TR_get_timeout_val(data)                                            ((0x000000FF&(data))>>0)


#define DDC2_EDID_CR                                                                 0x1801BA0C
#define DDC2_EDID_CR_reg_addr                                                        "0xB801BA0C"
#define DDC2_EDID_CR_reg                                                             0xB801BA0C
#define set_DDC2_EDID_CR_reg(data)   (*((volatile unsigned int*) DDC2_EDID_CR_reg)=data)
#define get_DDC2_EDID_CR_reg   (*((volatile unsigned int*) DDC2_EDID_CR_reg))
#define DDC2_EDID_CR_inst_adr                                                        "0x0083"
#define DDC2_EDID_CR_inst                                                            0x0083
#define DDC2_EDID_CR_EDID_ADDRESS_shift                                              (5)
#define DDC2_EDID_CR_EDID_ADDRESS_mask                                               (0x000000E0)
#define DDC2_EDID_CR_EDID_ADDRESS(data)                                              (0x000000E0&((data)<<5))
#define DDC2_EDID_CR_EDID_ADDRESS_src(data)                                          ((0x000000E0&(data))>>5)
#define DDC2_EDID_CR_get_EDID_ADDRESS(data)                                          ((0x000000E0&(data))>>5)
#define DDC2_EDID_CR_FINISH_INT_EN_shift                                             (4)
#define DDC2_EDID_CR_FINISH_INT_EN_mask                                              (0x00000010)
#define DDC2_EDID_CR_FINISH_INT_EN(data)                                             (0x00000010&((data)<<4))
#define DDC2_EDID_CR_FINISH_INT_EN_src(data)                                         ((0x00000010&(data))>>4)
#define DDC2_EDID_CR_get_FINISH_INT_EN(data)                                         ((0x00000010&(data))>>4)
#define DDC2_EDID_CR_DDC1_FORCE_shift                                                (3)
#define DDC2_EDID_CR_DDC1_FORCE_mask                                                 (0x00000008)
#define DDC2_EDID_CR_DDC1_FORCE(data)                                                (0x00000008&((data)<<3))
#define DDC2_EDID_CR_DDC1_FORCE_src(data)                                            ((0x00000008&(data))>>3)
#define DDC2_EDID_CR_get_DDC1_FORCE(data)                                            ((0x00000008&(data))>>3)
#define DDC2_EDID_CR_DDC2B_FORCE_shift                                               (2)
#define DDC2_EDID_CR_DDC2B_FORCE_mask                                                (0x00000004)
#define DDC2_EDID_CR_DDC2B_FORCE(data)                                               (0x00000004&((data)<<2))
#define DDC2_EDID_CR_DDC2B_FORCE_src(data)                                           ((0x00000004&(data))>>2)
#define DDC2_EDID_CR_get_DDC2B_FORCE(data)                                           ((0x00000004&(data))>>2)
#define DDC2_EDID_CR_EDID_SRWEN_shift                                                (1)
#define DDC2_EDID_CR_EDID_SRWEN_mask                                                 (0x00000002)
#define DDC2_EDID_CR_EDID_SRWEN(data)                                                (0x00000002&((data)<<1))
#define DDC2_EDID_CR_EDID_SRWEN_src(data)                                            ((0x00000002&(data))>>1)
#define DDC2_EDID_CR_get_EDID_SRWEN(data)                                            ((0x00000002&(data))>>1)
#define DDC2_EDID_CR_EDID_EN_shift                                                   (0)
#define DDC2_EDID_CR_EDID_EN_mask                                                    (0x00000001)
#define DDC2_EDID_CR_EDID_EN(data)                                                   (0x00000001&((data)<<0))
#define DDC2_EDID_CR_EDID_EN_src(data)                                               ((0x00000001&(data))>>0)
#define DDC2_EDID_CR_get_EDID_EN(data)                                               ((0x00000001&(data))>>0)


#define DDC2_DDC_VCR                                                                 0x1801BA10
#define DDC2_DDC_VCR_reg_addr                                                        "0xB801BA10"
#define DDC2_DDC_VCR_reg                                                             0xB801BA10
#define set_DDC2_DDC_VCR_reg(data)   (*((volatile unsigned int*) DDC2_DDC_VCR_reg)=data)
#define get_DDC2_DDC_VCR_reg   (*((volatile unsigned int*) DDC2_DDC_VCR_reg))
#define DDC2_DDC_VCR_inst_adr                                                        "0x0084"
#define DDC2_DDC_VCR_inst                                                            0x0084
#define DDC2_DDC_VCR_DDC1_VCount_shift                                               (0)
#define DDC2_DDC_VCR_DDC1_VCount_mask                                                (0x000000FF)
#define DDC2_DDC_VCR_DDC1_VCount(data)                                               (0x000000FF&((data)<<0))
#define DDC2_DDC_VCR_DDC1_VCount_src(data)                                           ((0x000000FF&(data))>>0)
#define DDC2_DDC_VCR_get_DDC1_VCount(data)                                           ((0x000000FF&(data))>>0)


#define DDC2_EDID_IMSWSAR                                                            0x1801BA14
#define DDC2_EDID_IMSWSAR_reg_addr                                                   "0xB801BA14"
#define DDC2_EDID_IMSWSAR_reg                                                        0xB801BA14
#define set_DDC2_EDID_IMSWSAR_reg(data)   (*((volatile unsigned int*) DDC2_EDID_IMSWSAR_reg)=data)
#define get_DDC2_EDID_IMSWSAR_reg   (*((volatile unsigned int*) DDC2_EDID_IMSWSAR_reg))
#define DDC2_EDID_IMSWSAR_inst_adr                                                   "0x0085"
#define DDC2_EDID_IMSWSAR_inst                                                       0x0085
#define DDC2_EDID_IMSWSAR_EDID_SADR_shift                                            (0)
#define DDC2_EDID_IMSWSAR_EDID_SADR_mask                                             (0x000000FF)
#define DDC2_EDID_IMSWSAR_EDID_SADR(data)                                            (0x000000FF&((data)<<0))
#define DDC2_EDID_IMSWSAR_EDID_SADR_src(data)                                        ((0x000000FF&(data))>>0)
#define DDC2_EDID_IMSWSAR_get_EDID_SADR(data)                                        ((0x000000FF&(data))>>0)


#define DDC2_EDID_IMSWEAR                                                            0x1801BA18
#define DDC2_EDID_IMSWEAR_reg_addr                                                   "0xB801BA18"
#define DDC2_EDID_IMSWEAR_reg                                                        0xB801BA18
#define set_DDC2_EDID_IMSWEAR_reg(data)   (*((volatile unsigned int*) DDC2_EDID_IMSWEAR_reg)=data)
#define get_DDC2_EDID_IMSWEAR_reg   (*((volatile unsigned int*) DDC2_EDID_IMSWEAR_reg))
#define DDC2_EDID_IMSWEAR_inst_adr                                                   "0x0086"
#define DDC2_EDID_IMSWEAR_inst                                                       0x0086
#define DDC2_EDID_IMSWEAR_EDID_EADR_shift                                            (0)
#define DDC2_EDID_IMSWEAR_EDID_EADR_mask                                             (0x000000FF)
#define DDC2_EDID_IMSWEAR_EDID_EADR(data)                                            (0x000000FF&((data)<<0))
#define DDC2_EDID_IMSWEAR_EDID_EADR_src(data)                                        ((0x000000FF&(data))>>0)
#define DDC2_EDID_IMSWEAR_get_EDID_EADR(data)                                        ((0x000000FF&(data))>>0)


#define DDC2_EDID_IR                                                                 0x1801BA1C
#define DDC2_EDID_IR_reg_addr                                                        "0xB801BA1C"
#define DDC2_EDID_IR_reg                                                             0xB801BA1C
#define set_DDC2_EDID_IR_reg(data)   (*((volatile unsigned int*) DDC2_EDID_IR_reg)=data)
#define get_DDC2_EDID_IR_reg   (*((volatile unsigned int*) DDC2_EDID_IR_reg))
#define DDC2_EDID_IR_inst_adr                                                        "0x0087"
#define DDC2_EDID_IR_inst                                                            0x0087
#define DDC2_EDID_IR_EDIDMODE_shift                                                  (6)
#define DDC2_EDID_IR_EDIDMODE_mask                                                   (0x00000040)
#define DDC2_EDID_IR_EDIDMODE(data)                                                  (0x00000040&((data)<<6))
#define DDC2_EDID_IR_EDIDMODE_src(data)                                              ((0x00000040&(data))>>6)
#define DDC2_EDID_IR_get_EDIDMODE(data)                                              ((0x00000040&(data))>>6)
#define DDC2_EDID_IR_EDIDSUBADDRESS_shift                                            (5)
#define DDC2_EDID_IR_EDIDSUBADDRESS_mask                                             (0x00000020)
#define DDC2_EDID_IR_EDIDSUBADDRESS(data)                                            (0x00000020&((data)<<5))
#define DDC2_EDID_IR_EDIDSUBADDRESS_src(data)                                        ((0x00000020&(data))>>5)
#define DDC2_EDID_IR_get_EDIDSUBADDRESS(data)                                        ((0x00000020&(data))>>5)
#define DDC2_EDID_IR_EDIDSTOP_shift                                                  (4)
#define DDC2_EDID_IR_EDIDSTOP_mask                                                   (0x00000010)
#define DDC2_EDID_IR_EDIDSTOP(data)                                                  (0x00000010&((data)<<4))
#define DDC2_EDID_IR_EDIDSTOP_src(data)                                              ((0x00000010&(data))>>4)
#define DDC2_EDID_IR_get_EDIDSTOP(data)                                              ((0x00000010&(data))>>4)
#define DDC2_EDID_IR_I2C_M_RD_ST_IE_shift                                            (3)
#define DDC2_EDID_IR_I2C_M_RD_ST_IE_mask                                             (0x00000008)
#define DDC2_EDID_IR_I2C_M_RD_ST_IE(data)                                            (0x00000008&((data)<<3))
#define DDC2_EDID_IR_I2C_M_RD_ST_IE_src(data)                                        ((0x00000008&(data))>>3)
#define DDC2_EDID_IR_get_I2C_M_RD_ST_IE(data)                                        ((0x00000008&(data))>>3)
#define DDC2_EDID_IR_I2C_M_RD_SP_IE_shift                                            (2)
#define DDC2_EDID_IR_I2C_M_RD_SP_IE_mask                                             (0x00000004)
#define DDC2_EDID_IR_I2C_M_RD_SP_IE(data)                                            (0x00000004&((data)<<2))
#define DDC2_EDID_IR_I2C_M_RD_SP_IE_src(data)                                        ((0x00000004&(data))>>2)
#define DDC2_EDID_IR_get_I2C_M_RD_SP_IE(data)                                        ((0x00000004&(data))>>2)
#define DDC2_EDID_IR_EDIDSUBADDRESS_IE_shift                                         (1)
#define DDC2_EDID_IR_EDIDSUBADDRESS_IE_mask                                          (0x00000002)
#define DDC2_EDID_IR_EDIDSUBADDRESS_IE(data)                                         (0x00000002&((data)<<1))
#define DDC2_EDID_IR_EDIDSUBADDRESS_IE_src(data)                                     ((0x00000002&(data))>>1)
#define DDC2_EDID_IR_get_EDIDSUBADDRESS_IE(data)                                     ((0x00000002&(data))>>1)
#define DDC2_EDID_IR_EDIDSTOP_IE_shift                                               (0)
#define DDC2_EDID_IR_EDIDSTOP_IE_mask                                                (0x00000001)
#define DDC2_EDID_IR_EDIDSTOP_IE(data)                                               (0x00000001&((data)<<0))
#define DDC2_EDID_IR_EDIDSTOP_IE_src(data)                                           ((0x00000001&(data))>>0)
#define DDC2_EDID_IR_get_EDIDSTOP_IE(data)                                           ((0x00000001&(data))>>0)


#define DDC2_DDC_SIR                                                                 0x1801BA20
#define DDC2_DDC_SIR_reg_addr                                                        "0xB801BA20"
#define DDC2_DDC_SIR_reg                                                             0xB801BA20
#define set_DDC2_DDC_SIR_reg(data)   (*((volatile unsigned int*) DDC2_DDC_SIR_reg)=data)
#define get_DDC2_DDC_SIR_reg   (*((volatile unsigned int*) DDC2_DDC_SIR_reg))
#define DDC2_DDC_SIR_inst_adr                                                        "0x0088"
#define DDC2_DDC_SIR_inst                                                            0x0088
#define DDC2_DDC_SIR_EDIDAP_shift                                                    (0)
#define DDC2_DDC_SIR_EDIDAP_mask                                                     (0x000000FF)
#define DDC2_DDC_SIR_EDIDAP(data)                                                    (0x000000FF&((data)<<0))
#define DDC2_DDC_SIR_EDIDAP_src(data)                                                ((0x000000FF&(data))>>0)
#define DDC2_DDC_SIR_get_EDIDAP(data)                                                ((0x000000FF&(data))>>0)


#define DDC2_DDC_SAP                                                                 0x1801BA24
#define DDC2_DDC_SAP_reg_addr                                                        "0xB801BA24"
#define DDC2_DDC_SAP_reg                                                             0xB801BA24
#define set_DDC2_DDC_SAP_reg(data)   (*((volatile unsigned int*) DDC2_DDC_SAP_reg)=data)
#define get_DDC2_DDC_SAP_reg   (*((volatile unsigned int*) DDC2_DDC_SAP_reg))
#define DDC2_DDC_SAP_inst_adr                                                        "0x0089"
#define DDC2_DDC_SAP_inst                                                            0x0089
#define DDC2_DDC_SAP_EDIDDP_shift                                                    (0)
#define DDC2_DDC_SAP_EDIDDP_mask                                                     (0x000000FF)
#define DDC2_DDC_SAP_EDIDDP(data)                                                    (0x000000FF&((data)<<0))
#define DDC2_DDC_SAP_EDIDDP_src(data)                                                ((0x000000FF&(data))>>0)
#define DDC2_DDC_SAP_get_EDIDDP(data)                                                ((0x000000FF&(data))>>0)


#define DDC2_DDC_BISTCR                                                              0x1801BA28
#define DDC2_DDC_BISTCR_reg_addr                                                     "0xB801BA28"
#define DDC2_DDC_BISTCR_reg                                                          0xB801BA28
#define set_DDC2_DDC_BISTCR_reg(data)   (*((volatile unsigned int*) DDC2_DDC_BISTCR_reg)=data)
#define get_DDC2_DDC_BISTCR_reg   (*((volatile unsigned int*) DDC2_DDC_BISTCR_reg))
#define DDC2_DDC_BISTCR_inst_adr                                                     "0x008A"
#define DDC2_DDC_BISTCR_inst                                                         0x008A
#define DDC2_DDC_BISTCR_DDC_BIST_RME_shift                                           (4)
#define DDC2_DDC_BISTCR_DDC_BIST_RME_mask                                            (0x00000010)
#define DDC2_DDC_BISTCR_DDC_BIST_RME(data)                                           (0x00000010&((data)<<4))
#define DDC2_DDC_BISTCR_DDC_BIST_RME_src(data)                                       ((0x00000010&(data))>>4)
#define DDC2_DDC_BISTCR_get_DDC_BIST_RME(data)                                       ((0x00000010&(data))>>4)
#define DDC2_DDC_BISTCR_DDC_BIST_RM_shift                                            (0)
#define DDC2_DDC_BISTCR_DDC_BIST_RM_mask                                             (0x0000000F)
#define DDC2_DDC_BISTCR_DDC_BIST_RM(data)                                            (0x0000000F&((data)<<0))
#define DDC2_DDC_BISTCR_DDC_BIST_RM_src(data)                                        ((0x0000000F&(data))>>0)
#define DDC2_DDC_BISTCR_get_DDC_BIST_RM(data)                                        ((0x0000000F&(data))>>0)


#define DDC2_DDC_SCR                                                                 0x1801BA2C
#define DDC2_DDC_SCR_reg_addr                                                        "0xB801BA2C"
#define DDC2_DDC_SCR_reg                                                             0xB801BA2C
#define set_DDC2_DDC_SCR_reg(data)   (*((volatile unsigned int*) DDC2_DDC_SCR_reg)=data)
#define get_DDC2_DDC_SCR_reg   (*((volatile unsigned int*) DDC2_DDC_SCR_reg))
#define DDC2_DDC_SCR_inst_adr                                                        "0x008B"
#define DDC2_DDC_SCR_inst                                                            0x008B
#define DDC2_DDC_SCR_SEGPT_LATIE_shift                                               (7)
#define DDC2_DDC_SCR_SEGPT_LATIE_mask                                                (0x00000080)
#define DDC2_DDC_SCR_SEGPT_LATIE(data)                                               (0x00000080&((data)<<7))
#define DDC2_DDC_SCR_SEGPT_LATIE_src(data)                                           ((0x00000080&(data))>>7)
#define DDC2_DDC_SCR_get_SEGPT_LATIE(data)                                           ((0x00000080&(data))>>7)
#define DDC2_DDC_SCR_Dataoutputdelay_sel_shift                                       (4)
#define DDC2_DDC_SCR_Dataoutputdelay_sel_mask                                        (0x00000070)
#define DDC2_DDC_SCR_Dataoutputdelay_sel(data)                                       (0x00000070&((data)<<4))
#define DDC2_DDC_SCR_Dataoutputdelay_sel_src(data)                                   ((0x00000070&(data))>>4)
#define DDC2_DDC_SCR_get_Dataoutputdelay_sel(data)                                   ((0x00000070&(data))>>4)
#define DDC2_DDC_SCR_I2C_M_RD_ST_STS_shift                                           (2)
#define DDC2_DDC_SCR_I2C_M_RD_ST_STS_mask                                            (0x00000004)
#define DDC2_DDC_SCR_I2C_M_RD_ST_STS(data)                                           (0x00000004&((data)<<2))
#define DDC2_DDC_SCR_I2C_M_RD_ST_STS_src(data)                                       ((0x00000004&(data))>>2)
#define DDC2_DDC_SCR_get_I2C_M_RD_ST_STS(data)                                       ((0x00000004&(data))>>2)
#define DDC2_DDC_SCR_I2C_M_RD_SP_STS_shift                                           (1)
#define DDC2_DDC_SCR_I2C_M_RD_SP_STS_mask                                            (0x00000002)
#define DDC2_DDC_SCR_I2C_M_RD_SP_STS(data)                                           (0x00000002&((data)<<1))
#define DDC2_DDC_SCR_I2C_M_RD_SP_STS_src(data)                                       ((0x00000002&(data))>>1)
#define DDC2_DDC_SCR_get_I2C_M_RD_SP_STS(data)                                       ((0x00000002&(data))>>1)
#define DDC2_DDC_SCR_SGID_EN_shift                                                   (0)
#define DDC2_DDC_SCR_SGID_EN_mask                                                    (0x00000001)
#define DDC2_DDC_SCR_SGID_EN(data)                                                   (0x00000001&((data)<<0))
#define DDC2_DDC_SCR_SGID_EN_src(data)                                               ((0x00000001&(data))>>0)
#define DDC2_DDC_SCR_get_SGID_EN(data)                                               ((0x00000001&(data))>>0)


#define DDC2_DDC_SSAR                                                                0x1801BA30
#define DDC2_DDC_SSAR_reg_addr                                                       "0xB801BA30"
#define DDC2_DDC_SSAR_reg                                                            0xB801BA30
#define set_DDC2_DDC_SSAR_reg(data)   (*((volatile unsigned int*) DDC2_DDC_SSAR_reg)=data)
#define get_DDC2_DDC_SSAR_reg   (*((volatile unsigned int*) DDC2_DDC_SSAR_reg))
#define DDC2_DDC_SSAR_inst_adr                                                       "0x008C"
#define DDC2_DDC_SSAR_inst                                                           0x008C
#define DDC2_DDC_SSAR_SGID_ADDRESS_shift                                             (1)
#define DDC2_DDC_SSAR_SGID_ADDRESS_mask                                              (0x000000FE)
#define DDC2_DDC_SSAR_SGID_ADDRESS(data)                                             (0x000000FE&((data)<<1))
#define DDC2_DDC_SSAR_SGID_ADDRESS_src(data)                                         ((0x000000FE&(data))>>1)
#define DDC2_DDC_SSAR_get_SGID_ADDRESS(data)                                         ((0x000000FE&(data))>>1)
#define DDC2_DDC_SSAR_SGID_DTRDEN_shift                                              (0)
#define DDC2_DDC_SSAR_SGID_DTRDEN_mask                                               (0x00000001)
#define DDC2_DDC_SSAR_SGID_DTRDEN(data)                                              (0x00000001&((data)<<0))
#define DDC2_DDC_SSAR_SGID_DTRDEN_src(data)                                          ((0x00000001&(data))>>0)
#define DDC2_DDC_SSAR_get_SGID_DTRDEN(data)                                          ((0x00000001&(data))>>0)


#define DDC2_DDC_SPR                                                                 0x1801BA34
#define DDC2_DDC_SPR_reg_addr                                                        "0xB801BA34"
#define DDC2_DDC_SPR_reg                                                             0xB801BA34
#define set_DDC2_DDC_SPR_reg(data)   (*((volatile unsigned int*) DDC2_DDC_SPR_reg)=data)
#define get_DDC2_DDC_SPR_reg   (*((volatile unsigned int*) DDC2_DDC_SPR_reg))
#define DDC2_DDC_SPR_inst_adr                                                        "0x008D"
#define DDC2_DDC_SPR_inst                                                            0x008D
#define DDC2_DDC_SPR_SEGPT_LATCHED_shift                                             (7)
#define DDC2_DDC_SPR_SEGPT_LATCHED_mask                                              (0x00000080)
#define DDC2_DDC_SPR_SEGPT_LATCHED(data)                                             (0x00000080&((data)<<7))
#define DDC2_DDC_SPR_SEGPT_LATCHED_src(data)                                         ((0x00000080&(data))>>7)
#define DDC2_DDC_SPR_get_SEGPT_LATCHED(data)                                         ((0x00000080&(data))>>7)
#define DDC2_DDC_SPR_SEG_PT_shift                                                    (0)
#define DDC2_DDC_SPR_SEG_PT_mask                                                     (0x0000007F)
#define DDC2_DDC_SPR_SEG_PT(data)                                                    (0x0000007F&((data)<<0))
#define DDC2_DDC_SPR_SEG_PT_src(data)                                                ((0x0000007F&(data))>>0)
#define DDC2_DDC_SPR_get_SEG_PT(data)                                                ((0x0000007F&(data))>>0)


#define DDC2_DDC_SFCR                                                                0x1801BA38
#define DDC2_DDC_SFCR_reg_addr                                                       "0xB801BA38"
#define DDC2_DDC_SFCR_reg                                                            0xB801BA38
#define set_DDC2_DDC_SFCR_reg(data)   (*((volatile unsigned int*) DDC2_DDC_SFCR_reg)=data)
#define get_DDC2_DDC_SFCR_reg   (*((volatile unsigned int*) DDC2_DDC_SFCR_reg))
#define DDC2_DDC_SFCR_inst_adr                                                       "0x008E"
#define DDC2_DDC_SFCR_inst                                                           0x008E
#define DDC2_DDC_SFCR_SPECIAL_MODE_shift                                             (3)
#define DDC2_DDC_SFCR_SPECIAL_MODE_mask                                              (0x00000008)
#define DDC2_DDC_SFCR_SPECIAL_MODE(data)                                             (0x00000008&((data)<<3))
#define DDC2_DDC_SFCR_SPECIAL_MODE_src(data)                                         ((0x00000008&(data))>>3)
#define DDC2_DDC_SFCR_get_SPECIAL_MODE(data)                                         ((0x00000008&(data))>>3)
#define DDC2_DDC_SFCR_DOFFPT_RESET_shift                                             (2)
#define DDC2_DDC_SFCR_DOFFPT_RESET_mask                                              (0x00000004)
#define DDC2_DDC_SFCR_DOFFPT_RESET(data)                                             (0x00000004&((data)<<2))
#define DDC2_DDC_SFCR_DOFFPT_RESET_src(data)                                         ((0x00000004&(data))>>2)
#define DDC2_DDC_SFCR_get_DOFFPT_RESET(data)                                         ((0x00000004&(data))>>2)
#define DDC2_DDC_SFCR_DIFFPT_RESET_shift                                             (1)
#define DDC2_DDC_SFCR_DIFFPT_RESET_mask                                              (0x00000002)
#define DDC2_DDC_SFCR_DIFFPT_RESET(data)                                             (0x00000002&((data)<<1))
#define DDC2_DDC_SFCR_DIFFPT_RESET_src(data)                                         ((0x00000002&(data))>>1)
#define DDC2_DDC_SFCR_get_DIFFPT_RESET(data)                                         ((0x00000002&(data))>>1)
#define DDC2_DDC_SFCR_CIID_EN_shift                                                  (0)
#define DDC2_DDC_SFCR_CIID_EN_mask                                                   (0x00000001)
#define DDC2_DDC_SFCR_CIID_EN(data)                                                  (0x00000001&((data)<<0))
#define DDC2_DDC_SFCR_CIID_EN_src(data)                                              ((0x00000001&(data))>>0)
#define DDC2_DDC_SFCR_get_CIID_EN(data)                                              ((0x00000001&(data))>>0)


#define DDC2_DDC_SFSAR                                                               0x1801BA3C
#define DDC2_DDC_SFSAR_reg_addr                                                      "0xB801BA3C"
#define DDC2_DDC_SFSAR_reg                                                           0xB801BA3C
#define set_DDC2_DDC_SFSAR_reg(data)   (*((volatile unsigned int*) DDC2_DDC_SFSAR_reg)=data)
#define get_DDC2_DDC_SFSAR_reg   (*((volatile unsigned int*) DDC2_DDC_SFSAR_reg))
#define DDC2_DDC_SFSAR_inst_adr                                                      "0x008F"
#define DDC2_DDC_SFSAR_inst                                                          0x008F
#define DDC2_DDC_SFSAR_CIID_ADDRESS_shift                                            (1)
#define DDC2_DDC_SFSAR_CIID_ADDRESS_mask                                             (0x000000FE)
#define DDC2_DDC_SFSAR_CIID_ADDRESS(data)                                            (0x000000FE&((data)<<1))
#define DDC2_DDC_SFSAR_CIID_ADDRESS_src(data)                                        ((0x000000FE&(data))>>1)
#define DDC2_DDC_SFSAR_get_CIID_ADDRESS(data)                                        ((0x000000FE&(data))>>1)
#define DDC2_DDC_SFSAR_CIRWS_CURRENT_shift                                           (0)
#define DDC2_DDC_SFSAR_CIRWS_CURRENT_mask                                            (0x00000001)
#define DDC2_DDC_SFSAR_CIRWS_CURRENT(data)                                           (0x00000001&((data)<<0))
#define DDC2_DDC_SFSAR_CIRWS_CURRENT_src(data)                                       ((0x00000001&(data))>>0)
#define DDC2_DDC_SFSAR_get_CIRWS_CURRENT(data)                                       ((0x00000001&(data))>>0)


#define DDC2_DDC_SFDR                                                                0x1801BA40
#define DDC2_DDC_SFDR_reg_addr                                                       "0xB801BA40"
#define DDC2_DDC_SFDR_reg                                                            0xB801BA40
#define set_DDC2_DDC_SFDR_reg(data)   (*((volatile unsigned int*) DDC2_DDC_SFDR_reg)=data)
#define get_DDC2_DDC_SFDR_reg   (*((volatile unsigned int*) DDC2_DDC_SFDR_reg))
#define DDC2_DDC_SFDR_inst_adr                                                       "0x0090"
#define DDC2_DDC_SFDR_inst                                                           0x0090
#define DDC2_DDC_SFDR_CIIDDP_shift                                                   (0)
#define DDC2_DDC_SFDR_CIIDDP_mask                                                    (0x000000FF)
#define DDC2_DDC_SFDR_CIIDDP(data)                                                   (0x000000FF&((data)<<0))
#define DDC2_DDC_SFDR_CIIDDP_src(data)                                               ((0x000000FF&(data))>>0)
#define DDC2_DDC_SFDR_get_CIIDDP(data)                                               ((0x000000FF&(data))>>0)


#define DDC2_DDC_SFBSR                                                               0x1801BA44
#define DDC2_DDC_SFBSR_reg_addr                                                      "0xB801BA44"
#define DDC2_DDC_SFBSR_reg                                                           0xB801BA44
#define set_DDC2_DDC_SFBSR_reg(data)   (*((volatile unsigned int*) DDC2_DDC_SFBSR_reg)=data)
#define get_DDC2_DDC_SFBSR_reg   (*((volatile unsigned int*) DDC2_DDC_SFBSR_reg))
#define DDC2_DDC_SFBSR_inst_adr                                                      "0x0091"
#define DDC2_DDC_SFBSR_inst                                                          0x0091
#define DDC2_DDC_SFBSR_CIRWS_2ND_shift                                               (5)
#define DDC2_DDC_SFBSR_CIRWS_2ND_mask                                                (0x00000020)
#define DDC2_DDC_SFBSR_CIRWS_2ND(data)                                               (0x00000020&((data)<<5))
#define DDC2_DDC_SFBSR_CIRWS_2ND_src(data)                                           ((0x00000020&(data))>>5)
#define DDC2_DDC_SFBSR_get_CIRWS_2ND(data)                                           ((0x00000020&(data))>>5)
#define DDC2_DDC_SFBSR_CIRWS_1ST_shift                                               (4)
#define DDC2_DDC_SFBSR_CIRWS_1ST_mask                                                (0x00000010)
#define DDC2_DDC_SFBSR_CIRWS_1ST(data)                                               (0x00000010&((data)<<4))
#define DDC2_DDC_SFBSR_CIRWS_1ST_src(data)                                           ((0x00000010&(data))>>4)
#define DDC2_DDC_SFBSR_get_CIRWS_1ST(data)                                           ((0x00000010&(data))>>4)
#define DDC2_DDC_SFBSR_CIPPT_2ND_shift                                               (3)
#define DDC2_DDC_SFBSR_CIPPT_2ND_mask                                                (0x00000008)
#define DDC2_DDC_SFBSR_CIPPT_2ND(data)                                               (0x00000008&((data)<<3))
#define DDC2_DDC_SFBSR_CIPPT_2ND_src(data)                                           ((0x00000008&(data))>>3)
#define DDC2_DDC_SFBSR_get_CIPPT_2ND(data)                                           ((0x00000008&(data))>>3)
#define DDC2_DDC_SFBSR_CISPT_2ND_shift                                               (2)
#define DDC2_DDC_SFBSR_CISPT_2ND_mask                                                (0x00000004)
#define DDC2_DDC_SFBSR_CISPT_2ND(data)                                               (0x00000004&((data)<<2))
#define DDC2_DDC_SFBSR_CISPT_2ND_src(data)                                           ((0x00000004&(data))>>2)
#define DDC2_DDC_SFBSR_get_CISPT_2ND(data)                                           ((0x00000004&(data))>>2)
#define DDC2_DDC_SFBSR_CIPPT_1ST_shift                                               (1)
#define DDC2_DDC_SFBSR_CIPPT_1ST_mask                                                (0x00000002)
#define DDC2_DDC_SFBSR_CIPPT_1ST(data)                                               (0x00000002&((data)<<1))
#define DDC2_DDC_SFBSR_CIPPT_1ST_src(data)                                           ((0x00000002&(data))>>1)
#define DDC2_DDC_SFBSR_get_CIPPT_1ST(data)                                           ((0x00000002&(data))>>1)
#define DDC2_DDC_SFBSR_CISPT_1ST_shift                                               (0)
#define DDC2_DDC_SFBSR_CISPT_1ST_mask                                                (0x00000001)
#define DDC2_DDC_SFBSR_CISPT_1ST(data)                                               (0x00000001&((data)<<0))
#define DDC2_DDC_SFBSR_CISPT_1ST_src(data)                                           ((0x00000001&(data))>>0)
#define DDC2_DDC_SFBSR_get_CISPT_1ST(data)                                           ((0x00000001&(data))>>0)


#define DDC2_DDC_SFIBLR                                                              0x1801BA48
#define DDC2_DDC_SFIBLR_reg_addr                                                     "0xB801BA48"
#define DDC2_DDC_SFIBLR_reg                                                          0xB801BA48
#define set_DDC2_DDC_SFIBLR_reg(data)   (*((volatile unsigned int*) DDC2_DDC_SFIBLR_reg)=data)
#define get_DDC2_DDC_SFIBLR_reg   (*((volatile unsigned int*) DDC2_DDC_SFIBLR_reg))
#define DDC2_DDC_SFIBLR_inst_adr                                                     "0x0092"
#define DDC2_DDC_SFIBLR_inst                                                         0x0092
#define DDC2_DDC_SFIBLR_FFDI_DLEN_shift                                              (0)
#define DDC2_DDC_SFIBLR_FFDI_DLEN_mask                                               (0x0000001F)
#define DDC2_DDC_SFIBLR_FFDI_DLEN(data)                                              (0x0000001F&((data)<<0))
#define DDC2_DDC_SFIBLR_FFDI_DLEN_src(data)                                          ((0x0000001F&(data))>>0)
#define DDC2_DDC_SFIBLR_get_FFDI_DLEN(data)                                          ((0x0000001F&(data))>>0)


#define DDC2_DDC_SFIBRWPR                                                            0x1801BA4C
#define DDC2_DDC_SFIBRWPR_reg_addr                                                   "0xB801BA4C"
#define DDC2_DDC_SFIBRWPR_reg                                                        0xB801BA4C
#define set_DDC2_DDC_SFIBRWPR_reg(data)   (*((volatile unsigned int*) DDC2_DDC_SFIBRWPR_reg)=data)
#define get_DDC2_DDC_SFIBRWPR_reg   (*((volatile unsigned int*) DDC2_DDC_SFIBRWPR_reg))
#define DDC2_DDC_SFIBRWPR_inst_adr                                                   "0x0093"
#define DDC2_DDC_SFIBRWPR_inst                                                       0x0093
#define DDC2_DDC_SFIBRWPR_DIFF_WPT_shift                                             (4)
#define DDC2_DDC_SFIBRWPR_DIFF_WPT_mask                                              (0x000000F0)
#define DDC2_DDC_SFIBRWPR_DIFF_WPT(data)                                             (0x000000F0&((data)<<4))
#define DDC2_DDC_SFIBRWPR_DIFF_WPT_src(data)                                         ((0x000000F0&(data))>>4)
#define DDC2_DDC_SFIBRWPR_get_DIFF_WPT(data)                                         ((0x000000F0&(data))>>4)
#define DDC2_DDC_SFIBRWPR_DIFF_RPT_shift                                             (0)
#define DDC2_DDC_SFIBRWPR_DIFF_RPT_mask                                              (0x0000000F)
#define DDC2_DDC_SFIBRWPR_DIFF_RPT(data)                                             (0x0000000F&((data)<<0))
#define DDC2_DDC_SFIBRWPR_DIFF_RPT_src(data)                                         ((0x0000000F&(data))>>0)
#define DDC2_DDC_SFIBRWPR_get_DIFF_RPT(data)                                         ((0x0000000F&(data))>>0)


#define DDC2_DDC_SFIBSWPR                                                            0x1801BA50
#define DDC2_DDC_SFIBSWPR_reg_addr                                                   "0xB801BA50"
#define DDC2_DDC_SFIBSWPR_reg                                                        0xB801BA50
#define set_DDC2_DDC_SFIBSWPR_reg(data)   (*((volatile unsigned int*) DDC2_DDC_SFIBSWPR_reg)=data)
#define get_DDC2_DDC_SFIBSWPR_reg   (*((volatile unsigned int*) DDC2_DDC_SFIBSWPR_reg))
#define DDC2_DDC_SFIBSWPR_inst_adr                                                   "0x0094"
#define DDC2_DDC_SFIBSWPR_inst                                                       0x0094
#define DDC2_DDC_SFIBSWPR_DIFFSTOP_PT_shift                                          (0)
#define DDC2_DDC_SFIBSWPR_DIFFSTOP_PT_mask                                           (0x0000000F)
#define DDC2_DDC_SFIBSWPR_DIFFSTOP_PT(data)                                          (0x0000000F&((data)<<0))
#define DDC2_DDC_SFIBSWPR_DIFFSTOP_PT_src(data)                                      ((0x0000000F&(data))>>0)
#define DDC2_DDC_SFIBSWPR_get_DIFFSTOP_PT(data)                                      ((0x0000000F&(data))>>0)


#define DDC2_DDC_SFOBSR                                                              0x1801BA54
#define DDC2_DDC_SFOBSR_reg_addr                                                     "0xB801BA54"
#define DDC2_DDC_SFOBSR_reg                                                          0xB801BA54
#define set_DDC2_DDC_SFOBSR_reg(data)   (*((volatile unsigned int*) DDC2_DDC_SFOBSR_reg)=data)
#define get_DDC2_DDC_SFOBSR_reg   (*((volatile unsigned int*) DDC2_DDC_SFOBSR_reg))
#define DDC2_DDC_SFOBSR_inst_adr                                                     "0x0095"
#define DDC2_DDC_SFOBSR_inst                                                         0x0095
#define DDC2_DDC_SFOBSR_FFDO_DLEN_shift                                              (0)
#define DDC2_DDC_SFOBSR_FFDO_DLEN_mask                                               (0x0000001F)
#define DDC2_DDC_SFOBSR_FFDO_DLEN(data)                                              (0x0000001F&((data)<<0))
#define DDC2_DDC_SFOBSR_FFDO_DLEN_src(data)                                          ((0x0000001F&(data))>>0)
#define DDC2_DDC_SFOBSR_get_FFDO_DLEN(data)                                          ((0x0000001F&(data))>>0)


#define DDC2_DDC_SFOBRWPR                                                            0x1801BA58
#define DDC2_DDC_SFOBRWPR_reg_addr                                                   "0xB801BA58"
#define DDC2_DDC_SFOBRWPR_reg                                                        0xB801BA58
#define set_DDC2_DDC_SFOBRWPR_reg(data)   (*((volatile unsigned int*) DDC2_DDC_SFOBRWPR_reg)=data)
#define get_DDC2_DDC_SFOBRWPR_reg   (*((volatile unsigned int*) DDC2_DDC_SFOBRWPR_reg))
#define DDC2_DDC_SFOBRWPR_inst_adr                                                   "0x0096"
#define DDC2_DDC_SFOBRWPR_inst                                                       0x0096
#define DDC2_DDC_SFOBRWPR_DOFF_WPT_shift                                             (4)
#define DDC2_DDC_SFOBRWPR_DOFF_WPT_mask                                              (0x000000F0)
#define DDC2_DDC_SFOBRWPR_DOFF_WPT(data)                                             (0x000000F0&((data)<<4))
#define DDC2_DDC_SFOBRWPR_DOFF_WPT_src(data)                                         ((0x000000F0&(data))>>4)
#define DDC2_DDC_SFOBRWPR_get_DOFF_WPT(data)                                         ((0x000000F0&(data))>>4)
#define DDC2_DDC_SFOBRWPR_DOFF_RPT_shift                                             (0)
#define DDC2_DDC_SFOBRWPR_DOFF_RPT_mask                                              (0x0000000F)
#define DDC2_DDC_SFOBRWPR_DOFF_RPT(data)                                             (0x0000000F&((data)<<0))
#define DDC2_DDC_SFOBRWPR_DOFF_RPT_src(data)                                         ((0x0000000F&(data))>>0)
#define DDC2_DDC_SFOBRWPR_get_DOFF_RPT(data)                                         ((0x0000000F&(data))>>0)


#define DDC2_DDC_SFSR                                                                0x1801BA5C
#define DDC2_DDC_SFSR_reg_addr                                                       "0xB801BA5C"
#define DDC2_DDC_SFSR_reg                                                            0xB801BA5C
#define set_DDC2_DDC_SFSR_reg(data)   (*((volatile unsigned int*) DDC2_DDC_SFSR_reg)=data)
#define get_DDC2_DDC_SFSR_reg   (*((volatile unsigned int*) DDC2_DDC_SFSR_reg))
#define DDC2_DDC_SFSR_inst_adr                                                       "0x0097"
#define DDC2_DDC_SFSR_inst                                                           0x0097
#define DDC2_DDC_SFSR_FFDOUF_ST_shift                                                (7)
#define DDC2_DDC_SFSR_FFDOUF_ST_mask                                                 (0x00000080)
#define DDC2_DDC_SFSR_FFDOUF_ST(data)                                                (0x00000080&((data)<<7))
#define DDC2_DDC_SFSR_FFDOUF_ST_src(data)                                            ((0x00000080&(data))>>7)
#define DDC2_DDC_SFSR_get_FFDOUF_ST(data)                                            ((0x00000080&(data))>>7)
#define DDC2_DDC_SFSR_FFDIOF_ST_shift                                                (6)
#define DDC2_DDC_SFSR_FFDIOF_ST_mask                                                 (0x00000040)
#define DDC2_DDC_SFSR_FFDIOF_ST(data)                                                (0x00000040&((data)<<6))
#define DDC2_DDC_SFSR_FFDIOF_ST_src(data)                                            ((0x00000040&(data))>>6)
#define DDC2_DDC_SFSR_get_FFDIOF_ST(data)                                            ((0x00000040&(data))>>6)
#define DDC2_DDC_SFSR_FFDONF_ST_shift                                                (5)
#define DDC2_DDC_SFSR_FFDONF_ST_mask                                                 (0x00000020)
#define DDC2_DDC_SFSR_FFDONF_ST(data)                                                (0x00000020&((data)<<5))
#define DDC2_DDC_SFSR_FFDONF_ST_src(data)                                            ((0x00000020&(data))>>5)
#define DDC2_DDC_SFSR_get_FFDONF_ST(data)                                            ((0x00000020&(data))>>5)
#define DDC2_DDC_SFSR_FFDOET_ST_shift                                                (4)
#define DDC2_DDC_SFSR_FFDOET_ST_mask                                                 (0x00000010)
#define DDC2_DDC_SFSR_FFDOET_ST(data)                                                (0x00000010&((data)<<4))
#define DDC2_DDC_SFSR_FFDOET_ST_src(data)                                            ((0x00000010&(data))>>4)
#define DDC2_DDC_SFSR_get_FFDOET_ST(data)                                            ((0x00000010&(data))>>4)
#define DDC2_DDC_SFSR_FFDIFU_ST_shift                                                (3)
#define DDC2_DDC_SFSR_FFDIFU_ST_mask                                                 (0x00000008)
#define DDC2_DDC_SFSR_FFDIFU_ST(data)                                                (0x00000008&((data)<<3))
#define DDC2_DDC_SFSR_FFDIFU_ST_src(data)                                            ((0x00000008&(data))>>3)
#define DDC2_DDC_SFSR_get_FFDIFU_ST(data)                                            ((0x00000008&(data))>>3)
#define DDC2_DDC_SFSR_FFDINE_ST_shift                                                (2)
#define DDC2_DDC_SFSR_FFDINE_ST_mask                                                 (0x00000004)
#define DDC2_DDC_SFSR_FFDINE_ST(data)                                                (0x00000004&((data)<<2))
#define DDC2_DDC_SFSR_FFDINE_ST_src(data)                                            ((0x00000004&(data))>>2)
#define DDC2_DDC_SFSR_get_FFDINE_ST(data)                                            ((0x00000004&(data))>>2)


#define DDC2_DDC_SFIR                                                                0x1801BA60
#define DDC2_DDC_SFIR_reg_addr                                                       "0xB801BA60"
#define DDC2_DDC_SFIR_reg                                                            0xB801BA60
#define set_DDC2_DDC_SFIR_reg(data)   (*((volatile unsigned int*) DDC2_DDC_SFIR_reg)=data)
#define get_DDC2_DDC_SFIR_reg   (*((volatile unsigned int*) DDC2_DDC_SFIR_reg))
#define DDC2_DDC_SFIR_inst_adr                                                       "0x0098"
#define DDC2_DDC_SFIR_inst                                                           0x0098
#define DDC2_DDC_SFIR_FFDOUF_IE_shift                                                (7)
#define DDC2_DDC_SFIR_FFDOUF_IE_mask                                                 (0x00000080)
#define DDC2_DDC_SFIR_FFDOUF_IE(data)                                                (0x00000080&((data)<<7))
#define DDC2_DDC_SFIR_FFDOUF_IE_src(data)                                            ((0x00000080&(data))>>7)
#define DDC2_DDC_SFIR_get_FFDOUF_IE(data)                                            ((0x00000080&(data))>>7)
#define DDC2_DDC_SFIR_FFDIOF_IE_shift                                                (6)
#define DDC2_DDC_SFIR_FFDIOF_IE_mask                                                 (0x00000040)
#define DDC2_DDC_SFIR_FFDIOF_IE(data)                                                (0x00000040&((data)<<6))
#define DDC2_DDC_SFIR_FFDIOF_IE_src(data)                                            ((0x00000040&(data))>>6)
#define DDC2_DDC_SFIR_get_FFDIOF_IE(data)                                            ((0x00000040&(data))>>6)
#define DDC2_DDC_SFIR_FFDONF_IE_shift                                                (5)
#define DDC2_DDC_SFIR_FFDONF_IE_mask                                                 (0x00000020)
#define DDC2_DDC_SFIR_FFDONF_IE(data)                                                (0x00000020&((data)<<5))
#define DDC2_DDC_SFIR_FFDONF_IE_src(data)                                            ((0x00000020&(data))>>5)
#define DDC2_DDC_SFIR_get_FFDONF_IE(data)                                            ((0x00000020&(data))>>5)
#define DDC2_DDC_SFIR_FFDOET_IE_shift                                                (4)
#define DDC2_DDC_SFIR_FFDOET_IE_mask                                                 (0x00000010)
#define DDC2_DDC_SFIR_FFDOET_IE(data)                                                (0x00000010&((data)<<4))
#define DDC2_DDC_SFIR_FFDOET_IE_src(data)                                            ((0x00000010&(data))>>4)
#define DDC2_DDC_SFIR_get_FFDOET_IE(data)                                            ((0x00000010&(data))>>4)
#define DDC2_DDC_SFIR_FFDIFU_IE_shift                                                (3)
#define DDC2_DDC_SFIR_FFDIFU_IE_mask                                                 (0x00000008)
#define DDC2_DDC_SFIR_FFDIFU_IE(data)                                                (0x00000008&((data)<<3))
#define DDC2_DDC_SFIR_FFDIFU_IE_src(data)                                            ((0x00000008&(data))>>3)
#define DDC2_DDC_SFIR_get_FFDIFU_IE(data)                                            ((0x00000008&(data))>>3)
#define DDC2_DDC_SFIR_FFDINE_IE_shift                                                (2)
#define DDC2_DDC_SFIR_FFDINE_IE_mask                                                 (0x00000004)
#define DDC2_DDC_SFIR_FFDINE_IE(data)                                                (0x00000004&((data)<<2))
#define DDC2_DDC_SFIR_FFDINE_IE_src(data)                                            ((0x00000004&(data))>>2)
#define DDC2_DDC_SFIR_get_FFDINE_IE(data)                                            ((0x00000004&(data))>>2)
#define DDC2_DDC_SFIR_CIPPT_IE_shift                                                 (1)
#define DDC2_DDC_SFIR_CIPPT_IE_mask                                                  (0x00000002)
#define DDC2_DDC_SFIR_CIPPT_IE(data)                                                 (0x00000002&((data)<<1))
#define DDC2_DDC_SFIR_CIPPT_IE_src(data)                                             ((0x00000002&(data))>>1)
#define DDC2_DDC_SFIR_get_CIPPT_IE(data)                                             ((0x00000002&(data))>>1)
#define DDC2_DDC_SFIR_CISPT_IE_shift                                                 (0)
#define DDC2_DDC_SFIR_CISPT_IE_mask                                                  (0x00000001)
#define DDC2_DDC_SFIR_CISPT_IE(data)                                                 (0x00000001&((data)<<0))
#define DDC2_DDC_SFIR_CISPT_IE_src(data)                                             ((0x00000001&(data))>>0)
#define DDC2_DDC_SFIR_get_CISPT_IE(data)                                             ((0x00000001&(data))>>0)


#define DDC2_DDC_FSMS                                                                0x1801BA64
#define DDC2_DDC_FSMS_reg_addr                                                       "0xB801BA64"
#define DDC2_DDC_FSMS_reg                                                            0xB801BA64
#define set_DDC2_DDC_FSMS_reg(data)   (*((volatile unsigned int*) DDC2_DDC_FSMS_reg)=data)
#define get_DDC2_DDC_FSMS_reg   (*((volatile unsigned int*) DDC2_DDC_FSMS_reg))
#define DDC2_DDC_FSMS_inst_adr                                                       "0x0099"
#define DDC2_DDC_FSMS_inst                                                           0x0099
#define DDC2_DDC_FSMS_CMDFSM_ST_shift                                                (0)
#define DDC2_DDC_FSMS_CMDFSM_ST_mask                                                 (0x000000FF)
#define DDC2_DDC_FSMS_CMDFSM_ST(data)                                                (0x000000FF&((data)<<0))
#define DDC2_DDC_FSMS_CMDFSM_ST_src(data)                                            ((0x000000FF&(data))>>0)
#define DDC2_DDC_FSMS_get_CMDFSM_ST(data)                                            ((0x000000FF&(data))>>0)


#define DDC2_DDC_DUMMY                                                               0x1801BA68
#define DDC2_DDC_DUMMY_reg_addr                                                      "0xB801BA68"
#define DDC2_DDC_DUMMY_reg                                                           0xB801BA68
#define set_DDC2_DDC_DUMMY_reg(data)   (*((volatile unsigned int*) DDC2_DDC_DUMMY_reg)=data)
#define get_DDC2_DDC_DUMMY_reg   (*((volatile unsigned int*) DDC2_DDC_DUMMY_reg))
#define DDC2_DDC_DUMMY_inst_adr                                                      "0x009A"
#define DDC2_DDC_DUMMY_inst                                                          0x009A
#define DDC2_DDC_DUMMY_Dummy_shift                                                   (0)
#define DDC2_DDC_DUMMY_Dummy_mask                                                    (0x000000FF)
#define DDC2_DDC_DUMMY_Dummy(data)                                                   (0x000000FF&((data)<<0))
#define DDC2_DDC_DUMMY_Dummy_src(data)                                               ((0x000000FF&(data))>>0)
#define DDC2_DDC_DUMMY_get_Dummy(data)                                               ((0x000000FF&(data))>>0)


#define DDC2_DDC_EDID_SRAM_READ_IRQ_EN                                               0x1801BA70
#define DDC2_DDC_EDID_SRAM_READ_IRQ_EN_reg_addr                                      "0xB801BA70"
#define DDC2_DDC_EDID_SRAM_READ_IRQ_EN_reg                                           0xB801BA70
#define set_DDC2_DDC_EDID_SRAM_READ_IRQ_EN_reg(data)   (*((volatile unsigned int*) DDC2_DDC_EDID_SRAM_READ_IRQ_EN_reg)=data)
#define get_DDC2_DDC_EDID_SRAM_READ_IRQ_EN_reg   (*((volatile unsigned int*) DDC2_DDC_EDID_SRAM_READ_IRQ_EN_reg))
#define DDC2_DDC_EDID_SRAM_READ_IRQ_EN_inst_adr                                      "0x009C"
#define DDC2_DDC_EDID_SRAM_READ_IRQ_EN_inst                                          0x009C
#define DDC2_DDC_EDID_SRAM_READ_IRQ_EN_START_IRQ_EN_shift                            (1)
#define DDC2_DDC_EDID_SRAM_READ_IRQ_EN_START_IRQ_EN_mask                             (0x00000002)
#define DDC2_DDC_EDID_SRAM_READ_IRQ_EN_START_IRQ_EN(data)                            (0x00000002&((data)<<1))
#define DDC2_DDC_EDID_SRAM_READ_IRQ_EN_START_IRQ_EN_src(data)                        ((0x00000002&(data))>>1)
#define DDC2_DDC_EDID_SRAM_READ_IRQ_EN_get_START_IRQ_EN(data)                        ((0x00000002&(data))>>1)
#define DDC2_DDC_EDID_SRAM_READ_IRQ_EN_STOP_IRQ_EN_shift                             (0)
#define DDC2_DDC_EDID_SRAM_READ_IRQ_EN_STOP_IRQ_EN_mask                              (0x00000001)
#define DDC2_DDC_EDID_SRAM_READ_IRQ_EN_STOP_IRQ_EN(data)                             (0x00000001&((data)<<0))
#define DDC2_DDC_EDID_SRAM_READ_IRQ_EN_STOP_IRQ_EN_src(data)                         ((0x00000001&(data))>>0)
#define DDC2_DDC_EDID_SRAM_READ_IRQ_EN_get_STOP_IRQ_EN(data)                         ((0x00000001&(data))>>0)


#define DDC2_DDC_EDID_SRAM_READ_AUX                                                  0x1801BA74
#define DDC2_DDC_EDID_SRAM_READ_AUX_reg_addr                                         "0xB801BA74"
#define DDC2_DDC_EDID_SRAM_READ_AUX_reg                                              0xB801BA74
#define set_DDC2_DDC_EDID_SRAM_READ_AUX_reg(data)   (*((volatile unsigned int*) DDC2_DDC_EDID_SRAM_READ_AUX_reg)=data)
#define get_DDC2_DDC_EDID_SRAM_READ_AUX_reg   (*((volatile unsigned int*) DDC2_DDC_EDID_SRAM_READ_AUX_reg))
#define DDC2_DDC_EDID_SRAM_READ_AUX_inst_adr                                         "0x009D"
#define DDC2_DDC_EDID_SRAM_READ_AUX_inst                                             0x009D
#define DDC2_DDC_EDID_SRAM_READ_AUX_START_shift                                      (1)
#define DDC2_DDC_EDID_SRAM_READ_AUX_START_mask                                       (0x00000002)
#define DDC2_DDC_EDID_SRAM_READ_AUX_START(data)                                      (0x00000002&((data)<<1))
#define DDC2_DDC_EDID_SRAM_READ_AUX_START_src(data)                                  ((0x00000002&(data))>>1)
#define DDC2_DDC_EDID_SRAM_READ_AUX_get_START(data)                                  ((0x00000002&(data))>>1)
#define DDC2_DDC_EDID_SRAM_READ_AUX_STOP_shift                                       (0)
#define DDC2_DDC_EDID_SRAM_READ_AUX_STOP_mask                                        (0x00000001)
#define DDC2_DDC_EDID_SRAM_READ_AUX_STOP(data)                                       (0x00000001&((data)<<0))
#define DDC2_DDC_EDID_SRAM_READ_AUX_STOP_src(data)                                   ((0x00000001&(data))>>0)
#define DDC2_DDC_EDID_SRAM_READ_AUX_get_STOP(data)                                   ((0x00000001&(data))>>0)


#define DDC2_DDC_BIST_MODE                                                           0x1801BA78
#define DDC2_DDC_BIST_MODE_reg_addr                                                  "0xB801BA78"
#define DDC2_DDC_BIST_MODE_reg                                                       0xB801BA78
#define set_DDC2_DDC_BIST_MODE_reg(data)   (*((volatile unsigned int*) DDC2_DDC_BIST_MODE_reg)=data)
#define get_DDC2_DDC_BIST_MODE_reg   (*((volatile unsigned int*) DDC2_DDC_BIST_MODE_reg))
#define DDC2_DDC_BIST_MODE_inst_adr                                                  "0x009E"
#define DDC2_DDC_BIST_MODE_inst                                                      0x009E
#define DDC2_DDC_BIST_MODE_DDC_BIST_MODE_shift                                       (0)
#define DDC2_DDC_BIST_MODE_DDC_BIST_MODE_mask                                        (0x00000001)
#define DDC2_DDC_BIST_MODE_DDC_BIST_MODE(data)                                       (0x00000001&((data)<<0))
#define DDC2_DDC_BIST_MODE_DDC_BIST_MODE_src(data)                                   ((0x00000001&(data))>>0)
#define DDC2_DDC_BIST_MODE_get_DDC_BIST_MODE(data)                                   ((0x00000001&(data))>>0)


#define DDC2_DDC_BIST_DONE                                                           0x1801BA7C
#define DDC2_DDC_BIST_DONE_reg_addr                                                  "0xB801BA7C"
#define DDC2_DDC_BIST_DONE_reg                                                       0xB801BA7C
#define set_DDC2_DDC_BIST_DONE_reg(data)   (*((volatile unsigned int*) DDC2_DDC_BIST_DONE_reg)=data)
#define get_DDC2_DDC_BIST_DONE_reg   (*((volatile unsigned int*) DDC2_DDC_BIST_DONE_reg))
#define DDC2_DDC_BIST_DONE_inst_adr                                                  "0x009F"
#define DDC2_DDC_BIST_DONE_inst                                                      0x009F
#define DDC2_DDC_BIST_DONE_DDC_BIST_DONE_shift                                       (0)
#define DDC2_DDC_BIST_DONE_DDC_BIST_DONE_mask                                        (0x00000001)
#define DDC2_DDC_BIST_DONE_DDC_BIST_DONE(data)                                       (0x00000001&((data)<<0))
#define DDC2_DDC_BIST_DONE_DDC_BIST_DONE_src(data)                                   ((0x00000001&(data))>>0)
#define DDC2_DDC_BIST_DONE_get_DDC_BIST_DONE(data)                                   ((0x00000001&(data))>>0)


#define DDC2_DDC_BIST_FAIL                                                           0x1801BA80
#define DDC2_DDC_BIST_FAIL_reg_addr                                                  "0xB801BA80"
#define DDC2_DDC_BIST_FAIL_reg                                                       0xB801BA80
#define set_DDC2_DDC_BIST_FAIL_reg(data)   (*((volatile unsigned int*) DDC2_DDC_BIST_FAIL_reg)=data)
#define get_DDC2_DDC_BIST_FAIL_reg   (*((volatile unsigned int*) DDC2_DDC_BIST_FAIL_reg))
#define DDC2_DDC_BIST_FAIL_inst_adr                                                  "0x00A0"
#define DDC2_DDC_BIST_FAIL_inst                                                      0x00A0
#define DDC2_DDC_BIST_FAIL_DDC_BIST_FAIL_shift                                       (0)
#define DDC2_DDC_BIST_FAIL_DDC_BIST_FAIL_mask                                        (0x00000001)
#define DDC2_DDC_BIST_FAIL_DDC_BIST_FAIL(data)                                       (0x00000001&((data)<<0))
#define DDC2_DDC_BIST_FAIL_DDC_BIST_FAIL_src(data)                                   ((0x00000001&(data))>>0)
#define DDC2_DDC_BIST_FAIL_get_DDC_BIST_FAIL(data)                                   ((0x00000001&(data))>>0)


#define DDC2_DDC_DRF_MODE                                                            0x1801BA84
#define DDC2_DDC_DRF_MODE_reg_addr                                                   "0xB801BA84"
#define DDC2_DDC_DRF_MODE_reg                                                        0xB801BA84
#define set_DDC2_DDC_DRF_MODE_reg(data)   (*((volatile unsigned int*) DDC2_DDC_DRF_MODE_reg)=data)
#define get_DDC2_DDC_DRF_MODE_reg   (*((volatile unsigned int*) DDC2_DDC_DRF_MODE_reg))
#define DDC2_DDC_DRF_MODE_inst_adr                                                   "0x00A1"
#define DDC2_DDC_DRF_MODE_inst                                                       0x00A1
#define DDC2_DDC_DRF_MODE_DDC_DRF_MODE_shift                                         (0)
#define DDC2_DDC_DRF_MODE_DDC_DRF_MODE_mask                                          (0x00000001)
#define DDC2_DDC_DRF_MODE_DDC_DRF_MODE(data)                                         (0x00000001&((data)<<0))
#define DDC2_DDC_DRF_MODE_DDC_DRF_MODE_src(data)                                     ((0x00000001&(data))>>0)
#define DDC2_DDC_DRF_MODE_get_DDC_DRF_MODE(data)                                     ((0x00000001&(data))>>0)


#define DDC2_DDC_DRF_RESUME                                                          0x1801BA88
#define DDC2_DDC_DRF_RESUME_reg_addr                                                 "0xB801BA88"
#define DDC2_DDC_DRF_RESUME_reg                                                      0xB801BA88
#define set_DDC2_DDC_DRF_RESUME_reg(data)   (*((volatile unsigned int*) DDC2_DDC_DRF_RESUME_reg)=data)
#define get_DDC2_DDC_DRF_RESUME_reg   (*((volatile unsigned int*) DDC2_DDC_DRF_RESUME_reg))
#define DDC2_DDC_DRF_RESUME_inst_adr                                                 "0x00A2"
#define DDC2_DDC_DRF_RESUME_inst                                                     0x00A2
#define DDC2_DDC_DRF_RESUME_DDC_DRF_RESUME_shift                                     (0)
#define DDC2_DDC_DRF_RESUME_DDC_DRF_RESUME_mask                                      (0x00000001)
#define DDC2_DDC_DRF_RESUME_DDC_DRF_RESUME(data)                                     (0x00000001&((data)<<0))
#define DDC2_DDC_DRF_RESUME_DDC_DRF_RESUME_src(data)                                 ((0x00000001&(data))>>0)
#define DDC2_DDC_DRF_RESUME_get_DDC_DRF_RESUME(data)                                 ((0x00000001&(data))>>0)


#define DDC2_DDC_DRF_DONE                                                            0x1801BA8C
#define DDC2_DDC_DRF_DONE_reg_addr                                                   "0xB801BA8C"
#define DDC2_DDC_DRF_DONE_reg                                                        0xB801BA8C
#define set_DDC2_DDC_DRF_DONE_reg(data)   (*((volatile unsigned int*) DDC2_DDC_DRF_DONE_reg)=data)
#define get_DDC2_DDC_DRF_DONE_reg   (*((volatile unsigned int*) DDC2_DDC_DRF_DONE_reg))
#define DDC2_DDC_DRF_DONE_inst_adr                                                   "0x00A3"
#define DDC2_DDC_DRF_DONE_inst                                                       0x00A3
#define DDC2_DDC_DRF_DONE_DDC_DRF_DONE_shift                                         (0)
#define DDC2_DDC_DRF_DONE_DDC_DRF_DONE_mask                                          (0x00000001)
#define DDC2_DDC_DRF_DONE_DDC_DRF_DONE(data)                                         (0x00000001&((data)<<0))
#define DDC2_DDC_DRF_DONE_DDC_DRF_DONE_src(data)                                     ((0x00000001&(data))>>0)
#define DDC2_DDC_DRF_DONE_get_DDC_DRF_DONE(data)                                     ((0x00000001&(data))>>0)


#define DDC2_DDC_DRF_PAUSE                                                           0x1801BA90
#define DDC2_DDC_DRF_PAUSE_reg_addr                                                  "0xB801BA90"
#define DDC2_DDC_DRF_PAUSE_reg                                                       0xB801BA90
#define set_DDC2_DDC_DRF_PAUSE_reg(data)   (*((volatile unsigned int*) DDC2_DDC_DRF_PAUSE_reg)=data)
#define get_DDC2_DDC_DRF_PAUSE_reg   (*((volatile unsigned int*) DDC2_DDC_DRF_PAUSE_reg))
#define DDC2_DDC_DRF_PAUSE_inst_adr                                                  "0x00A4"
#define DDC2_DDC_DRF_PAUSE_inst                                                      0x00A4
#define DDC2_DDC_DRF_PAUSE_DDC_DRF_PAUSE_shift                                       (0)
#define DDC2_DDC_DRF_PAUSE_DDC_DRF_PAUSE_mask                                        (0x00000001)
#define DDC2_DDC_DRF_PAUSE_DDC_DRF_PAUSE(data)                                       (0x00000001&((data)<<0))
#define DDC2_DDC_DRF_PAUSE_DDC_DRF_PAUSE_src(data)                                   ((0x00000001&(data))>>0)
#define DDC2_DDC_DRF_PAUSE_get_DDC_DRF_PAUSE(data)                                   ((0x00000001&(data))>>0)


#define DDC2_DDC_DRF_FAIL                                                            0x1801BA94
#define DDC2_DDC_DRF_FAIL_reg_addr                                                   "0xB801BA94"
#define DDC2_DDC_DRF_FAIL_reg                                                        0xB801BA94
#define set_DDC2_DDC_DRF_FAIL_reg(data)   (*((volatile unsigned int*) DDC2_DDC_DRF_FAIL_reg)=data)
#define get_DDC2_DDC_DRF_FAIL_reg   (*((volatile unsigned int*) DDC2_DDC_DRF_FAIL_reg))
#define DDC2_DDC_DRF_FAIL_inst_adr                                                   "0x00A5"
#define DDC2_DDC_DRF_FAIL_inst                                                       0x00A5
#define DDC2_DDC_DRF_FAIL_DDC_DRF_FAIL_shift                                         (0)
#define DDC2_DDC_DRF_FAIL_DDC_DRF_FAIL_mask                                          (0x00000001)
#define DDC2_DDC_DRF_FAIL_DDC_DRF_FAIL(data)                                         (0x00000001&((data)<<0))
#define DDC2_DDC_DRF_FAIL_DDC_DRF_FAIL_src(data)                                     ((0x00000001&(data))>>0)
#define DDC2_DDC_DRF_FAIL_get_DDC_DRF_FAIL(data)                                     ((0x00000001&(data))>>0)


#define DDC3_I2C_CR                                                                  0x1801BE00
#define DDC3_I2C_CR_reg_addr                                                         "0xB801BE00"
#define DDC3_I2C_CR_reg                                                              0xB801BE00
#define set_DDC3_I2C_CR_reg(data)   (*((volatile unsigned int*) DDC3_I2C_CR_reg)=data)
#define get_DDC3_I2C_CR_reg   (*((volatile unsigned int*) DDC3_I2C_CR_reg))
#define DDC3_I2C_CR_inst_adr                                                         "0x0080"
#define DDC3_I2C_CR_inst                                                             0x0080
#define DDC3_I2C_CR_CMDERR_IE_shift                                                  (7)
#define DDC3_I2C_CR_CMDERR_IE_mask                                                   (0x00000080)
#define DDC3_I2C_CR_CMDERR_IE(data)                                                  (0x00000080&((data)<<7))
#define DDC3_I2C_CR_CMDERR_IE_src(data)                                              ((0x00000080&(data))>>7)
#define DDC3_I2C_CR_get_CMDERR_IE(data)                                              ((0x00000080&(data))>>7)
#define DDC3_I2C_CR_TIMEOUT_EN_shift                                                 (6)
#define DDC3_I2C_CR_TIMEOUT_EN_mask                                                  (0x00000040)
#define DDC3_I2C_CR_TIMEOUT_EN(data)                                                 (0x00000040&((data)<<6))
#define DDC3_I2C_CR_TIMEOUT_EN_src(data)                                             ((0x00000040&(data))>>6)
#define DDC3_I2C_CR_get_TIMEOUT_EN(data)                                             ((0x00000040&(data))>>6)
#define DDC3_I2C_CR_DEBOUNCE_MODE_shift                                              (4)
#define DDC3_I2C_CR_DEBOUNCE_MODE_mask                                               (0x00000030)
#define DDC3_I2C_CR_DEBOUNCE_MODE(data)                                              (0x00000030&((data)<<4))
#define DDC3_I2C_CR_DEBOUNCE_MODE_src(data)                                          ((0x00000030&(data))>>4)
#define DDC3_I2C_CR_get_DEBOUNCE_MODE(data)                                          ((0x00000030&(data))>>4)
#define DDC3_I2C_CR_TIMEOUT_IE_shift                                                 (3)
#define DDC3_I2C_CR_TIMEOUT_IE_mask                                                  (0x00000008)
#define DDC3_I2C_CR_TIMEOUT_IE(data)                                                 (0x00000008&((data)<<3))
#define DDC3_I2C_CR_TIMEOUT_IE_src(data)                                             ((0x00000008&(data))>>3)
#define DDC3_I2C_CR_get_TIMEOUT_IE(data)                                             ((0x00000008&(data))>>3)
#define DDC3_I2C_CR_RETIME_M_shift                                                   (0)
#define DDC3_I2C_CR_RETIME_M_mask                                                    (0x00000007)
#define DDC3_I2C_CR_RETIME_M(data)                                                   (0x00000007&((data)<<0))
#define DDC3_I2C_CR_RETIME_M_src(data)                                               ((0x00000007&(data))>>0)
#define DDC3_I2C_CR_get_RETIME_M(data)                                               ((0x00000007&(data))>>0)


#define DDC3_I2C_SR1                                                                 0x1801BE04
#define DDC3_I2C_SR1_reg_addr                                                        "0xB801BE04"
#define DDC3_I2C_SR1_reg                                                             0xB801BE04
#define set_DDC3_I2C_SR1_reg(data)   (*((volatile unsigned int*) DDC3_I2C_SR1_reg)=data)
#define get_DDC3_I2C_SR1_reg   (*((volatile unsigned int*) DDC3_I2C_SR1_reg))
#define DDC3_I2C_SR1_inst_adr                                                        "0x0081"
#define DDC3_I2C_SR1_inst                                                            0x0081
#define DDC3_I2C_SR1_CMDERR_shift                                                    (7)
#define DDC3_I2C_SR1_CMDERR_mask                                                     (0x00000080)
#define DDC3_I2C_SR1_CMDERR(data)                                                    (0x00000080&((data)<<7))
#define DDC3_I2C_SR1_CMDERR_src(data)                                                ((0x00000080&(data))>>7)
#define DDC3_I2C_SR1_get_CMDERR(data)                                                ((0x00000080&(data))>>7)
#define DDC3_I2C_SR1_Finish_shift                                                    (4)
#define DDC3_I2C_SR1_Finish_mask                                                     (0x00000010)
#define DDC3_I2C_SR1_Finish(data)                                                    (0x00000010&((data)<<4))
#define DDC3_I2C_SR1_Finish_src(data)                                                ((0x00000010&(data))>>4)
#define DDC3_I2C_SR1_get_Finish(data)                                                ((0x00000010&(data))>>4)
#define DDC3_I2C_SR1_timeout_shift                                                   (3)
#define DDC3_I2C_SR1_timeout_mask                                                    (0x00000008)
#define DDC3_I2C_SR1_timeout(data)                                                   (0x00000008&((data)<<3))
#define DDC3_I2C_SR1_timeout_src(data)                                               ((0x00000008&(data))>>3)
#define DDC3_I2C_SR1_get_timeout(data)                                               ((0x00000008&(data))>>3)


#define DDC3_I2C_TR                                                                  0x1801BE08
#define DDC3_I2C_TR_reg_addr                                                         "0xB801BE08"
#define DDC3_I2C_TR_reg                                                              0xB801BE08
#define set_DDC3_I2C_TR_reg(data)   (*((volatile unsigned int*) DDC3_I2C_TR_reg)=data)
#define get_DDC3_I2C_TR_reg   (*((volatile unsigned int*) DDC3_I2C_TR_reg))
#define DDC3_I2C_TR_inst_adr                                                         "0x0082"
#define DDC3_I2C_TR_inst                                                             0x0082
#define DDC3_I2C_TR_timeout_val_shift                                                (0)
#define DDC3_I2C_TR_timeout_val_mask                                                 (0x000000FF)
#define DDC3_I2C_TR_timeout_val(data)                                                (0x000000FF&((data)<<0))
#define DDC3_I2C_TR_timeout_val_src(data)                                            ((0x000000FF&(data))>>0)
#define DDC3_I2C_TR_get_timeout_val(data)                                            ((0x000000FF&(data))>>0)


#define DDC3_EDID_CR                                                                 0x1801BE0C
#define DDC3_EDID_CR_reg_addr                                                        "0xB801BE0C"
#define DDC3_EDID_CR_reg                                                             0xB801BE0C
#define set_DDC3_EDID_CR_reg(data)   (*((volatile unsigned int*) DDC3_EDID_CR_reg)=data)
#define get_DDC3_EDID_CR_reg   (*((volatile unsigned int*) DDC3_EDID_CR_reg))
#define DDC3_EDID_CR_inst_adr                                                        "0x0083"
#define DDC3_EDID_CR_inst                                                            0x0083
#define DDC3_EDID_CR_EDID_ADDRESS_shift                                              (5)
#define DDC3_EDID_CR_EDID_ADDRESS_mask                                               (0x000000E0)
#define DDC3_EDID_CR_EDID_ADDRESS(data)                                              (0x000000E0&((data)<<5))
#define DDC3_EDID_CR_EDID_ADDRESS_src(data)                                          ((0x000000E0&(data))>>5)
#define DDC3_EDID_CR_get_EDID_ADDRESS(data)                                          ((0x000000E0&(data))>>5)
#define DDC3_EDID_CR_FINISH_INT_EN_shift                                             (4)
#define DDC3_EDID_CR_FINISH_INT_EN_mask                                              (0x00000010)
#define DDC3_EDID_CR_FINISH_INT_EN(data)                                             (0x00000010&((data)<<4))
#define DDC3_EDID_CR_FINISH_INT_EN_src(data)                                         ((0x00000010&(data))>>4)
#define DDC3_EDID_CR_get_FINISH_INT_EN(data)                                         ((0x00000010&(data))>>4)
#define DDC3_EDID_CR_DDC1_FORCE_shift                                                (3)
#define DDC3_EDID_CR_DDC1_FORCE_mask                                                 (0x00000008)
#define DDC3_EDID_CR_DDC1_FORCE(data)                                                (0x00000008&((data)<<3))
#define DDC3_EDID_CR_DDC1_FORCE_src(data)                                            ((0x00000008&(data))>>3)
#define DDC3_EDID_CR_get_DDC1_FORCE(data)                                            ((0x00000008&(data))>>3)
#define DDC3_EDID_CR_DDC2B_FORCE_shift                                               (2)
#define DDC3_EDID_CR_DDC2B_FORCE_mask                                                (0x00000004)
#define DDC3_EDID_CR_DDC2B_FORCE(data)                                               (0x00000004&((data)<<2))
#define DDC3_EDID_CR_DDC2B_FORCE_src(data)                                           ((0x00000004&(data))>>2)
#define DDC3_EDID_CR_get_DDC2B_FORCE(data)                                           ((0x00000004&(data))>>2)
#define DDC3_EDID_CR_EDID_SRWEN_shift                                                (1)
#define DDC3_EDID_CR_EDID_SRWEN_mask                                                 (0x00000002)
#define DDC3_EDID_CR_EDID_SRWEN(data)                                                (0x00000002&((data)<<1))
#define DDC3_EDID_CR_EDID_SRWEN_src(data)                                            ((0x00000002&(data))>>1)
#define DDC3_EDID_CR_get_EDID_SRWEN(data)                                            ((0x00000002&(data))>>1)
#define DDC3_EDID_CR_EDID_EN_shift                                                   (0)
#define DDC3_EDID_CR_EDID_EN_mask                                                    (0x00000001)
#define DDC3_EDID_CR_EDID_EN(data)                                                   (0x00000001&((data)<<0))
#define DDC3_EDID_CR_EDID_EN_src(data)                                               ((0x00000001&(data))>>0)
#define DDC3_EDID_CR_get_EDID_EN(data)                                               ((0x00000001&(data))>>0)


#define DDC3_DDC_VCR                                                                 0x1801BE10
#define DDC3_DDC_VCR_reg_addr                                                        "0xB801BE10"
#define DDC3_DDC_VCR_reg                                                             0xB801BE10
#define set_DDC3_DDC_VCR_reg(data)   (*((volatile unsigned int*) DDC3_DDC_VCR_reg)=data)
#define get_DDC3_DDC_VCR_reg   (*((volatile unsigned int*) DDC3_DDC_VCR_reg))
#define DDC3_DDC_VCR_inst_adr                                                        "0x0084"
#define DDC3_DDC_VCR_inst                                                            0x0084
#define DDC3_DDC_VCR_DDC1_VCount_shift                                               (0)
#define DDC3_DDC_VCR_DDC1_VCount_mask                                                (0x000000FF)
#define DDC3_DDC_VCR_DDC1_VCount(data)                                               (0x000000FF&((data)<<0))
#define DDC3_DDC_VCR_DDC1_VCount_src(data)                                           ((0x000000FF&(data))>>0)
#define DDC3_DDC_VCR_get_DDC1_VCount(data)                                           ((0x000000FF&(data))>>0)


#define DDC3_EDID_IMSWSAR                                                            0x1801BE14
#define DDC3_EDID_IMSWSAR_reg_addr                                                   "0xB801BE14"
#define DDC3_EDID_IMSWSAR_reg                                                        0xB801BE14
#define set_DDC3_EDID_IMSWSAR_reg(data)   (*((volatile unsigned int*) DDC3_EDID_IMSWSAR_reg)=data)
#define get_DDC3_EDID_IMSWSAR_reg   (*((volatile unsigned int*) DDC3_EDID_IMSWSAR_reg))
#define DDC3_EDID_IMSWSAR_inst_adr                                                   "0x0085"
#define DDC3_EDID_IMSWSAR_inst                                                       0x0085
#define DDC3_EDID_IMSWSAR_EDID_SADR_shift                                            (0)
#define DDC3_EDID_IMSWSAR_EDID_SADR_mask                                             (0x000000FF)
#define DDC3_EDID_IMSWSAR_EDID_SADR(data)                                            (0x000000FF&((data)<<0))
#define DDC3_EDID_IMSWSAR_EDID_SADR_src(data)                                        ((0x000000FF&(data))>>0)
#define DDC3_EDID_IMSWSAR_get_EDID_SADR(data)                                        ((0x000000FF&(data))>>0)


#define DDC3_EDID_IMSWEAR                                                            0x1801BE18
#define DDC3_EDID_IMSWEAR_reg_addr                                                   "0xB801BE18"
#define DDC3_EDID_IMSWEAR_reg                                                        0xB801BE18
#define set_DDC3_EDID_IMSWEAR_reg(data)   (*((volatile unsigned int*) DDC3_EDID_IMSWEAR_reg)=data)
#define get_DDC3_EDID_IMSWEAR_reg   (*((volatile unsigned int*) DDC3_EDID_IMSWEAR_reg))
#define DDC3_EDID_IMSWEAR_inst_adr                                                   "0x0086"
#define DDC3_EDID_IMSWEAR_inst                                                       0x0086
#define DDC3_EDID_IMSWEAR_EDID_EADR_shift                                            (0)
#define DDC3_EDID_IMSWEAR_EDID_EADR_mask                                             (0x000000FF)
#define DDC3_EDID_IMSWEAR_EDID_EADR(data)                                            (0x000000FF&((data)<<0))
#define DDC3_EDID_IMSWEAR_EDID_EADR_src(data)                                        ((0x000000FF&(data))>>0)
#define DDC3_EDID_IMSWEAR_get_EDID_EADR(data)                                        ((0x000000FF&(data))>>0)


#define DDC3_EDID_IR                                                                 0x1801BE1C
#define DDC3_EDID_IR_reg_addr                                                        "0xB801BE1C"
#define DDC3_EDID_IR_reg                                                             0xB801BE1C
#define set_DDC3_EDID_IR_reg(data)   (*((volatile unsigned int*) DDC3_EDID_IR_reg)=data)
#define get_DDC3_EDID_IR_reg   (*((volatile unsigned int*) DDC3_EDID_IR_reg))
#define DDC3_EDID_IR_inst_adr                                                        "0x0087"
#define DDC3_EDID_IR_inst                                                            0x0087
#define DDC3_EDID_IR_EDIDMODE_shift                                                  (6)
#define DDC3_EDID_IR_EDIDMODE_mask                                                   (0x00000040)
#define DDC3_EDID_IR_EDIDMODE(data)                                                  (0x00000040&((data)<<6))
#define DDC3_EDID_IR_EDIDMODE_src(data)                                              ((0x00000040&(data))>>6)
#define DDC3_EDID_IR_get_EDIDMODE(data)                                              ((0x00000040&(data))>>6)
#define DDC3_EDID_IR_EDIDSUBADDRESS_shift                                            (5)
#define DDC3_EDID_IR_EDIDSUBADDRESS_mask                                             (0x00000020)
#define DDC3_EDID_IR_EDIDSUBADDRESS(data)                                            (0x00000020&((data)<<5))
#define DDC3_EDID_IR_EDIDSUBADDRESS_src(data)                                        ((0x00000020&(data))>>5)
#define DDC3_EDID_IR_get_EDIDSUBADDRESS(data)                                        ((0x00000020&(data))>>5)
#define DDC3_EDID_IR_EDIDSTOP_shift                                                  (4)
#define DDC3_EDID_IR_EDIDSTOP_mask                                                   (0x00000010)
#define DDC3_EDID_IR_EDIDSTOP(data)                                                  (0x00000010&((data)<<4))
#define DDC3_EDID_IR_EDIDSTOP_src(data)                                              ((0x00000010&(data))>>4)
#define DDC3_EDID_IR_get_EDIDSTOP(data)                                              ((0x00000010&(data))>>4)
#define DDC3_EDID_IR_I2C_M_RD_ST_IE_shift                                            (3)
#define DDC3_EDID_IR_I2C_M_RD_ST_IE_mask                                             (0x00000008)
#define DDC3_EDID_IR_I2C_M_RD_ST_IE(data)                                            (0x00000008&((data)<<3))
#define DDC3_EDID_IR_I2C_M_RD_ST_IE_src(data)                                        ((0x00000008&(data))>>3)
#define DDC3_EDID_IR_get_I2C_M_RD_ST_IE(data)                                        ((0x00000008&(data))>>3)
#define DDC3_EDID_IR_I2C_M_RD_SP_IE_shift                                            (2)
#define DDC3_EDID_IR_I2C_M_RD_SP_IE_mask                                             (0x00000004)
#define DDC3_EDID_IR_I2C_M_RD_SP_IE(data)                                            (0x00000004&((data)<<2))
#define DDC3_EDID_IR_I2C_M_RD_SP_IE_src(data)                                        ((0x00000004&(data))>>2)
#define DDC3_EDID_IR_get_I2C_M_RD_SP_IE(data)                                        ((0x00000004&(data))>>2)
#define DDC3_EDID_IR_EDIDSUBADDRESS_IE_shift                                         (1)
#define DDC3_EDID_IR_EDIDSUBADDRESS_IE_mask                                          (0x00000002)
#define DDC3_EDID_IR_EDIDSUBADDRESS_IE(data)                                         (0x00000002&((data)<<1))
#define DDC3_EDID_IR_EDIDSUBADDRESS_IE_src(data)                                     ((0x00000002&(data))>>1)
#define DDC3_EDID_IR_get_EDIDSUBADDRESS_IE(data)                                     ((0x00000002&(data))>>1)
#define DDC3_EDID_IR_EDIDSTOP_IE_shift                                               (0)
#define DDC3_EDID_IR_EDIDSTOP_IE_mask                                                (0x00000001)
#define DDC3_EDID_IR_EDIDSTOP_IE(data)                                               (0x00000001&((data)<<0))
#define DDC3_EDID_IR_EDIDSTOP_IE_src(data)                                           ((0x00000001&(data))>>0)
#define DDC3_EDID_IR_get_EDIDSTOP_IE(data)                                           ((0x00000001&(data))>>0)


#define DDC3_DDC_SIR                                                                 0x1801BE20
#define DDC3_DDC_SIR_reg_addr                                                        "0xB801BE20"
#define DDC3_DDC_SIR_reg                                                             0xB801BE20
#define set_DDC3_DDC_SIR_reg(data)   (*((volatile unsigned int*) DDC3_DDC_SIR_reg)=data)
#define get_DDC3_DDC_SIR_reg   (*((volatile unsigned int*) DDC3_DDC_SIR_reg))
#define DDC3_DDC_SIR_inst_adr                                                        "0x0088"
#define DDC3_DDC_SIR_inst                                                            0x0088
#define DDC3_DDC_SIR_EDIDAP_shift                                                    (0)
#define DDC3_DDC_SIR_EDIDAP_mask                                                     (0x000000FF)
#define DDC3_DDC_SIR_EDIDAP(data)                                                    (0x000000FF&((data)<<0))
#define DDC3_DDC_SIR_EDIDAP_src(data)                                                ((0x000000FF&(data))>>0)
#define DDC3_DDC_SIR_get_EDIDAP(data)                                                ((0x000000FF&(data))>>0)


#define DDC3_DDC_SAP                                                                 0x1801BE24
#define DDC3_DDC_SAP_reg_addr                                                        "0xB801BE24"
#define DDC3_DDC_SAP_reg                                                             0xB801BE24
#define set_DDC3_DDC_SAP_reg(data)   (*((volatile unsigned int*) DDC3_DDC_SAP_reg)=data)
#define get_DDC3_DDC_SAP_reg   (*((volatile unsigned int*) DDC3_DDC_SAP_reg))
#define DDC3_DDC_SAP_inst_adr                                                        "0x0089"
#define DDC3_DDC_SAP_inst                                                            0x0089
#define DDC3_DDC_SAP_EDIDDP_shift                                                    (0)
#define DDC3_DDC_SAP_EDIDDP_mask                                                     (0x000000FF)
#define DDC3_DDC_SAP_EDIDDP(data)                                                    (0x000000FF&((data)<<0))
#define DDC3_DDC_SAP_EDIDDP_src(data)                                                ((0x000000FF&(data))>>0)
#define DDC3_DDC_SAP_get_EDIDDP(data)                                                ((0x000000FF&(data))>>0)


#define DDC3_DDC_BISTCR                                                              0x1801BE28
#define DDC3_DDC_BISTCR_reg_addr                                                     "0xB801BE28"
#define DDC3_DDC_BISTCR_reg                                                          0xB801BE28
#define set_DDC3_DDC_BISTCR_reg(data)   (*((volatile unsigned int*) DDC3_DDC_BISTCR_reg)=data)
#define get_DDC3_DDC_BISTCR_reg   (*((volatile unsigned int*) DDC3_DDC_BISTCR_reg))
#define DDC3_DDC_BISTCR_inst_adr                                                     "0x008A"
#define DDC3_DDC_BISTCR_inst                                                         0x008A
#define DDC3_DDC_BISTCR_DDC_BIST_RME_shift                                           (4)
#define DDC3_DDC_BISTCR_DDC_BIST_RME_mask                                            (0x00000010)
#define DDC3_DDC_BISTCR_DDC_BIST_RME(data)                                           (0x00000010&((data)<<4))
#define DDC3_DDC_BISTCR_DDC_BIST_RME_src(data)                                       ((0x00000010&(data))>>4)
#define DDC3_DDC_BISTCR_get_DDC_BIST_RME(data)                                       ((0x00000010&(data))>>4)
#define DDC3_DDC_BISTCR_DDC_BIST_RM_shift                                            (0)
#define DDC3_DDC_BISTCR_DDC_BIST_RM_mask                                             (0x0000000F)
#define DDC3_DDC_BISTCR_DDC_BIST_RM(data)                                            (0x0000000F&((data)<<0))
#define DDC3_DDC_BISTCR_DDC_BIST_RM_src(data)                                        ((0x0000000F&(data))>>0)
#define DDC3_DDC_BISTCR_get_DDC_BIST_RM(data)                                        ((0x0000000F&(data))>>0)


#define DDC3_DDC_SCR                                                                 0x1801BE2C
#define DDC3_DDC_SCR_reg_addr                                                        "0xB801BE2C"
#define DDC3_DDC_SCR_reg                                                             0xB801BE2C
#define set_DDC3_DDC_SCR_reg(data)   (*((volatile unsigned int*) DDC3_DDC_SCR_reg)=data)
#define get_DDC3_DDC_SCR_reg   (*((volatile unsigned int*) DDC3_DDC_SCR_reg))
#define DDC3_DDC_SCR_inst_adr                                                        "0x008B"
#define DDC3_DDC_SCR_inst                                                            0x008B
#define DDC3_DDC_SCR_SEGPT_LATIE_shift                                               (7)
#define DDC3_DDC_SCR_SEGPT_LATIE_mask                                                (0x00000080)
#define DDC3_DDC_SCR_SEGPT_LATIE(data)                                               (0x00000080&((data)<<7))
#define DDC3_DDC_SCR_SEGPT_LATIE_src(data)                                           ((0x00000080&(data))>>7)
#define DDC3_DDC_SCR_get_SEGPT_LATIE(data)                                           ((0x00000080&(data))>>7)
#define DDC3_DDC_SCR_Dataoutputdelay_sel_shift                                       (4)
#define DDC3_DDC_SCR_Dataoutputdelay_sel_mask                                        (0x00000070)
#define DDC3_DDC_SCR_Dataoutputdelay_sel(data)                                       (0x00000070&((data)<<4))
#define DDC3_DDC_SCR_Dataoutputdelay_sel_src(data)                                   ((0x00000070&(data))>>4)
#define DDC3_DDC_SCR_get_Dataoutputdelay_sel(data)                                   ((0x00000070&(data))>>4)
#define DDC3_DDC_SCR_I2C_M_RD_ST_STS_shift                                           (2)
#define DDC3_DDC_SCR_I2C_M_RD_ST_STS_mask                                            (0x00000004)
#define DDC3_DDC_SCR_I2C_M_RD_ST_STS(data)                                           (0x00000004&((data)<<2))
#define DDC3_DDC_SCR_I2C_M_RD_ST_STS_src(data)                                       ((0x00000004&(data))>>2)
#define DDC3_DDC_SCR_get_I2C_M_RD_ST_STS(data)                                       ((0x00000004&(data))>>2)
#define DDC3_DDC_SCR_I2C_M_RD_SP_STS_shift                                           (1)
#define DDC3_DDC_SCR_I2C_M_RD_SP_STS_mask                                            (0x00000002)
#define DDC3_DDC_SCR_I2C_M_RD_SP_STS(data)                                           (0x00000002&((data)<<1))
#define DDC3_DDC_SCR_I2C_M_RD_SP_STS_src(data)                                       ((0x00000002&(data))>>1)
#define DDC3_DDC_SCR_get_I2C_M_RD_SP_STS(data)                                       ((0x00000002&(data))>>1)
#define DDC3_DDC_SCR_SGID_EN_shift                                                   (0)
#define DDC3_DDC_SCR_SGID_EN_mask                                                    (0x00000001)
#define DDC3_DDC_SCR_SGID_EN(data)                                                   (0x00000001&((data)<<0))
#define DDC3_DDC_SCR_SGID_EN_src(data)                                               ((0x00000001&(data))>>0)
#define DDC3_DDC_SCR_get_SGID_EN(data)                                               ((0x00000001&(data))>>0)


#define DDC3_DDC_SSAR                                                                0x1801BE30
#define DDC3_DDC_SSAR_reg_addr                                                       "0xB801BE30"
#define DDC3_DDC_SSAR_reg                                                            0xB801BE30
#define set_DDC3_DDC_SSAR_reg(data)   (*((volatile unsigned int*) DDC3_DDC_SSAR_reg)=data)
#define get_DDC3_DDC_SSAR_reg   (*((volatile unsigned int*) DDC3_DDC_SSAR_reg))
#define DDC3_DDC_SSAR_inst_adr                                                       "0x008C"
#define DDC3_DDC_SSAR_inst                                                           0x008C
#define DDC3_DDC_SSAR_SGID_ADDRESS_shift                                             (1)
#define DDC3_DDC_SSAR_SGID_ADDRESS_mask                                              (0x000000FE)
#define DDC3_DDC_SSAR_SGID_ADDRESS(data)                                             (0x000000FE&((data)<<1))
#define DDC3_DDC_SSAR_SGID_ADDRESS_src(data)                                         ((0x000000FE&(data))>>1)
#define DDC3_DDC_SSAR_get_SGID_ADDRESS(data)                                         ((0x000000FE&(data))>>1)
#define DDC3_DDC_SSAR_SGID_DTRDEN_shift                                              (0)
#define DDC3_DDC_SSAR_SGID_DTRDEN_mask                                               (0x00000001)
#define DDC3_DDC_SSAR_SGID_DTRDEN(data)                                              (0x00000001&((data)<<0))
#define DDC3_DDC_SSAR_SGID_DTRDEN_src(data)                                          ((0x00000001&(data))>>0)
#define DDC3_DDC_SSAR_get_SGID_DTRDEN(data)                                          ((0x00000001&(data))>>0)


#define DDC3_DDC_SPR                                                                 0x1801BE34
#define DDC3_DDC_SPR_reg_addr                                                        "0xB801BE34"
#define DDC3_DDC_SPR_reg                                                             0xB801BE34
#define set_DDC3_DDC_SPR_reg(data)   (*((volatile unsigned int*) DDC3_DDC_SPR_reg)=data)
#define get_DDC3_DDC_SPR_reg   (*((volatile unsigned int*) DDC3_DDC_SPR_reg))
#define DDC3_DDC_SPR_inst_adr                                                        "0x008D"
#define DDC3_DDC_SPR_inst                                                            0x008D
#define DDC3_DDC_SPR_SEGPT_LATCHED_shift                                             (7)
#define DDC3_DDC_SPR_SEGPT_LATCHED_mask                                              (0x00000080)
#define DDC3_DDC_SPR_SEGPT_LATCHED(data)                                             (0x00000080&((data)<<7))
#define DDC3_DDC_SPR_SEGPT_LATCHED_src(data)                                         ((0x00000080&(data))>>7)
#define DDC3_DDC_SPR_get_SEGPT_LATCHED(data)                                         ((0x00000080&(data))>>7)
#define DDC3_DDC_SPR_SEG_PT_shift                                                    (0)
#define DDC3_DDC_SPR_SEG_PT_mask                                                     (0x0000007F)
#define DDC3_DDC_SPR_SEG_PT(data)                                                    (0x0000007F&((data)<<0))
#define DDC3_DDC_SPR_SEG_PT_src(data)                                                ((0x0000007F&(data))>>0)
#define DDC3_DDC_SPR_get_SEG_PT(data)                                                ((0x0000007F&(data))>>0)


#define DDC3_DDC_SFCR                                                                0x1801BE38
#define DDC3_DDC_SFCR_reg_addr                                                       "0xB801BE38"
#define DDC3_DDC_SFCR_reg                                                            0xB801BE38
#define set_DDC3_DDC_SFCR_reg(data)   (*((volatile unsigned int*) DDC3_DDC_SFCR_reg)=data)
#define get_DDC3_DDC_SFCR_reg   (*((volatile unsigned int*) DDC3_DDC_SFCR_reg))
#define DDC3_DDC_SFCR_inst_adr                                                       "0x008E"
#define DDC3_DDC_SFCR_inst                                                           0x008E
#define DDC3_DDC_SFCR_SPECIAL_MODE_shift                                             (3)
#define DDC3_DDC_SFCR_SPECIAL_MODE_mask                                              (0x00000008)
#define DDC3_DDC_SFCR_SPECIAL_MODE(data)                                             (0x00000008&((data)<<3))
#define DDC3_DDC_SFCR_SPECIAL_MODE_src(data)                                         ((0x00000008&(data))>>3)
#define DDC3_DDC_SFCR_get_SPECIAL_MODE(data)                                         ((0x00000008&(data))>>3)
#define DDC3_DDC_SFCR_DOFFPT_RESET_shift                                             (2)
#define DDC3_DDC_SFCR_DOFFPT_RESET_mask                                              (0x00000004)
#define DDC3_DDC_SFCR_DOFFPT_RESET(data)                                             (0x00000004&((data)<<2))
#define DDC3_DDC_SFCR_DOFFPT_RESET_src(data)                                         ((0x00000004&(data))>>2)
#define DDC3_DDC_SFCR_get_DOFFPT_RESET(data)                                         ((0x00000004&(data))>>2)
#define DDC3_DDC_SFCR_DIFFPT_RESET_shift                                             (1)
#define DDC3_DDC_SFCR_DIFFPT_RESET_mask                                              (0x00000002)
#define DDC3_DDC_SFCR_DIFFPT_RESET(data)                                             (0x00000002&((data)<<1))
#define DDC3_DDC_SFCR_DIFFPT_RESET_src(data)                                         ((0x00000002&(data))>>1)
#define DDC3_DDC_SFCR_get_DIFFPT_RESET(data)                                         ((0x00000002&(data))>>1)
#define DDC3_DDC_SFCR_CIID_EN_shift                                                  (0)
#define DDC3_DDC_SFCR_CIID_EN_mask                                                   (0x00000001)
#define DDC3_DDC_SFCR_CIID_EN(data)                                                  (0x00000001&((data)<<0))
#define DDC3_DDC_SFCR_CIID_EN_src(data)                                              ((0x00000001&(data))>>0)
#define DDC3_DDC_SFCR_get_CIID_EN(data)                                              ((0x00000001&(data))>>0)


#define DDC3_DDC_SFSAR                                                               0x1801BE3C
#define DDC3_DDC_SFSAR_reg_addr                                                      "0xB801BE3C"
#define DDC3_DDC_SFSAR_reg                                                           0xB801BE3C
#define set_DDC3_DDC_SFSAR_reg(data)   (*((volatile unsigned int*) DDC3_DDC_SFSAR_reg)=data)
#define get_DDC3_DDC_SFSAR_reg   (*((volatile unsigned int*) DDC3_DDC_SFSAR_reg))
#define DDC3_DDC_SFSAR_inst_adr                                                      "0x008F"
#define DDC3_DDC_SFSAR_inst                                                          0x008F
#define DDC3_DDC_SFSAR_CIID_ADDRESS_shift                                            (1)
#define DDC3_DDC_SFSAR_CIID_ADDRESS_mask                                             (0x000000FE)
#define DDC3_DDC_SFSAR_CIID_ADDRESS(data)                                            (0x000000FE&((data)<<1))
#define DDC3_DDC_SFSAR_CIID_ADDRESS_src(data)                                        ((0x000000FE&(data))>>1)
#define DDC3_DDC_SFSAR_get_CIID_ADDRESS(data)                                        ((0x000000FE&(data))>>1)
#define DDC3_DDC_SFSAR_CIRWS_CURRENT_shift                                           (0)
#define DDC3_DDC_SFSAR_CIRWS_CURRENT_mask                                            (0x00000001)
#define DDC3_DDC_SFSAR_CIRWS_CURRENT(data)                                           (0x00000001&((data)<<0))
#define DDC3_DDC_SFSAR_CIRWS_CURRENT_src(data)                                       ((0x00000001&(data))>>0)
#define DDC3_DDC_SFSAR_get_CIRWS_CURRENT(data)                                       ((0x00000001&(data))>>0)


#define DDC3_DDC_SFDR                                                                0x1801BE40
#define DDC3_DDC_SFDR_reg_addr                                                       "0xB801BE40"
#define DDC3_DDC_SFDR_reg                                                            0xB801BE40
#define set_DDC3_DDC_SFDR_reg(data)   (*((volatile unsigned int*) DDC3_DDC_SFDR_reg)=data)
#define get_DDC3_DDC_SFDR_reg   (*((volatile unsigned int*) DDC3_DDC_SFDR_reg))
#define DDC3_DDC_SFDR_inst_adr                                                       "0x0090"
#define DDC3_DDC_SFDR_inst                                                           0x0090
#define DDC3_DDC_SFDR_CIIDDP_shift                                                   (0)
#define DDC3_DDC_SFDR_CIIDDP_mask                                                    (0x000000FF)
#define DDC3_DDC_SFDR_CIIDDP(data)                                                   (0x000000FF&((data)<<0))
#define DDC3_DDC_SFDR_CIIDDP_src(data)                                               ((0x000000FF&(data))>>0)
#define DDC3_DDC_SFDR_get_CIIDDP(data)                                               ((0x000000FF&(data))>>0)


#define DDC3_DDC_SFBSR                                                               0x1801BE44
#define DDC3_DDC_SFBSR_reg_addr                                                      "0xB801BE44"
#define DDC3_DDC_SFBSR_reg                                                           0xB801BE44
#define set_DDC3_DDC_SFBSR_reg(data)   (*((volatile unsigned int*) DDC3_DDC_SFBSR_reg)=data)
#define get_DDC3_DDC_SFBSR_reg   (*((volatile unsigned int*) DDC3_DDC_SFBSR_reg))
#define DDC3_DDC_SFBSR_inst_adr                                                      "0x0091"
#define DDC3_DDC_SFBSR_inst                                                          0x0091
#define DDC3_DDC_SFBSR_CIRWS_2ND_shift                                               (5)
#define DDC3_DDC_SFBSR_CIRWS_2ND_mask                                                (0x00000020)
#define DDC3_DDC_SFBSR_CIRWS_2ND(data)                                               (0x00000020&((data)<<5))
#define DDC3_DDC_SFBSR_CIRWS_2ND_src(data)                                           ((0x00000020&(data))>>5)
#define DDC3_DDC_SFBSR_get_CIRWS_2ND(data)                                           ((0x00000020&(data))>>5)
#define DDC3_DDC_SFBSR_CIRWS_1ST_shift                                               (4)
#define DDC3_DDC_SFBSR_CIRWS_1ST_mask                                                (0x00000010)
#define DDC3_DDC_SFBSR_CIRWS_1ST(data)                                               (0x00000010&((data)<<4))
#define DDC3_DDC_SFBSR_CIRWS_1ST_src(data)                                           ((0x00000010&(data))>>4)
#define DDC3_DDC_SFBSR_get_CIRWS_1ST(data)                                           ((0x00000010&(data))>>4)
#define DDC3_DDC_SFBSR_CIPPT_2ND_shift                                               (3)
#define DDC3_DDC_SFBSR_CIPPT_2ND_mask                                                (0x00000008)
#define DDC3_DDC_SFBSR_CIPPT_2ND(data)                                               (0x00000008&((data)<<3))
#define DDC3_DDC_SFBSR_CIPPT_2ND_src(data)                                           ((0x00000008&(data))>>3)
#define DDC3_DDC_SFBSR_get_CIPPT_2ND(data)                                           ((0x00000008&(data))>>3)
#define DDC3_DDC_SFBSR_CISPT_2ND_shift                                               (2)
#define DDC3_DDC_SFBSR_CISPT_2ND_mask                                                (0x00000004)
#define DDC3_DDC_SFBSR_CISPT_2ND(data)                                               (0x00000004&((data)<<2))
#define DDC3_DDC_SFBSR_CISPT_2ND_src(data)                                           ((0x00000004&(data))>>2)
#define DDC3_DDC_SFBSR_get_CISPT_2ND(data)                                           ((0x00000004&(data))>>2)
#define DDC3_DDC_SFBSR_CIPPT_1ST_shift                                               (1)
#define DDC3_DDC_SFBSR_CIPPT_1ST_mask                                                (0x00000002)
#define DDC3_DDC_SFBSR_CIPPT_1ST(data)                                               (0x00000002&((data)<<1))
#define DDC3_DDC_SFBSR_CIPPT_1ST_src(data)                                           ((0x00000002&(data))>>1)
#define DDC3_DDC_SFBSR_get_CIPPT_1ST(data)                                           ((0x00000002&(data))>>1)
#define DDC3_DDC_SFBSR_CISPT_1ST_shift                                               (0)
#define DDC3_DDC_SFBSR_CISPT_1ST_mask                                                (0x00000001)
#define DDC3_DDC_SFBSR_CISPT_1ST(data)                                               (0x00000001&((data)<<0))
#define DDC3_DDC_SFBSR_CISPT_1ST_src(data)                                           ((0x00000001&(data))>>0)
#define DDC3_DDC_SFBSR_get_CISPT_1ST(data)                                           ((0x00000001&(data))>>0)


#define DDC3_DDC_SFIBLR                                                              0x1801BE48
#define DDC3_DDC_SFIBLR_reg_addr                                                     "0xB801BE48"
#define DDC3_DDC_SFIBLR_reg                                                          0xB801BE48
#define set_DDC3_DDC_SFIBLR_reg(data)   (*((volatile unsigned int*) DDC3_DDC_SFIBLR_reg)=data)
#define get_DDC3_DDC_SFIBLR_reg   (*((volatile unsigned int*) DDC3_DDC_SFIBLR_reg))
#define DDC3_DDC_SFIBLR_inst_adr                                                     "0x0092"
#define DDC3_DDC_SFIBLR_inst                                                         0x0092
#define DDC3_DDC_SFIBLR_FFDI_DLEN_shift                                              (0)
#define DDC3_DDC_SFIBLR_FFDI_DLEN_mask                                               (0x0000001F)
#define DDC3_DDC_SFIBLR_FFDI_DLEN(data)                                              (0x0000001F&((data)<<0))
#define DDC3_DDC_SFIBLR_FFDI_DLEN_src(data)                                          ((0x0000001F&(data))>>0)
#define DDC3_DDC_SFIBLR_get_FFDI_DLEN(data)                                          ((0x0000001F&(data))>>0)


#define DDC3_DDC_SFIBRWPR                                                            0x1801BE4C
#define DDC3_DDC_SFIBRWPR_reg_addr                                                   "0xB801BE4C"
#define DDC3_DDC_SFIBRWPR_reg                                                        0xB801BE4C
#define set_DDC3_DDC_SFIBRWPR_reg(data)   (*((volatile unsigned int*) DDC3_DDC_SFIBRWPR_reg)=data)
#define get_DDC3_DDC_SFIBRWPR_reg   (*((volatile unsigned int*) DDC3_DDC_SFIBRWPR_reg))
#define DDC3_DDC_SFIBRWPR_inst_adr                                                   "0x0093"
#define DDC3_DDC_SFIBRWPR_inst                                                       0x0093
#define DDC3_DDC_SFIBRWPR_DIFF_WPT_shift                                             (4)
#define DDC3_DDC_SFIBRWPR_DIFF_WPT_mask                                              (0x000000F0)
#define DDC3_DDC_SFIBRWPR_DIFF_WPT(data)                                             (0x000000F0&((data)<<4))
#define DDC3_DDC_SFIBRWPR_DIFF_WPT_src(data)                                         ((0x000000F0&(data))>>4)
#define DDC3_DDC_SFIBRWPR_get_DIFF_WPT(data)                                         ((0x000000F0&(data))>>4)
#define DDC3_DDC_SFIBRWPR_DIFF_RPT_shift                                             (0)
#define DDC3_DDC_SFIBRWPR_DIFF_RPT_mask                                              (0x0000000F)
#define DDC3_DDC_SFIBRWPR_DIFF_RPT(data)                                             (0x0000000F&((data)<<0))
#define DDC3_DDC_SFIBRWPR_DIFF_RPT_src(data)                                         ((0x0000000F&(data))>>0)
#define DDC3_DDC_SFIBRWPR_get_DIFF_RPT(data)                                         ((0x0000000F&(data))>>0)


#define DDC3_DDC_SFIBSWPR                                                            0x1801BE50
#define DDC3_DDC_SFIBSWPR_reg_addr                                                   "0xB801BE50"
#define DDC3_DDC_SFIBSWPR_reg                                                        0xB801BE50
#define set_DDC3_DDC_SFIBSWPR_reg(data)   (*((volatile unsigned int*) DDC3_DDC_SFIBSWPR_reg)=data)
#define get_DDC3_DDC_SFIBSWPR_reg   (*((volatile unsigned int*) DDC3_DDC_SFIBSWPR_reg))
#define DDC3_DDC_SFIBSWPR_inst_adr                                                   "0x0094"
#define DDC3_DDC_SFIBSWPR_inst                                                       0x0094
#define DDC3_DDC_SFIBSWPR_DIFFSTOP_PT_shift                                          (0)
#define DDC3_DDC_SFIBSWPR_DIFFSTOP_PT_mask                                           (0x0000000F)
#define DDC3_DDC_SFIBSWPR_DIFFSTOP_PT(data)                                          (0x0000000F&((data)<<0))
#define DDC3_DDC_SFIBSWPR_DIFFSTOP_PT_src(data)                                      ((0x0000000F&(data))>>0)
#define DDC3_DDC_SFIBSWPR_get_DIFFSTOP_PT(data)                                      ((0x0000000F&(data))>>0)


#define DDC3_DDC_SFOBSR                                                              0x1801BE54
#define DDC3_DDC_SFOBSR_reg_addr                                                     "0xB801BE54"
#define DDC3_DDC_SFOBSR_reg                                                          0xB801BE54
#define set_DDC3_DDC_SFOBSR_reg(data)   (*((volatile unsigned int*) DDC3_DDC_SFOBSR_reg)=data)
#define get_DDC3_DDC_SFOBSR_reg   (*((volatile unsigned int*) DDC3_DDC_SFOBSR_reg))
#define DDC3_DDC_SFOBSR_inst_adr                                                     "0x0095"
#define DDC3_DDC_SFOBSR_inst                                                         0x0095
#define DDC3_DDC_SFOBSR_FFDO_DLEN_shift                                              (0)
#define DDC3_DDC_SFOBSR_FFDO_DLEN_mask                                               (0x0000001F)
#define DDC3_DDC_SFOBSR_FFDO_DLEN(data)                                              (0x0000001F&((data)<<0))
#define DDC3_DDC_SFOBSR_FFDO_DLEN_src(data)                                          ((0x0000001F&(data))>>0)
#define DDC3_DDC_SFOBSR_get_FFDO_DLEN(data)                                          ((0x0000001F&(data))>>0)


#define DDC3_DDC_SFOBRWPR                                                            0x1801BE58
#define DDC3_DDC_SFOBRWPR_reg_addr                                                   "0xB801BE58"
#define DDC3_DDC_SFOBRWPR_reg                                                        0xB801BE58
#define set_DDC3_DDC_SFOBRWPR_reg(data)   (*((volatile unsigned int*) DDC3_DDC_SFOBRWPR_reg)=data)
#define get_DDC3_DDC_SFOBRWPR_reg   (*((volatile unsigned int*) DDC3_DDC_SFOBRWPR_reg))
#define DDC3_DDC_SFOBRWPR_inst_adr                                                   "0x0096"
#define DDC3_DDC_SFOBRWPR_inst                                                       0x0096
#define DDC3_DDC_SFOBRWPR_DOFF_WPT_shift                                             (4)
#define DDC3_DDC_SFOBRWPR_DOFF_WPT_mask                                              (0x000000F0)
#define DDC3_DDC_SFOBRWPR_DOFF_WPT(data)                                             (0x000000F0&((data)<<4))
#define DDC3_DDC_SFOBRWPR_DOFF_WPT_src(data)                                         ((0x000000F0&(data))>>4)
#define DDC3_DDC_SFOBRWPR_get_DOFF_WPT(data)                                         ((0x000000F0&(data))>>4)
#define DDC3_DDC_SFOBRWPR_DOFF_RPT_shift                                             (0)
#define DDC3_DDC_SFOBRWPR_DOFF_RPT_mask                                              (0x0000000F)
#define DDC3_DDC_SFOBRWPR_DOFF_RPT(data)                                             (0x0000000F&((data)<<0))
#define DDC3_DDC_SFOBRWPR_DOFF_RPT_src(data)                                         ((0x0000000F&(data))>>0)
#define DDC3_DDC_SFOBRWPR_get_DOFF_RPT(data)                                         ((0x0000000F&(data))>>0)


#define DDC3_DDC_SFSR                                                                0x1801BE5C
#define DDC3_DDC_SFSR_reg_addr                                                       "0xB801BE5C"
#define DDC3_DDC_SFSR_reg                                                            0xB801BE5C
#define set_DDC3_DDC_SFSR_reg(data)   (*((volatile unsigned int*) DDC3_DDC_SFSR_reg)=data)
#define get_DDC3_DDC_SFSR_reg   (*((volatile unsigned int*) DDC3_DDC_SFSR_reg))
#define DDC3_DDC_SFSR_inst_adr                                                       "0x0097"
#define DDC3_DDC_SFSR_inst                                                           0x0097
#define DDC3_DDC_SFSR_FFDOUF_ST_shift                                                (7)
#define DDC3_DDC_SFSR_FFDOUF_ST_mask                                                 (0x00000080)
#define DDC3_DDC_SFSR_FFDOUF_ST(data)                                                (0x00000080&((data)<<7))
#define DDC3_DDC_SFSR_FFDOUF_ST_src(data)                                            ((0x00000080&(data))>>7)
#define DDC3_DDC_SFSR_get_FFDOUF_ST(data)                                            ((0x00000080&(data))>>7)
#define DDC3_DDC_SFSR_FFDIOF_ST_shift                                                (6)
#define DDC3_DDC_SFSR_FFDIOF_ST_mask                                                 (0x00000040)
#define DDC3_DDC_SFSR_FFDIOF_ST(data)                                                (0x00000040&((data)<<6))
#define DDC3_DDC_SFSR_FFDIOF_ST_src(data)                                            ((0x00000040&(data))>>6)
#define DDC3_DDC_SFSR_get_FFDIOF_ST(data)                                            ((0x00000040&(data))>>6)
#define DDC3_DDC_SFSR_FFDONF_ST_shift                                                (5)
#define DDC3_DDC_SFSR_FFDONF_ST_mask                                                 (0x00000020)
#define DDC3_DDC_SFSR_FFDONF_ST(data)                                                (0x00000020&((data)<<5))
#define DDC3_DDC_SFSR_FFDONF_ST_src(data)                                            ((0x00000020&(data))>>5)
#define DDC3_DDC_SFSR_get_FFDONF_ST(data)                                            ((0x00000020&(data))>>5)
#define DDC3_DDC_SFSR_FFDOET_ST_shift                                                (4)
#define DDC3_DDC_SFSR_FFDOET_ST_mask                                                 (0x00000010)
#define DDC3_DDC_SFSR_FFDOET_ST(data)                                                (0x00000010&((data)<<4))
#define DDC3_DDC_SFSR_FFDOET_ST_src(data)                                            ((0x00000010&(data))>>4)
#define DDC3_DDC_SFSR_get_FFDOET_ST(data)                                            ((0x00000010&(data))>>4)
#define DDC3_DDC_SFSR_FFDIFU_ST_shift                                                (3)
#define DDC3_DDC_SFSR_FFDIFU_ST_mask                                                 (0x00000008)
#define DDC3_DDC_SFSR_FFDIFU_ST(data)                                                (0x00000008&((data)<<3))
#define DDC3_DDC_SFSR_FFDIFU_ST_src(data)                                            ((0x00000008&(data))>>3)
#define DDC3_DDC_SFSR_get_FFDIFU_ST(data)                                            ((0x00000008&(data))>>3)
#define DDC3_DDC_SFSR_FFDINE_ST_shift                                                (2)
#define DDC3_DDC_SFSR_FFDINE_ST_mask                                                 (0x00000004)
#define DDC3_DDC_SFSR_FFDINE_ST(data)                                                (0x00000004&((data)<<2))
#define DDC3_DDC_SFSR_FFDINE_ST_src(data)                                            ((0x00000004&(data))>>2)
#define DDC3_DDC_SFSR_get_FFDINE_ST(data)                                            ((0x00000004&(data))>>2)


#define DDC3_DDC_SFIR                                                                0x1801BE60
#define DDC3_DDC_SFIR_reg_addr                                                       "0xB801BE60"
#define DDC3_DDC_SFIR_reg                                                            0xB801BE60
#define set_DDC3_DDC_SFIR_reg(data)   (*((volatile unsigned int*) DDC3_DDC_SFIR_reg)=data)
#define get_DDC3_DDC_SFIR_reg   (*((volatile unsigned int*) DDC3_DDC_SFIR_reg))
#define DDC3_DDC_SFIR_inst_adr                                                       "0x0098"
#define DDC3_DDC_SFIR_inst                                                           0x0098
#define DDC3_DDC_SFIR_FFDOUF_IE_shift                                                (7)
#define DDC3_DDC_SFIR_FFDOUF_IE_mask                                                 (0x00000080)
#define DDC3_DDC_SFIR_FFDOUF_IE(data)                                                (0x00000080&((data)<<7))
#define DDC3_DDC_SFIR_FFDOUF_IE_src(data)                                            ((0x00000080&(data))>>7)
#define DDC3_DDC_SFIR_get_FFDOUF_IE(data)                                            ((0x00000080&(data))>>7)
#define DDC3_DDC_SFIR_FFDIOF_IE_shift                                                (6)
#define DDC3_DDC_SFIR_FFDIOF_IE_mask                                                 (0x00000040)
#define DDC3_DDC_SFIR_FFDIOF_IE(data)                                                (0x00000040&((data)<<6))
#define DDC3_DDC_SFIR_FFDIOF_IE_src(data)                                            ((0x00000040&(data))>>6)
#define DDC3_DDC_SFIR_get_FFDIOF_IE(data)                                            ((0x00000040&(data))>>6)
#define DDC3_DDC_SFIR_FFDONF_IE_shift                                                (5)
#define DDC3_DDC_SFIR_FFDONF_IE_mask                                                 (0x00000020)
#define DDC3_DDC_SFIR_FFDONF_IE(data)                                                (0x00000020&((data)<<5))
#define DDC3_DDC_SFIR_FFDONF_IE_src(data)                                            ((0x00000020&(data))>>5)
#define DDC3_DDC_SFIR_get_FFDONF_IE(data)                                            ((0x00000020&(data))>>5)
#define DDC3_DDC_SFIR_FFDOET_IE_shift                                                (4)
#define DDC3_DDC_SFIR_FFDOET_IE_mask                                                 (0x00000010)
#define DDC3_DDC_SFIR_FFDOET_IE(data)                                                (0x00000010&((data)<<4))
#define DDC3_DDC_SFIR_FFDOET_IE_src(data)                                            ((0x00000010&(data))>>4)
#define DDC3_DDC_SFIR_get_FFDOET_IE(data)                                            ((0x00000010&(data))>>4)
#define DDC3_DDC_SFIR_FFDIFU_IE_shift                                                (3)
#define DDC3_DDC_SFIR_FFDIFU_IE_mask                                                 (0x00000008)
#define DDC3_DDC_SFIR_FFDIFU_IE(data)                                                (0x00000008&((data)<<3))
#define DDC3_DDC_SFIR_FFDIFU_IE_src(data)                                            ((0x00000008&(data))>>3)
#define DDC3_DDC_SFIR_get_FFDIFU_IE(data)                                            ((0x00000008&(data))>>3)
#define DDC3_DDC_SFIR_FFDINE_IE_shift                                                (2)
#define DDC3_DDC_SFIR_FFDINE_IE_mask                                                 (0x00000004)
#define DDC3_DDC_SFIR_FFDINE_IE(data)                                                (0x00000004&((data)<<2))
#define DDC3_DDC_SFIR_FFDINE_IE_src(data)                                            ((0x00000004&(data))>>2)
#define DDC3_DDC_SFIR_get_FFDINE_IE(data)                                            ((0x00000004&(data))>>2)
#define DDC3_DDC_SFIR_CIPPT_IE_shift                                                 (1)
#define DDC3_DDC_SFIR_CIPPT_IE_mask                                                  (0x00000002)
#define DDC3_DDC_SFIR_CIPPT_IE(data)                                                 (0x00000002&((data)<<1))
#define DDC3_DDC_SFIR_CIPPT_IE_src(data)                                             ((0x00000002&(data))>>1)
#define DDC3_DDC_SFIR_get_CIPPT_IE(data)                                             ((0x00000002&(data))>>1)
#define DDC3_DDC_SFIR_CISPT_IE_shift                                                 (0)
#define DDC3_DDC_SFIR_CISPT_IE_mask                                                  (0x00000001)
#define DDC3_DDC_SFIR_CISPT_IE(data)                                                 (0x00000001&((data)<<0))
#define DDC3_DDC_SFIR_CISPT_IE_src(data)                                             ((0x00000001&(data))>>0)
#define DDC3_DDC_SFIR_get_CISPT_IE(data)                                             ((0x00000001&(data))>>0)


#define DDC3_DDC_FSMS                                                                0x1801BE64
#define DDC3_DDC_FSMS_reg_addr                                                       "0xB801BE64"
#define DDC3_DDC_FSMS_reg                                                            0xB801BE64
#define set_DDC3_DDC_FSMS_reg(data)   (*((volatile unsigned int*) DDC3_DDC_FSMS_reg)=data)
#define get_DDC3_DDC_FSMS_reg   (*((volatile unsigned int*) DDC3_DDC_FSMS_reg))
#define DDC3_DDC_FSMS_inst_adr                                                       "0x0099"
#define DDC3_DDC_FSMS_inst                                                           0x0099
#define DDC3_DDC_FSMS_CMDFSM_ST_shift                                                (0)
#define DDC3_DDC_FSMS_CMDFSM_ST_mask                                                 (0x000000FF)
#define DDC3_DDC_FSMS_CMDFSM_ST(data)                                                (0x000000FF&((data)<<0))
#define DDC3_DDC_FSMS_CMDFSM_ST_src(data)                                            ((0x000000FF&(data))>>0)
#define DDC3_DDC_FSMS_get_CMDFSM_ST(data)                                            ((0x000000FF&(data))>>0)


#define DDC3_DDC_DUMMY                                                               0x1801BE68
#define DDC3_DDC_DUMMY_reg_addr                                                      "0xB801BE68"
#define DDC3_DDC_DUMMY_reg                                                           0xB801BE68
#define set_DDC3_DDC_DUMMY_reg(data)   (*((volatile unsigned int*) DDC3_DDC_DUMMY_reg)=data)
#define get_DDC3_DDC_DUMMY_reg   (*((volatile unsigned int*) DDC3_DDC_DUMMY_reg))
#define DDC3_DDC_DUMMY_inst_adr                                                      "0x009A"
#define DDC3_DDC_DUMMY_inst                                                          0x009A
#define DDC3_DDC_DUMMY_Dummy_shift                                                   (0)
#define DDC3_DDC_DUMMY_Dummy_mask                                                    (0x000000FF)
#define DDC3_DDC_DUMMY_Dummy(data)                                                   (0x000000FF&((data)<<0))
#define DDC3_DDC_DUMMY_Dummy_src(data)                                               ((0x000000FF&(data))>>0)
#define DDC3_DDC_DUMMY_get_Dummy(data)                                               ((0x000000FF&(data))>>0)


#define DDC3_DDC_EDID_SRAM_READ_IRQ_EN                                               0x1801BE70
#define DDC3_DDC_EDID_SRAM_READ_IRQ_EN_reg_addr                                      "0xB801BE70"
#define DDC3_DDC_EDID_SRAM_READ_IRQ_EN_reg                                           0xB801BE70
#define set_DDC3_DDC_EDID_SRAM_READ_IRQ_EN_reg(data)   (*((volatile unsigned int*) DDC3_DDC_EDID_SRAM_READ_IRQ_EN_reg)=data)
#define get_DDC3_DDC_EDID_SRAM_READ_IRQ_EN_reg   (*((volatile unsigned int*) DDC3_DDC_EDID_SRAM_READ_IRQ_EN_reg))
#define DDC3_DDC_EDID_SRAM_READ_IRQ_EN_inst_adr                                      "0x009C"
#define DDC3_DDC_EDID_SRAM_READ_IRQ_EN_inst                                          0x009C
#define DDC3_DDC_EDID_SRAM_READ_IRQ_EN_START_IRQ_EN_shift                            (1)
#define DDC3_DDC_EDID_SRAM_READ_IRQ_EN_START_IRQ_EN_mask                             (0x00000002)
#define DDC3_DDC_EDID_SRAM_READ_IRQ_EN_START_IRQ_EN(data)                            (0x00000002&((data)<<1))
#define DDC3_DDC_EDID_SRAM_READ_IRQ_EN_START_IRQ_EN_src(data)                        ((0x00000002&(data))>>1)
#define DDC3_DDC_EDID_SRAM_READ_IRQ_EN_get_START_IRQ_EN(data)                        ((0x00000002&(data))>>1)
#define DDC3_DDC_EDID_SRAM_READ_IRQ_EN_STOP_IRQ_EN_shift                             (0)
#define DDC3_DDC_EDID_SRAM_READ_IRQ_EN_STOP_IRQ_EN_mask                              (0x00000001)
#define DDC3_DDC_EDID_SRAM_READ_IRQ_EN_STOP_IRQ_EN(data)                             (0x00000001&((data)<<0))
#define DDC3_DDC_EDID_SRAM_READ_IRQ_EN_STOP_IRQ_EN_src(data)                         ((0x00000001&(data))>>0)
#define DDC3_DDC_EDID_SRAM_READ_IRQ_EN_get_STOP_IRQ_EN(data)                         ((0x00000001&(data))>>0)


#define DDC3_DDC_EDID_SRAM_READ_AUX                                                  0x1801BE74
#define DDC3_DDC_EDID_SRAM_READ_AUX_reg_addr                                         "0xB801BE74"
#define DDC3_DDC_EDID_SRAM_READ_AUX_reg                                              0xB801BE74
#define set_DDC3_DDC_EDID_SRAM_READ_AUX_reg(data)   (*((volatile unsigned int*) DDC3_DDC_EDID_SRAM_READ_AUX_reg)=data)
#define get_DDC3_DDC_EDID_SRAM_READ_AUX_reg   (*((volatile unsigned int*) DDC3_DDC_EDID_SRAM_READ_AUX_reg))
#define DDC3_DDC_EDID_SRAM_READ_AUX_inst_adr                                         "0x009D"
#define DDC3_DDC_EDID_SRAM_READ_AUX_inst                                             0x009D
#define DDC3_DDC_EDID_SRAM_READ_AUX_START_shift                                      (1)
#define DDC3_DDC_EDID_SRAM_READ_AUX_START_mask                                       (0x00000002)
#define DDC3_DDC_EDID_SRAM_READ_AUX_START(data)                                      (0x00000002&((data)<<1))
#define DDC3_DDC_EDID_SRAM_READ_AUX_START_src(data)                                  ((0x00000002&(data))>>1)
#define DDC3_DDC_EDID_SRAM_READ_AUX_get_START(data)                                  ((0x00000002&(data))>>1)
#define DDC3_DDC_EDID_SRAM_READ_AUX_STOP_shift                                       (0)
#define DDC3_DDC_EDID_SRAM_READ_AUX_STOP_mask                                        (0x00000001)
#define DDC3_DDC_EDID_SRAM_READ_AUX_STOP(data)                                       (0x00000001&((data)<<0))
#define DDC3_DDC_EDID_SRAM_READ_AUX_STOP_src(data)                                   ((0x00000001&(data))>>0)
#define DDC3_DDC_EDID_SRAM_READ_AUX_get_STOP(data)                                   ((0x00000001&(data))>>0)


#define DDC3_DDC_BIST_MODE                                                           0x1801BE78
#define DDC3_DDC_BIST_MODE_reg_addr                                                  "0xB801BE78"
#define DDC3_DDC_BIST_MODE_reg                                                       0xB801BE78
#define set_DDC3_DDC_BIST_MODE_reg(data)   (*((volatile unsigned int*) DDC3_DDC_BIST_MODE_reg)=data)
#define get_DDC3_DDC_BIST_MODE_reg   (*((volatile unsigned int*) DDC3_DDC_BIST_MODE_reg))
#define DDC3_DDC_BIST_MODE_inst_adr                                                  "0x009E"
#define DDC3_DDC_BIST_MODE_inst                                                      0x009E
#define DDC3_DDC_BIST_MODE_DDC_BIST_MODE_shift                                       (0)
#define DDC3_DDC_BIST_MODE_DDC_BIST_MODE_mask                                        (0x00000001)
#define DDC3_DDC_BIST_MODE_DDC_BIST_MODE(data)                                       (0x00000001&((data)<<0))
#define DDC3_DDC_BIST_MODE_DDC_BIST_MODE_src(data)                                   ((0x00000001&(data))>>0)
#define DDC3_DDC_BIST_MODE_get_DDC_BIST_MODE(data)                                   ((0x00000001&(data))>>0)


#define DDC3_DDC_BIST_DONE                                                           0x1801BE7C
#define DDC3_DDC_BIST_DONE_reg_addr                                                  "0xB801BE7C"
#define DDC3_DDC_BIST_DONE_reg                                                       0xB801BE7C
#define set_DDC3_DDC_BIST_DONE_reg(data)   (*((volatile unsigned int*) DDC3_DDC_BIST_DONE_reg)=data)
#define get_DDC3_DDC_BIST_DONE_reg   (*((volatile unsigned int*) DDC3_DDC_BIST_DONE_reg))
#define DDC3_DDC_BIST_DONE_inst_adr                                                  "0x009F"
#define DDC3_DDC_BIST_DONE_inst                                                      0x009F
#define DDC3_DDC_BIST_DONE_DDC_BIST_DONE_shift                                       (0)
#define DDC3_DDC_BIST_DONE_DDC_BIST_DONE_mask                                        (0x00000001)
#define DDC3_DDC_BIST_DONE_DDC_BIST_DONE(data)                                       (0x00000001&((data)<<0))
#define DDC3_DDC_BIST_DONE_DDC_BIST_DONE_src(data)                                   ((0x00000001&(data))>>0)
#define DDC3_DDC_BIST_DONE_get_DDC_BIST_DONE(data)                                   ((0x00000001&(data))>>0)


#define DDC3_DDC_BIST_FAIL                                                           0x1801BE80
#define DDC3_DDC_BIST_FAIL_reg_addr                                                  "0xB801BE80"
#define DDC3_DDC_BIST_FAIL_reg                                                       0xB801BE80
#define set_DDC3_DDC_BIST_FAIL_reg(data)   (*((volatile unsigned int*) DDC3_DDC_BIST_FAIL_reg)=data)
#define get_DDC3_DDC_BIST_FAIL_reg   (*((volatile unsigned int*) DDC3_DDC_BIST_FAIL_reg))
#define DDC3_DDC_BIST_FAIL_inst_adr                                                  "0x00A0"
#define DDC3_DDC_BIST_FAIL_inst                                                      0x00A0
#define DDC3_DDC_BIST_FAIL_DDC_BIST_FAIL_shift                                       (0)
#define DDC3_DDC_BIST_FAIL_DDC_BIST_FAIL_mask                                        (0x00000001)
#define DDC3_DDC_BIST_FAIL_DDC_BIST_FAIL(data)                                       (0x00000001&((data)<<0))
#define DDC3_DDC_BIST_FAIL_DDC_BIST_FAIL_src(data)                                   ((0x00000001&(data))>>0)
#define DDC3_DDC_BIST_FAIL_get_DDC_BIST_FAIL(data)                                   ((0x00000001&(data))>>0)


#define DDC3_DDC_DRF_MODE                                                            0x1801BE84
#define DDC3_DDC_DRF_MODE_reg_addr                                                   "0xB801BE84"
#define DDC3_DDC_DRF_MODE_reg                                                        0xB801BE84
#define set_DDC3_DDC_DRF_MODE_reg(data)   (*((volatile unsigned int*) DDC3_DDC_DRF_MODE_reg)=data)
#define get_DDC3_DDC_DRF_MODE_reg   (*((volatile unsigned int*) DDC3_DDC_DRF_MODE_reg))
#define DDC3_DDC_DRF_MODE_inst_adr                                                   "0x00A1"
#define DDC3_DDC_DRF_MODE_inst                                                       0x00A1
#define DDC3_DDC_DRF_MODE_DDC_DRF_MODE_shift                                         (0)
#define DDC3_DDC_DRF_MODE_DDC_DRF_MODE_mask                                          (0x00000001)
#define DDC3_DDC_DRF_MODE_DDC_DRF_MODE(data)                                         (0x00000001&((data)<<0))
#define DDC3_DDC_DRF_MODE_DDC_DRF_MODE_src(data)                                     ((0x00000001&(data))>>0)
#define DDC3_DDC_DRF_MODE_get_DDC_DRF_MODE(data)                                     ((0x00000001&(data))>>0)


#define DDC3_DDC_DRF_RESUME                                                          0x1801BE88
#define DDC3_DDC_DRF_RESUME_reg_addr                                                 "0xB801BE88"
#define DDC3_DDC_DRF_RESUME_reg                                                      0xB801BE88
#define set_DDC3_DDC_DRF_RESUME_reg(data)   (*((volatile unsigned int*) DDC3_DDC_DRF_RESUME_reg)=data)
#define get_DDC3_DDC_DRF_RESUME_reg   (*((volatile unsigned int*) DDC3_DDC_DRF_RESUME_reg))
#define DDC3_DDC_DRF_RESUME_inst_adr                                                 "0x00A2"
#define DDC3_DDC_DRF_RESUME_inst                                                     0x00A2
#define DDC3_DDC_DRF_RESUME_DDC_DRF_RESUME_shift                                     (0)
#define DDC3_DDC_DRF_RESUME_DDC_DRF_RESUME_mask                                      (0x00000001)
#define DDC3_DDC_DRF_RESUME_DDC_DRF_RESUME(data)                                     (0x00000001&((data)<<0))
#define DDC3_DDC_DRF_RESUME_DDC_DRF_RESUME_src(data)                                 ((0x00000001&(data))>>0)
#define DDC3_DDC_DRF_RESUME_get_DDC_DRF_RESUME(data)                                 ((0x00000001&(data))>>0)


#define DDC3_DDC_DRF_DONE                                                            0x1801BE8C
#define DDC3_DDC_DRF_DONE_reg_addr                                                   "0xB801BE8C"
#define DDC3_DDC_DRF_DONE_reg                                                        0xB801BE8C
#define set_DDC3_DDC_DRF_DONE_reg(data)   (*((volatile unsigned int*) DDC3_DDC_DRF_DONE_reg)=data)
#define get_DDC3_DDC_DRF_DONE_reg   (*((volatile unsigned int*) DDC3_DDC_DRF_DONE_reg))
#define DDC3_DDC_DRF_DONE_inst_adr                                                   "0x00A3"
#define DDC3_DDC_DRF_DONE_inst                                                       0x00A3
#define DDC3_DDC_DRF_DONE_DDC_DRF_DONE_shift                                         (0)
#define DDC3_DDC_DRF_DONE_DDC_DRF_DONE_mask                                          (0x00000001)
#define DDC3_DDC_DRF_DONE_DDC_DRF_DONE(data)                                         (0x00000001&((data)<<0))
#define DDC3_DDC_DRF_DONE_DDC_DRF_DONE_src(data)                                     ((0x00000001&(data))>>0)
#define DDC3_DDC_DRF_DONE_get_DDC_DRF_DONE(data)                                     ((0x00000001&(data))>>0)


#define DDC3_DDC_DRF_PAUSE                                                           0x1801BE90
#define DDC3_DDC_DRF_PAUSE_reg_addr                                                  "0xB801BE90"
#define DDC3_DDC_DRF_PAUSE_reg                                                       0xB801BE90
#define set_DDC3_DDC_DRF_PAUSE_reg(data)   (*((volatile unsigned int*) DDC3_DDC_DRF_PAUSE_reg)=data)
#define get_DDC3_DDC_DRF_PAUSE_reg   (*((volatile unsigned int*) DDC3_DDC_DRF_PAUSE_reg))
#define DDC3_DDC_DRF_PAUSE_inst_adr                                                  "0x00A4"
#define DDC3_DDC_DRF_PAUSE_inst                                                      0x00A4
#define DDC3_DDC_DRF_PAUSE_DDC_DRF_PAUSE_shift                                       (0)
#define DDC3_DDC_DRF_PAUSE_DDC_DRF_PAUSE_mask                                        (0x00000001)
#define DDC3_DDC_DRF_PAUSE_DDC_DRF_PAUSE(data)                                       (0x00000001&((data)<<0))
#define DDC3_DDC_DRF_PAUSE_DDC_DRF_PAUSE_src(data)                                   ((0x00000001&(data))>>0)
#define DDC3_DDC_DRF_PAUSE_get_DDC_DRF_PAUSE(data)                                   ((0x00000001&(data))>>0)


#define DDC3_DDC_DRF_FAIL                                                            0x1801BE94
#define DDC3_DDC_DRF_FAIL_reg_addr                                                   "0xB801BE94"
#define DDC3_DDC_DRF_FAIL_reg                                                        0xB801BE94
#define set_DDC3_DDC_DRF_FAIL_reg(data)   (*((volatile unsigned int*) DDC3_DDC_DRF_FAIL_reg)=data)
#define get_DDC3_DDC_DRF_FAIL_reg   (*((volatile unsigned int*) DDC3_DDC_DRF_FAIL_reg))
#define DDC3_DDC_DRF_FAIL_inst_adr                                                   "0x00A5"
#define DDC3_DDC_DRF_FAIL_inst                                                       0x00A5
#define DDC3_DDC_DRF_FAIL_DDC_DRF_FAIL_shift                                         (0)
#define DDC3_DDC_DRF_FAIL_DDC_DRF_FAIL_mask                                          (0x00000001)
#define DDC3_DDC_DRF_FAIL_DDC_DRF_FAIL(data)                                         (0x00000001&((data)<<0))
#define DDC3_DDC_DRF_FAIL_DDC_DRF_FAIL_src(data)                                     ((0x00000001&(data))>>0)
#define DDC3_DDC_DRF_FAIL_get_DDC_DRF_FAIL(data)                                     ((0x00000001&(data))>>0)


#define DDC4_I2C_CR                                                                  0x1801BF00
#define DDC4_I2C_CR_reg_addr                                                         "0xB801BF00"
#define DDC4_I2C_CR_reg                                                              0xB801BF00
#define set_DDC4_I2C_CR_reg(data)   (*((volatile unsigned int*) DDC4_I2C_CR_reg)=data)
#define get_DDC4_I2C_CR_reg   (*((volatile unsigned int*) DDC4_I2C_CR_reg))
#define DDC4_I2C_CR_inst_adr                                                         "0x00C0"
#define DDC4_I2C_CR_inst                                                             0x00C0
#define DDC4_I2C_CR_CMDERR_IE_shift                                                  (7)
#define DDC4_I2C_CR_CMDERR_IE_mask                                                   (0x00000080)
#define DDC4_I2C_CR_CMDERR_IE(data)                                                  (0x00000080&((data)<<7))
#define DDC4_I2C_CR_CMDERR_IE_src(data)                                              ((0x00000080&(data))>>7)
#define DDC4_I2C_CR_get_CMDERR_IE(data)                                              ((0x00000080&(data))>>7)
#define DDC4_I2C_CR_TIMEOUT_EN_shift                                                 (6)
#define DDC4_I2C_CR_TIMEOUT_EN_mask                                                  (0x00000040)
#define DDC4_I2C_CR_TIMEOUT_EN(data)                                                 (0x00000040&((data)<<6))
#define DDC4_I2C_CR_TIMEOUT_EN_src(data)                                             ((0x00000040&(data))>>6)
#define DDC4_I2C_CR_get_TIMEOUT_EN(data)                                             ((0x00000040&(data))>>6)
#define DDC4_I2C_CR_DEBOUNCE_MODE_shift                                              (4)
#define DDC4_I2C_CR_DEBOUNCE_MODE_mask                                               (0x00000030)
#define DDC4_I2C_CR_DEBOUNCE_MODE(data)                                              (0x00000030&((data)<<4))
#define DDC4_I2C_CR_DEBOUNCE_MODE_src(data)                                          ((0x00000030&(data))>>4)
#define DDC4_I2C_CR_get_DEBOUNCE_MODE(data)                                          ((0x00000030&(data))>>4)
#define DDC4_I2C_CR_TIMEOUT_IE_shift                                                 (3)
#define DDC4_I2C_CR_TIMEOUT_IE_mask                                                  (0x00000008)
#define DDC4_I2C_CR_TIMEOUT_IE(data)                                                 (0x00000008&((data)<<3))
#define DDC4_I2C_CR_TIMEOUT_IE_src(data)                                             ((0x00000008&(data))>>3)
#define DDC4_I2C_CR_get_TIMEOUT_IE(data)                                             ((0x00000008&(data))>>3)
#define DDC4_I2C_CR_RETIME_M_shift                                                   (0)
#define DDC4_I2C_CR_RETIME_M_mask                                                    (0x00000007)
#define DDC4_I2C_CR_RETIME_M(data)                                                   (0x00000007&((data)<<0))
#define DDC4_I2C_CR_RETIME_M_src(data)                                               ((0x00000007&(data))>>0)
#define DDC4_I2C_CR_get_RETIME_M(data)                                               ((0x00000007&(data))>>0)


#define DDC4_I2C_SR1                                                                 0x1801BF04
#define DDC4_I2C_SR1_reg_addr                                                        "0xB801BF04"
#define DDC4_I2C_SR1_reg                                                             0xB801BF04
#define set_DDC4_I2C_SR1_reg(data)   (*((volatile unsigned int*) DDC4_I2C_SR1_reg)=data)
#define get_DDC4_I2C_SR1_reg   (*((volatile unsigned int*) DDC4_I2C_SR1_reg))
#define DDC4_I2C_SR1_inst_adr                                                        "0x00C1"
#define DDC4_I2C_SR1_inst                                                            0x00C1
#define DDC4_I2C_SR1_CMDERR_shift                                                    (7)
#define DDC4_I2C_SR1_CMDERR_mask                                                     (0x00000080)
#define DDC4_I2C_SR1_CMDERR(data)                                                    (0x00000080&((data)<<7))
#define DDC4_I2C_SR1_CMDERR_src(data)                                                ((0x00000080&(data))>>7)
#define DDC4_I2C_SR1_get_CMDERR(data)                                                ((0x00000080&(data))>>7)
#define DDC4_I2C_SR1_Finish_shift                                                    (4)
#define DDC4_I2C_SR1_Finish_mask                                                     (0x00000010)
#define DDC4_I2C_SR1_Finish(data)                                                    (0x00000010&((data)<<4))
#define DDC4_I2C_SR1_Finish_src(data)                                                ((0x00000010&(data))>>4)
#define DDC4_I2C_SR1_get_Finish(data)                                                ((0x00000010&(data))>>4)
#define DDC4_I2C_SR1_timeout_shift                                                   (3)
#define DDC4_I2C_SR1_timeout_mask                                                    (0x00000008)
#define DDC4_I2C_SR1_timeout(data)                                                   (0x00000008&((data)<<3))
#define DDC4_I2C_SR1_timeout_src(data)                                               ((0x00000008&(data))>>3)
#define DDC4_I2C_SR1_get_timeout(data)                                               ((0x00000008&(data))>>3)


#define DDC4_I2C_TR                                                                  0x1801BF08
#define DDC4_I2C_TR_reg_addr                                                         "0xB801BF08"
#define DDC4_I2C_TR_reg                                                              0xB801BF08
#define set_DDC4_I2C_TR_reg(data)   (*((volatile unsigned int*) DDC4_I2C_TR_reg)=data)
#define get_DDC4_I2C_TR_reg   (*((volatile unsigned int*) DDC4_I2C_TR_reg))
#define DDC4_I2C_TR_inst_adr                                                         "0x00C2"
#define DDC4_I2C_TR_inst                                                             0x00C2
#define DDC4_I2C_TR_timeout_val_shift                                                (0)
#define DDC4_I2C_TR_timeout_val_mask                                                 (0x000000FF)
#define DDC4_I2C_TR_timeout_val(data)                                                (0x000000FF&((data)<<0))
#define DDC4_I2C_TR_timeout_val_src(data)                                            ((0x000000FF&(data))>>0)
#define DDC4_I2C_TR_get_timeout_val(data)                                            ((0x000000FF&(data))>>0)


#define DDC4_EDID_CR                                                                 0x1801BF0C
#define DDC4_EDID_CR_reg_addr                                                        "0xB801BF0C"
#define DDC4_EDID_CR_reg                                                             0xB801BF0C
#define set_DDC4_EDID_CR_reg(data)   (*((volatile unsigned int*) DDC4_EDID_CR_reg)=data)
#define get_DDC4_EDID_CR_reg   (*((volatile unsigned int*) DDC4_EDID_CR_reg))
#define DDC4_EDID_CR_inst_adr                                                        "0x00C3"
#define DDC4_EDID_CR_inst                                                            0x00C3
#define DDC4_EDID_CR_EDID_ADDRESS_shift                                              (5)
#define DDC4_EDID_CR_EDID_ADDRESS_mask                                               (0x000000E0)
#define DDC4_EDID_CR_EDID_ADDRESS(data)                                              (0x000000E0&((data)<<5))
#define DDC4_EDID_CR_EDID_ADDRESS_src(data)                                          ((0x000000E0&(data))>>5)
#define DDC4_EDID_CR_get_EDID_ADDRESS(data)                                          ((0x000000E0&(data))>>5)
#define DDC4_EDID_CR_FINISH_INT_EN_shift                                             (4)
#define DDC4_EDID_CR_FINISH_INT_EN_mask                                              (0x00000010)
#define DDC4_EDID_CR_FINISH_INT_EN(data)                                             (0x00000010&((data)<<4))
#define DDC4_EDID_CR_FINISH_INT_EN_src(data)                                         ((0x00000010&(data))>>4)
#define DDC4_EDID_CR_get_FINISH_INT_EN(data)                                         ((0x00000010&(data))>>4)
#define DDC4_EDID_CR_DDC1_FORCE_shift                                                (3)
#define DDC4_EDID_CR_DDC1_FORCE_mask                                                 (0x00000008)
#define DDC4_EDID_CR_DDC1_FORCE(data)                                                (0x00000008&((data)<<3))
#define DDC4_EDID_CR_DDC1_FORCE_src(data)                                            ((0x00000008&(data))>>3)
#define DDC4_EDID_CR_get_DDC1_FORCE(data)                                            ((0x00000008&(data))>>3)
#define DDC4_EDID_CR_DDC2B_FORCE_shift                                               (2)
#define DDC4_EDID_CR_DDC2B_FORCE_mask                                                (0x00000004)
#define DDC4_EDID_CR_DDC2B_FORCE(data)                                               (0x00000004&((data)<<2))
#define DDC4_EDID_CR_DDC2B_FORCE_src(data)                                           ((0x00000004&(data))>>2)
#define DDC4_EDID_CR_get_DDC2B_FORCE(data)                                           ((0x00000004&(data))>>2)
#define DDC4_EDID_CR_EDID_SRWEN_shift                                                (1)
#define DDC4_EDID_CR_EDID_SRWEN_mask                                                 (0x00000002)
#define DDC4_EDID_CR_EDID_SRWEN(data)                                                (0x00000002&((data)<<1))
#define DDC4_EDID_CR_EDID_SRWEN_src(data)                                            ((0x00000002&(data))>>1)
#define DDC4_EDID_CR_get_EDID_SRWEN(data)                                            ((0x00000002&(data))>>1)
#define DDC4_EDID_CR_EDID_EN_shift                                                   (0)
#define DDC4_EDID_CR_EDID_EN_mask                                                    (0x00000001)
#define DDC4_EDID_CR_EDID_EN(data)                                                   (0x00000001&((data)<<0))
#define DDC4_EDID_CR_EDID_EN_src(data)                                               ((0x00000001&(data))>>0)
#define DDC4_EDID_CR_get_EDID_EN(data)                                               ((0x00000001&(data))>>0)


#define DDC4_DDC_VCR                                                                 0x1801BF10
#define DDC4_DDC_VCR_reg_addr                                                        "0xB801BF10"
#define DDC4_DDC_VCR_reg                                                             0xB801BF10
#define set_DDC4_DDC_VCR_reg(data)   (*((volatile unsigned int*) DDC4_DDC_VCR_reg)=data)
#define get_DDC4_DDC_VCR_reg   (*((volatile unsigned int*) DDC4_DDC_VCR_reg))
#define DDC4_DDC_VCR_inst_adr                                                        "0x00C4"
#define DDC4_DDC_VCR_inst                                                            0x00C4
#define DDC4_DDC_VCR_DDC1_VCount_shift                                               (0)
#define DDC4_DDC_VCR_DDC1_VCount_mask                                                (0x000000FF)
#define DDC4_DDC_VCR_DDC1_VCount(data)                                               (0x000000FF&((data)<<0))
#define DDC4_DDC_VCR_DDC1_VCount_src(data)                                           ((0x000000FF&(data))>>0)
#define DDC4_DDC_VCR_get_DDC1_VCount(data)                                           ((0x000000FF&(data))>>0)


#define DDC4_EDID_IMSWSAR                                                            0x1801BF14
#define DDC4_EDID_IMSWSAR_reg_addr                                                   "0xB801BF14"
#define DDC4_EDID_IMSWSAR_reg                                                        0xB801BF14
#define set_DDC4_EDID_IMSWSAR_reg(data)   (*((volatile unsigned int*) DDC4_EDID_IMSWSAR_reg)=data)
#define get_DDC4_EDID_IMSWSAR_reg   (*((volatile unsigned int*) DDC4_EDID_IMSWSAR_reg))
#define DDC4_EDID_IMSWSAR_inst_adr                                                   "0x00C5"
#define DDC4_EDID_IMSWSAR_inst                                                       0x00C5
#define DDC4_EDID_IMSWSAR_EDID_SADR_shift                                            (0)
#define DDC4_EDID_IMSWSAR_EDID_SADR_mask                                             (0x000000FF)
#define DDC4_EDID_IMSWSAR_EDID_SADR(data)                                            (0x000000FF&((data)<<0))
#define DDC4_EDID_IMSWSAR_EDID_SADR_src(data)                                        ((0x000000FF&(data))>>0)
#define DDC4_EDID_IMSWSAR_get_EDID_SADR(data)                                        ((0x000000FF&(data))>>0)


#define DDC4_EDID_IMSWEAR                                                            0x1801BF18
#define DDC4_EDID_IMSWEAR_reg_addr                                                   "0xB801BF18"
#define DDC4_EDID_IMSWEAR_reg                                                        0xB801BF18
#define set_DDC4_EDID_IMSWEAR_reg(data)   (*((volatile unsigned int*) DDC4_EDID_IMSWEAR_reg)=data)
#define get_DDC4_EDID_IMSWEAR_reg   (*((volatile unsigned int*) DDC4_EDID_IMSWEAR_reg))
#define DDC4_EDID_IMSWEAR_inst_adr                                                   "0x00C6"
#define DDC4_EDID_IMSWEAR_inst                                                       0x00C6
#define DDC4_EDID_IMSWEAR_EDID_EADR_shift                                            (0)
#define DDC4_EDID_IMSWEAR_EDID_EADR_mask                                             (0x000000FF)
#define DDC4_EDID_IMSWEAR_EDID_EADR(data)                                            (0x000000FF&((data)<<0))
#define DDC4_EDID_IMSWEAR_EDID_EADR_src(data)                                        ((0x000000FF&(data))>>0)
#define DDC4_EDID_IMSWEAR_get_EDID_EADR(data)                                        ((0x000000FF&(data))>>0)


#define DDC4_EDID_IR                                                                 0x1801BF1C
#define DDC4_EDID_IR_reg_addr                                                        "0xB801BF1C"
#define DDC4_EDID_IR_reg                                                             0xB801BF1C
#define set_DDC4_EDID_IR_reg(data)   (*((volatile unsigned int*) DDC4_EDID_IR_reg)=data)
#define get_DDC4_EDID_IR_reg   (*((volatile unsigned int*) DDC4_EDID_IR_reg))
#define DDC4_EDID_IR_inst_adr                                                        "0x00C7"
#define DDC4_EDID_IR_inst                                                            0x00C7
#define DDC4_EDID_IR_EDIDMODE_shift                                                  (6)
#define DDC4_EDID_IR_EDIDMODE_mask                                                   (0x00000040)
#define DDC4_EDID_IR_EDIDMODE(data)                                                  (0x00000040&((data)<<6))
#define DDC4_EDID_IR_EDIDMODE_src(data)                                              ((0x00000040&(data))>>6)
#define DDC4_EDID_IR_get_EDIDMODE(data)                                              ((0x00000040&(data))>>6)
#define DDC4_EDID_IR_EDIDSUBADDRESS_shift                                            (5)
#define DDC4_EDID_IR_EDIDSUBADDRESS_mask                                             (0x00000020)
#define DDC4_EDID_IR_EDIDSUBADDRESS(data)                                            (0x00000020&((data)<<5))
#define DDC4_EDID_IR_EDIDSUBADDRESS_src(data)                                        ((0x00000020&(data))>>5)
#define DDC4_EDID_IR_get_EDIDSUBADDRESS(data)                                        ((0x00000020&(data))>>5)
#define DDC4_EDID_IR_EDIDSTOP_shift                                                  (4)
#define DDC4_EDID_IR_EDIDSTOP_mask                                                   (0x00000010)
#define DDC4_EDID_IR_EDIDSTOP(data)                                                  (0x00000010&((data)<<4))
#define DDC4_EDID_IR_EDIDSTOP_src(data)                                              ((0x00000010&(data))>>4)
#define DDC4_EDID_IR_get_EDIDSTOP(data)                                              ((0x00000010&(data))>>4)
#define DDC4_EDID_IR_I2C_M_RD_ST_IE_shift                                            (3)
#define DDC4_EDID_IR_I2C_M_RD_ST_IE_mask                                             (0x00000008)
#define DDC4_EDID_IR_I2C_M_RD_ST_IE(data)                                            (0x00000008&((data)<<3))
#define DDC4_EDID_IR_I2C_M_RD_ST_IE_src(data)                                        ((0x00000008&(data))>>3)
#define DDC4_EDID_IR_get_I2C_M_RD_ST_IE(data)                                        ((0x00000008&(data))>>3)
#define DDC4_EDID_IR_I2C_M_RD_SP_IE_shift                                            (2)
#define DDC4_EDID_IR_I2C_M_RD_SP_IE_mask                                             (0x00000004)
#define DDC4_EDID_IR_I2C_M_RD_SP_IE(data)                                            (0x00000004&((data)<<2))
#define DDC4_EDID_IR_I2C_M_RD_SP_IE_src(data)                                        ((0x00000004&(data))>>2)
#define DDC4_EDID_IR_get_I2C_M_RD_SP_IE(data)                                        ((0x00000004&(data))>>2)
#define DDC4_EDID_IR_EDIDSUBADDRESS_IE_shift                                         (1)
#define DDC4_EDID_IR_EDIDSUBADDRESS_IE_mask                                          (0x00000002)
#define DDC4_EDID_IR_EDIDSUBADDRESS_IE(data)                                         (0x00000002&((data)<<1))
#define DDC4_EDID_IR_EDIDSUBADDRESS_IE_src(data)                                     ((0x00000002&(data))>>1)
#define DDC4_EDID_IR_get_EDIDSUBADDRESS_IE(data)                                     ((0x00000002&(data))>>1)
#define DDC4_EDID_IR_EDIDSTOP_IE_shift                                               (0)
#define DDC4_EDID_IR_EDIDSTOP_IE_mask                                                (0x00000001)
#define DDC4_EDID_IR_EDIDSTOP_IE(data)                                               (0x00000001&((data)<<0))
#define DDC4_EDID_IR_EDIDSTOP_IE_src(data)                                           ((0x00000001&(data))>>0)
#define DDC4_EDID_IR_get_EDIDSTOP_IE(data)                                           ((0x00000001&(data))>>0)


#define DDC4_DDC_SIR                                                                 0x1801BF20
#define DDC4_DDC_SIR_reg_addr                                                        "0xB801BF20"
#define DDC4_DDC_SIR_reg                                                             0xB801BF20
#define set_DDC4_DDC_SIR_reg(data)   (*((volatile unsigned int*) DDC4_DDC_SIR_reg)=data)
#define get_DDC4_DDC_SIR_reg   (*((volatile unsigned int*) DDC4_DDC_SIR_reg))
#define DDC4_DDC_SIR_inst_adr                                                        "0x00C8"
#define DDC4_DDC_SIR_inst                                                            0x00C8
#define DDC4_DDC_SIR_EDIDAP_shift                                                    (0)
#define DDC4_DDC_SIR_EDIDAP_mask                                                     (0x000000FF)
#define DDC4_DDC_SIR_EDIDAP(data)                                                    (0x000000FF&((data)<<0))
#define DDC4_DDC_SIR_EDIDAP_src(data)                                                ((0x000000FF&(data))>>0)
#define DDC4_DDC_SIR_get_EDIDAP(data)                                                ((0x000000FF&(data))>>0)


#define DDC4_DDC_SAP                                                                 0x1801BF24
#define DDC4_DDC_SAP_reg_addr                                                        "0xB801BF24"
#define DDC4_DDC_SAP_reg                                                             0xB801BF24
#define set_DDC4_DDC_SAP_reg(data)   (*((volatile unsigned int*) DDC4_DDC_SAP_reg)=data)
#define get_DDC4_DDC_SAP_reg   (*((volatile unsigned int*) DDC4_DDC_SAP_reg))
#define DDC4_DDC_SAP_inst_adr                                                        "0x00C9"
#define DDC4_DDC_SAP_inst                                                            0x00C9
#define DDC4_DDC_SAP_EDIDDP_shift                                                    (0)
#define DDC4_DDC_SAP_EDIDDP_mask                                                     (0x000000FF)
#define DDC4_DDC_SAP_EDIDDP(data)                                                    (0x000000FF&((data)<<0))
#define DDC4_DDC_SAP_EDIDDP_src(data)                                                ((0x000000FF&(data))>>0)
#define DDC4_DDC_SAP_get_EDIDDP(data)                                                ((0x000000FF&(data))>>0)


#define DDC4_DDC_BISTCR                                                              0x1801BF28
#define DDC4_DDC_BISTCR_reg_addr                                                     "0xB801BF28"
#define DDC4_DDC_BISTCR_reg                                                          0xB801BF28
#define set_DDC4_DDC_BISTCR_reg(data)   (*((volatile unsigned int*) DDC4_DDC_BISTCR_reg)=data)
#define get_DDC4_DDC_BISTCR_reg   (*((volatile unsigned int*) DDC4_DDC_BISTCR_reg))
#define DDC4_DDC_BISTCR_inst_adr                                                     "0x00CA"
#define DDC4_DDC_BISTCR_inst                                                         0x00CA
#define DDC4_DDC_BISTCR_DDC_BIST_RME_shift                                           (4)
#define DDC4_DDC_BISTCR_DDC_BIST_RME_mask                                            (0x00000010)
#define DDC4_DDC_BISTCR_DDC_BIST_RME(data)                                           (0x00000010&((data)<<4))
#define DDC4_DDC_BISTCR_DDC_BIST_RME_src(data)                                       ((0x00000010&(data))>>4)
#define DDC4_DDC_BISTCR_get_DDC_BIST_RME(data)                                       ((0x00000010&(data))>>4)
#define DDC4_DDC_BISTCR_DDC_BIST_RM_shift                                            (0)
#define DDC4_DDC_BISTCR_DDC_BIST_RM_mask                                             (0x0000000F)
#define DDC4_DDC_BISTCR_DDC_BIST_RM(data)                                            (0x0000000F&((data)<<0))
#define DDC4_DDC_BISTCR_DDC_BIST_RM_src(data)                                        ((0x0000000F&(data))>>0)
#define DDC4_DDC_BISTCR_get_DDC_BIST_RM(data)                                        ((0x0000000F&(data))>>0)


#define DDC4_DDC_SCR                                                                 0x1801BF2C
#define DDC4_DDC_SCR_reg_addr                                                        "0xB801BF2C"
#define DDC4_DDC_SCR_reg                                                             0xB801BF2C
#define set_DDC4_DDC_SCR_reg(data)   (*((volatile unsigned int*) DDC4_DDC_SCR_reg)=data)
#define get_DDC4_DDC_SCR_reg   (*((volatile unsigned int*) DDC4_DDC_SCR_reg))
#define DDC4_DDC_SCR_inst_adr                                                        "0x00CB"
#define DDC4_DDC_SCR_inst                                                            0x00CB
#define DDC4_DDC_SCR_SEGPT_LATIE_shift                                               (7)
#define DDC4_DDC_SCR_SEGPT_LATIE_mask                                                (0x00000080)
#define DDC4_DDC_SCR_SEGPT_LATIE(data)                                               (0x00000080&((data)<<7))
#define DDC4_DDC_SCR_SEGPT_LATIE_src(data)                                           ((0x00000080&(data))>>7)
#define DDC4_DDC_SCR_get_SEGPT_LATIE(data)                                           ((0x00000080&(data))>>7)
#define DDC4_DDC_SCR_Dataoutputdelay_sel_shift                                       (4)
#define DDC4_DDC_SCR_Dataoutputdelay_sel_mask                                        (0x00000070)
#define DDC4_DDC_SCR_Dataoutputdelay_sel(data)                                       (0x00000070&((data)<<4))
#define DDC4_DDC_SCR_Dataoutputdelay_sel_src(data)                                   ((0x00000070&(data))>>4)
#define DDC4_DDC_SCR_get_Dataoutputdelay_sel(data)                                   ((0x00000070&(data))>>4)
#define DDC4_DDC_SCR_I2C_M_RD_ST_STS_shift                                           (2)
#define DDC4_DDC_SCR_I2C_M_RD_ST_STS_mask                                            (0x00000004)
#define DDC4_DDC_SCR_I2C_M_RD_ST_STS(data)                                           (0x00000004&((data)<<2))
#define DDC4_DDC_SCR_I2C_M_RD_ST_STS_src(data)                                       ((0x00000004&(data))>>2)
#define DDC4_DDC_SCR_get_I2C_M_RD_ST_STS(data)                                       ((0x00000004&(data))>>2)
#define DDC4_DDC_SCR_I2C_M_RD_SP_STS_shift                                           (1)
#define DDC4_DDC_SCR_I2C_M_RD_SP_STS_mask                                            (0x00000002)
#define DDC4_DDC_SCR_I2C_M_RD_SP_STS(data)                                           (0x00000002&((data)<<1))
#define DDC4_DDC_SCR_I2C_M_RD_SP_STS_src(data)                                       ((0x00000002&(data))>>1)
#define DDC4_DDC_SCR_get_I2C_M_RD_SP_STS(data)                                       ((0x00000002&(data))>>1)
#define DDC4_DDC_SCR_SGID_EN_shift                                                   (0)
#define DDC4_DDC_SCR_SGID_EN_mask                                                    (0x00000001)
#define DDC4_DDC_SCR_SGID_EN(data)                                                   (0x00000001&((data)<<0))
#define DDC4_DDC_SCR_SGID_EN_src(data)                                               ((0x00000001&(data))>>0)
#define DDC4_DDC_SCR_get_SGID_EN(data)                                               ((0x00000001&(data))>>0)


#define DDC4_DDC_SSAR                                                                0x1801BF30
#define DDC4_DDC_SSAR_reg_addr                                                       "0xB801BF30"
#define DDC4_DDC_SSAR_reg                                                            0xB801BF30
#define set_DDC4_DDC_SSAR_reg(data)   (*((volatile unsigned int*) DDC4_DDC_SSAR_reg)=data)
#define get_DDC4_DDC_SSAR_reg   (*((volatile unsigned int*) DDC4_DDC_SSAR_reg))
#define DDC4_DDC_SSAR_inst_adr                                                       "0x00CC"
#define DDC4_DDC_SSAR_inst                                                           0x00CC
#define DDC4_DDC_SSAR_SGID_ADDRESS_shift                                             (1)
#define DDC4_DDC_SSAR_SGID_ADDRESS_mask                                              (0x000000FE)
#define DDC4_DDC_SSAR_SGID_ADDRESS(data)                                             (0x000000FE&((data)<<1))
#define DDC4_DDC_SSAR_SGID_ADDRESS_src(data)                                         ((0x000000FE&(data))>>1)
#define DDC4_DDC_SSAR_get_SGID_ADDRESS(data)                                         ((0x000000FE&(data))>>1)
#define DDC4_DDC_SSAR_SGID_DTRDEN_shift                                              (0)
#define DDC4_DDC_SSAR_SGID_DTRDEN_mask                                               (0x00000001)
#define DDC4_DDC_SSAR_SGID_DTRDEN(data)                                              (0x00000001&((data)<<0))
#define DDC4_DDC_SSAR_SGID_DTRDEN_src(data)                                          ((0x00000001&(data))>>0)
#define DDC4_DDC_SSAR_get_SGID_DTRDEN(data)                                          ((0x00000001&(data))>>0)


#define DDC4_DDC_SPR                                                                 0x1801BF34
#define DDC4_DDC_SPR_reg_addr                                                        "0xB801BF34"
#define DDC4_DDC_SPR_reg                                                             0xB801BF34
#define set_DDC4_DDC_SPR_reg(data)   (*((volatile unsigned int*) DDC4_DDC_SPR_reg)=data)
#define get_DDC4_DDC_SPR_reg   (*((volatile unsigned int*) DDC4_DDC_SPR_reg))
#define DDC4_DDC_SPR_inst_adr                                                        "0x00CD"
#define DDC4_DDC_SPR_inst                                                            0x00CD
#define DDC4_DDC_SPR_SEGPT_LATCHED_shift                                             (7)
#define DDC4_DDC_SPR_SEGPT_LATCHED_mask                                              (0x00000080)
#define DDC4_DDC_SPR_SEGPT_LATCHED(data)                                             (0x00000080&((data)<<7))
#define DDC4_DDC_SPR_SEGPT_LATCHED_src(data)                                         ((0x00000080&(data))>>7)
#define DDC4_DDC_SPR_get_SEGPT_LATCHED(data)                                         ((0x00000080&(data))>>7)
#define DDC4_DDC_SPR_SEG_PT_shift                                                    (0)
#define DDC4_DDC_SPR_SEG_PT_mask                                                     (0x0000007F)
#define DDC4_DDC_SPR_SEG_PT(data)                                                    (0x0000007F&((data)<<0))
#define DDC4_DDC_SPR_SEG_PT_src(data)                                                ((0x0000007F&(data))>>0)
#define DDC4_DDC_SPR_get_SEG_PT(data)                                                ((0x0000007F&(data))>>0)


#define DDC4_DDC_SFCR                                                                0x1801BF38
#define DDC4_DDC_SFCR_reg_addr                                                       "0xB801BF38"
#define DDC4_DDC_SFCR_reg                                                            0xB801BF38
#define set_DDC4_DDC_SFCR_reg(data)   (*((volatile unsigned int*) DDC4_DDC_SFCR_reg)=data)
#define get_DDC4_DDC_SFCR_reg   (*((volatile unsigned int*) DDC4_DDC_SFCR_reg))
#define DDC4_DDC_SFCR_inst_adr                                                       "0x00CE"
#define DDC4_DDC_SFCR_inst                                                           0x00CE
#define DDC4_DDC_SFCR_SPECIAL_MODE_shift                                             (3)
#define DDC4_DDC_SFCR_SPECIAL_MODE_mask                                              (0x00000008)
#define DDC4_DDC_SFCR_SPECIAL_MODE(data)                                             (0x00000008&((data)<<3))
#define DDC4_DDC_SFCR_SPECIAL_MODE_src(data)                                         ((0x00000008&(data))>>3)
#define DDC4_DDC_SFCR_get_SPECIAL_MODE(data)                                         ((0x00000008&(data))>>3)
#define DDC4_DDC_SFCR_DOFFPT_RESET_shift                                             (2)
#define DDC4_DDC_SFCR_DOFFPT_RESET_mask                                              (0x00000004)
#define DDC4_DDC_SFCR_DOFFPT_RESET(data)                                             (0x00000004&((data)<<2))
#define DDC4_DDC_SFCR_DOFFPT_RESET_src(data)                                         ((0x00000004&(data))>>2)
#define DDC4_DDC_SFCR_get_DOFFPT_RESET(data)                                         ((0x00000004&(data))>>2)
#define DDC4_DDC_SFCR_DIFFPT_RESET_shift                                             (1)
#define DDC4_DDC_SFCR_DIFFPT_RESET_mask                                              (0x00000002)
#define DDC4_DDC_SFCR_DIFFPT_RESET(data)                                             (0x00000002&((data)<<1))
#define DDC4_DDC_SFCR_DIFFPT_RESET_src(data)                                         ((0x00000002&(data))>>1)
#define DDC4_DDC_SFCR_get_DIFFPT_RESET(data)                                         ((0x00000002&(data))>>1)
#define DDC4_DDC_SFCR_CIID_EN_shift                                                  (0)
#define DDC4_DDC_SFCR_CIID_EN_mask                                                   (0x00000001)
#define DDC4_DDC_SFCR_CIID_EN(data)                                                  (0x00000001&((data)<<0))
#define DDC4_DDC_SFCR_CIID_EN_src(data)                                              ((0x00000001&(data))>>0)
#define DDC4_DDC_SFCR_get_CIID_EN(data)                                              ((0x00000001&(data))>>0)


#define DDC4_DDC_SFSAR                                                               0x1801BF3C
#define DDC4_DDC_SFSAR_reg_addr                                                      "0xB801BF3C"
#define DDC4_DDC_SFSAR_reg                                                           0xB801BF3C
#define set_DDC4_DDC_SFSAR_reg(data)   (*((volatile unsigned int*) DDC4_DDC_SFSAR_reg)=data)
#define get_DDC4_DDC_SFSAR_reg   (*((volatile unsigned int*) DDC4_DDC_SFSAR_reg))
#define DDC4_DDC_SFSAR_inst_adr                                                      "0x00CF"
#define DDC4_DDC_SFSAR_inst                                                          0x00CF
#define DDC4_DDC_SFSAR_CIID_ADDRESS_shift                                            (1)
#define DDC4_DDC_SFSAR_CIID_ADDRESS_mask                                             (0x000000FE)
#define DDC4_DDC_SFSAR_CIID_ADDRESS(data)                                            (0x000000FE&((data)<<1))
#define DDC4_DDC_SFSAR_CIID_ADDRESS_src(data)                                        ((0x000000FE&(data))>>1)
#define DDC4_DDC_SFSAR_get_CIID_ADDRESS(data)                                        ((0x000000FE&(data))>>1)
#define DDC4_DDC_SFSAR_CIRWS_CURRENT_shift                                           (0)
#define DDC4_DDC_SFSAR_CIRWS_CURRENT_mask                                            (0x00000001)
#define DDC4_DDC_SFSAR_CIRWS_CURRENT(data)                                           (0x00000001&((data)<<0))
#define DDC4_DDC_SFSAR_CIRWS_CURRENT_src(data)                                       ((0x00000001&(data))>>0)
#define DDC4_DDC_SFSAR_get_CIRWS_CURRENT(data)                                       ((0x00000001&(data))>>0)


#define DDC4_DDC_SFDR                                                                0x1801BF40
#define DDC4_DDC_SFDR_reg_addr                                                       "0xB801BF40"
#define DDC4_DDC_SFDR_reg                                                            0xB801BF40
#define set_DDC4_DDC_SFDR_reg(data)   (*((volatile unsigned int*) DDC4_DDC_SFDR_reg)=data)
#define get_DDC4_DDC_SFDR_reg   (*((volatile unsigned int*) DDC4_DDC_SFDR_reg))
#define DDC4_DDC_SFDR_inst_adr                                                       "0x00D0"
#define DDC4_DDC_SFDR_inst                                                           0x00D0
#define DDC4_DDC_SFDR_CIIDDP_shift                                                   (0)
#define DDC4_DDC_SFDR_CIIDDP_mask                                                    (0x000000FF)
#define DDC4_DDC_SFDR_CIIDDP(data)                                                   (0x000000FF&((data)<<0))
#define DDC4_DDC_SFDR_CIIDDP_src(data)                                               ((0x000000FF&(data))>>0)
#define DDC4_DDC_SFDR_get_CIIDDP(data)                                               ((0x000000FF&(data))>>0)


#define DDC4_DDC_SFBSR                                                               0x1801BF44
#define DDC4_DDC_SFBSR_reg_addr                                                      "0xB801BF44"
#define DDC4_DDC_SFBSR_reg                                                           0xB801BF44
#define set_DDC4_DDC_SFBSR_reg(data)   (*((volatile unsigned int*) DDC4_DDC_SFBSR_reg)=data)
#define get_DDC4_DDC_SFBSR_reg   (*((volatile unsigned int*) DDC4_DDC_SFBSR_reg))
#define DDC4_DDC_SFBSR_inst_adr                                                      "0x00D1"
#define DDC4_DDC_SFBSR_inst                                                          0x00D1
#define DDC4_DDC_SFBSR_CIRWS_2ND_shift                                               (5)
#define DDC4_DDC_SFBSR_CIRWS_2ND_mask                                                (0x00000020)
#define DDC4_DDC_SFBSR_CIRWS_2ND(data)                                               (0x00000020&((data)<<5))
#define DDC4_DDC_SFBSR_CIRWS_2ND_src(data)                                           ((0x00000020&(data))>>5)
#define DDC4_DDC_SFBSR_get_CIRWS_2ND(data)                                           ((0x00000020&(data))>>5)
#define DDC4_DDC_SFBSR_CIRWS_1ST_shift                                               (4)
#define DDC4_DDC_SFBSR_CIRWS_1ST_mask                                                (0x00000010)
#define DDC4_DDC_SFBSR_CIRWS_1ST(data)                                               (0x00000010&((data)<<4))
#define DDC4_DDC_SFBSR_CIRWS_1ST_src(data)                                           ((0x00000010&(data))>>4)
#define DDC4_DDC_SFBSR_get_CIRWS_1ST(data)                                           ((0x00000010&(data))>>4)
#define DDC4_DDC_SFBSR_CIPPT_2ND_shift                                               (3)
#define DDC4_DDC_SFBSR_CIPPT_2ND_mask                                                (0x00000008)
#define DDC4_DDC_SFBSR_CIPPT_2ND(data)                                               (0x00000008&((data)<<3))
#define DDC4_DDC_SFBSR_CIPPT_2ND_src(data)                                           ((0x00000008&(data))>>3)
#define DDC4_DDC_SFBSR_get_CIPPT_2ND(data)                                           ((0x00000008&(data))>>3)
#define DDC4_DDC_SFBSR_CISPT_2ND_shift                                               (2)
#define DDC4_DDC_SFBSR_CISPT_2ND_mask                                                (0x00000004)
#define DDC4_DDC_SFBSR_CISPT_2ND(data)                                               (0x00000004&((data)<<2))
#define DDC4_DDC_SFBSR_CISPT_2ND_src(data)                                           ((0x00000004&(data))>>2)
#define DDC4_DDC_SFBSR_get_CISPT_2ND(data)                                           ((0x00000004&(data))>>2)
#define DDC4_DDC_SFBSR_CIPPT_1ST_shift                                               (1)
#define DDC4_DDC_SFBSR_CIPPT_1ST_mask                                                (0x00000002)
#define DDC4_DDC_SFBSR_CIPPT_1ST(data)                                               (0x00000002&((data)<<1))
#define DDC4_DDC_SFBSR_CIPPT_1ST_src(data)                                           ((0x00000002&(data))>>1)
#define DDC4_DDC_SFBSR_get_CIPPT_1ST(data)                                           ((0x00000002&(data))>>1)
#define DDC4_DDC_SFBSR_CISPT_1ST_shift                                               (0)
#define DDC4_DDC_SFBSR_CISPT_1ST_mask                                                (0x00000001)
#define DDC4_DDC_SFBSR_CISPT_1ST(data)                                               (0x00000001&((data)<<0))
#define DDC4_DDC_SFBSR_CISPT_1ST_src(data)                                           ((0x00000001&(data))>>0)
#define DDC4_DDC_SFBSR_get_CISPT_1ST(data)                                           ((0x00000001&(data))>>0)


#define DDC4_DDC_SFIBLR                                                              0x1801BF48
#define DDC4_DDC_SFIBLR_reg_addr                                                     "0xB801BF48"
#define DDC4_DDC_SFIBLR_reg                                                          0xB801BF48
#define set_DDC4_DDC_SFIBLR_reg(data)   (*((volatile unsigned int*) DDC4_DDC_SFIBLR_reg)=data)
#define get_DDC4_DDC_SFIBLR_reg   (*((volatile unsigned int*) DDC4_DDC_SFIBLR_reg))
#define DDC4_DDC_SFIBLR_inst_adr                                                     "0x00D2"
#define DDC4_DDC_SFIBLR_inst                                                         0x00D2
#define DDC4_DDC_SFIBLR_FFDI_DLEN_shift                                              (0)
#define DDC4_DDC_SFIBLR_FFDI_DLEN_mask                                               (0x0000001F)
#define DDC4_DDC_SFIBLR_FFDI_DLEN(data)                                              (0x0000001F&((data)<<0))
#define DDC4_DDC_SFIBLR_FFDI_DLEN_src(data)                                          ((0x0000001F&(data))>>0)
#define DDC4_DDC_SFIBLR_get_FFDI_DLEN(data)                                          ((0x0000001F&(data))>>0)


#define DDC4_DDC_SFIBRWPR                                                            0x1801BF4C
#define DDC4_DDC_SFIBRWPR_reg_addr                                                   "0xB801BF4C"
#define DDC4_DDC_SFIBRWPR_reg                                                        0xB801BF4C
#define set_DDC4_DDC_SFIBRWPR_reg(data)   (*((volatile unsigned int*) DDC4_DDC_SFIBRWPR_reg)=data)
#define get_DDC4_DDC_SFIBRWPR_reg   (*((volatile unsigned int*) DDC4_DDC_SFIBRWPR_reg))
#define DDC4_DDC_SFIBRWPR_inst_adr                                                   "0x00D3"
#define DDC4_DDC_SFIBRWPR_inst                                                       0x00D3
#define DDC4_DDC_SFIBRWPR_DIFF_WPT_shift                                             (4)
#define DDC4_DDC_SFIBRWPR_DIFF_WPT_mask                                              (0x000000F0)
#define DDC4_DDC_SFIBRWPR_DIFF_WPT(data)                                             (0x000000F0&((data)<<4))
#define DDC4_DDC_SFIBRWPR_DIFF_WPT_src(data)                                         ((0x000000F0&(data))>>4)
#define DDC4_DDC_SFIBRWPR_get_DIFF_WPT(data)                                         ((0x000000F0&(data))>>4)
#define DDC4_DDC_SFIBRWPR_DIFF_RPT_shift                                             (0)
#define DDC4_DDC_SFIBRWPR_DIFF_RPT_mask                                              (0x0000000F)
#define DDC4_DDC_SFIBRWPR_DIFF_RPT(data)                                             (0x0000000F&((data)<<0))
#define DDC4_DDC_SFIBRWPR_DIFF_RPT_src(data)                                         ((0x0000000F&(data))>>0)
#define DDC4_DDC_SFIBRWPR_get_DIFF_RPT(data)                                         ((0x0000000F&(data))>>0)


#define DDC4_DDC_SFIBSWPR                                                            0x1801BF50
#define DDC4_DDC_SFIBSWPR_reg_addr                                                   "0xB801BF50"
#define DDC4_DDC_SFIBSWPR_reg                                                        0xB801BF50
#define set_DDC4_DDC_SFIBSWPR_reg(data)   (*((volatile unsigned int*) DDC4_DDC_SFIBSWPR_reg)=data)
#define get_DDC4_DDC_SFIBSWPR_reg   (*((volatile unsigned int*) DDC4_DDC_SFIBSWPR_reg))
#define DDC4_DDC_SFIBSWPR_inst_adr                                                   "0x00D4"
#define DDC4_DDC_SFIBSWPR_inst                                                       0x00D4
#define DDC4_DDC_SFIBSWPR_DIFFSTOP_PT_shift                                          (0)
#define DDC4_DDC_SFIBSWPR_DIFFSTOP_PT_mask                                           (0x0000000F)
#define DDC4_DDC_SFIBSWPR_DIFFSTOP_PT(data)                                          (0x0000000F&((data)<<0))
#define DDC4_DDC_SFIBSWPR_DIFFSTOP_PT_src(data)                                      ((0x0000000F&(data))>>0)
#define DDC4_DDC_SFIBSWPR_get_DIFFSTOP_PT(data)                                      ((0x0000000F&(data))>>0)


#define DDC4_DDC_SFOBSR                                                              0x1801BF54
#define DDC4_DDC_SFOBSR_reg_addr                                                     "0xB801BF54"
#define DDC4_DDC_SFOBSR_reg                                                          0xB801BF54
#define set_DDC4_DDC_SFOBSR_reg(data)   (*((volatile unsigned int*) DDC4_DDC_SFOBSR_reg)=data)
#define get_DDC4_DDC_SFOBSR_reg   (*((volatile unsigned int*) DDC4_DDC_SFOBSR_reg))
#define DDC4_DDC_SFOBSR_inst_adr                                                     "0x00D5"
#define DDC4_DDC_SFOBSR_inst                                                         0x00D5
#define DDC4_DDC_SFOBSR_FFDO_DLEN_shift                                              (0)
#define DDC4_DDC_SFOBSR_FFDO_DLEN_mask                                               (0x0000001F)
#define DDC4_DDC_SFOBSR_FFDO_DLEN(data)                                              (0x0000001F&((data)<<0))
#define DDC4_DDC_SFOBSR_FFDO_DLEN_src(data)                                          ((0x0000001F&(data))>>0)
#define DDC4_DDC_SFOBSR_get_FFDO_DLEN(data)                                          ((0x0000001F&(data))>>0)


#define DDC4_DDC_SFOBRWPR                                                            0x1801BF58
#define DDC4_DDC_SFOBRWPR_reg_addr                                                   "0xB801BF58"
#define DDC4_DDC_SFOBRWPR_reg                                                        0xB801BF58
#define set_DDC4_DDC_SFOBRWPR_reg(data)   (*((volatile unsigned int*) DDC4_DDC_SFOBRWPR_reg)=data)
#define get_DDC4_DDC_SFOBRWPR_reg   (*((volatile unsigned int*) DDC4_DDC_SFOBRWPR_reg))
#define DDC4_DDC_SFOBRWPR_inst_adr                                                   "0x00D6"
#define DDC4_DDC_SFOBRWPR_inst                                                       0x00D6
#define DDC4_DDC_SFOBRWPR_DOFF_WPT_shift                                             (4)
#define DDC4_DDC_SFOBRWPR_DOFF_WPT_mask                                              (0x000000F0)
#define DDC4_DDC_SFOBRWPR_DOFF_WPT(data)                                             (0x000000F0&((data)<<4))
#define DDC4_DDC_SFOBRWPR_DOFF_WPT_src(data)                                         ((0x000000F0&(data))>>4)
#define DDC4_DDC_SFOBRWPR_get_DOFF_WPT(data)                                         ((0x000000F0&(data))>>4)
#define DDC4_DDC_SFOBRWPR_DOFF_RPT_shift                                             (0)
#define DDC4_DDC_SFOBRWPR_DOFF_RPT_mask                                              (0x0000000F)
#define DDC4_DDC_SFOBRWPR_DOFF_RPT(data)                                             (0x0000000F&((data)<<0))
#define DDC4_DDC_SFOBRWPR_DOFF_RPT_src(data)                                         ((0x0000000F&(data))>>0)
#define DDC4_DDC_SFOBRWPR_get_DOFF_RPT(data)                                         ((0x0000000F&(data))>>0)


#define DDC4_DDC_SFSR                                                                0x1801BF5C
#define DDC4_DDC_SFSR_reg_addr                                                       "0xB801BF5C"
#define DDC4_DDC_SFSR_reg                                                            0xB801BF5C
#define set_DDC4_DDC_SFSR_reg(data)   (*((volatile unsigned int*) DDC4_DDC_SFSR_reg)=data)
#define get_DDC4_DDC_SFSR_reg   (*((volatile unsigned int*) DDC4_DDC_SFSR_reg))
#define DDC4_DDC_SFSR_inst_adr                                                       "0x00D7"
#define DDC4_DDC_SFSR_inst                                                           0x00D7
#define DDC4_DDC_SFSR_FFDOUF_ST_shift                                                (7)
#define DDC4_DDC_SFSR_FFDOUF_ST_mask                                                 (0x00000080)
#define DDC4_DDC_SFSR_FFDOUF_ST(data)                                                (0x00000080&((data)<<7))
#define DDC4_DDC_SFSR_FFDOUF_ST_src(data)                                            ((0x00000080&(data))>>7)
#define DDC4_DDC_SFSR_get_FFDOUF_ST(data)                                            ((0x00000080&(data))>>7)
#define DDC4_DDC_SFSR_FFDIOF_ST_shift                                                (6)
#define DDC4_DDC_SFSR_FFDIOF_ST_mask                                                 (0x00000040)
#define DDC4_DDC_SFSR_FFDIOF_ST(data)                                                (0x00000040&((data)<<6))
#define DDC4_DDC_SFSR_FFDIOF_ST_src(data)                                            ((0x00000040&(data))>>6)
#define DDC4_DDC_SFSR_get_FFDIOF_ST(data)                                            ((0x00000040&(data))>>6)
#define DDC4_DDC_SFSR_FFDONF_ST_shift                                                (5)
#define DDC4_DDC_SFSR_FFDONF_ST_mask                                                 (0x00000020)
#define DDC4_DDC_SFSR_FFDONF_ST(data)                                                (0x00000020&((data)<<5))
#define DDC4_DDC_SFSR_FFDONF_ST_src(data)                                            ((0x00000020&(data))>>5)
#define DDC4_DDC_SFSR_get_FFDONF_ST(data)                                            ((0x00000020&(data))>>5)
#define DDC4_DDC_SFSR_FFDOET_ST_shift                                                (4)
#define DDC4_DDC_SFSR_FFDOET_ST_mask                                                 (0x00000010)
#define DDC4_DDC_SFSR_FFDOET_ST(data)                                                (0x00000010&((data)<<4))
#define DDC4_DDC_SFSR_FFDOET_ST_src(data)                                            ((0x00000010&(data))>>4)
#define DDC4_DDC_SFSR_get_FFDOET_ST(data)                                            ((0x00000010&(data))>>4)
#define DDC4_DDC_SFSR_FFDIFU_ST_shift                                                (3)
#define DDC4_DDC_SFSR_FFDIFU_ST_mask                                                 (0x00000008)
#define DDC4_DDC_SFSR_FFDIFU_ST(data)                                                (0x00000008&((data)<<3))
#define DDC4_DDC_SFSR_FFDIFU_ST_src(data)                                            ((0x00000008&(data))>>3)
#define DDC4_DDC_SFSR_get_FFDIFU_ST(data)                                            ((0x00000008&(data))>>3)
#define DDC4_DDC_SFSR_FFDINE_ST_shift                                                (2)
#define DDC4_DDC_SFSR_FFDINE_ST_mask                                                 (0x00000004)
#define DDC4_DDC_SFSR_FFDINE_ST(data)                                                (0x00000004&((data)<<2))
#define DDC4_DDC_SFSR_FFDINE_ST_src(data)                                            ((0x00000004&(data))>>2)
#define DDC4_DDC_SFSR_get_FFDINE_ST(data)                                            ((0x00000004&(data))>>2)


#define DDC4_DDC_SFIR                                                                0x1801BF60
#define DDC4_DDC_SFIR_reg_addr                                                       "0xB801BF60"
#define DDC4_DDC_SFIR_reg                                                            0xB801BF60
#define set_DDC4_DDC_SFIR_reg(data)   (*((volatile unsigned int*) DDC4_DDC_SFIR_reg)=data)
#define get_DDC4_DDC_SFIR_reg   (*((volatile unsigned int*) DDC4_DDC_SFIR_reg))
#define DDC4_DDC_SFIR_inst_adr                                                       "0x00D8"
#define DDC4_DDC_SFIR_inst                                                           0x00D8
#define DDC4_DDC_SFIR_FFDOUF_IE_shift                                                (7)
#define DDC4_DDC_SFIR_FFDOUF_IE_mask                                                 (0x00000080)
#define DDC4_DDC_SFIR_FFDOUF_IE(data)                                                (0x00000080&((data)<<7))
#define DDC4_DDC_SFIR_FFDOUF_IE_src(data)                                            ((0x00000080&(data))>>7)
#define DDC4_DDC_SFIR_get_FFDOUF_IE(data)                                            ((0x00000080&(data))>>7)
#define DDC4_DDC_SFIR_FFDIOF_IE_shift                                                (6)
#define DDC4_DDC_SFIR_FFDIOF_IE_mask                                                 (0x00000040)
#define DDC4_DDC_SFIR_FFDIOF_IE(data)                                                (0x00000040&((data)<<6))
#define DDC4_DDC_SFIR_FFDIOF_IE_src(data)                                            ((0x00000040&(data))>>6)
#define DDC4_DDC_SFIR_get_FFDIOF_IE(data)                                            ((0x00000040&(data))>>6)
#define DDC4_DDC_SFIR_FFDONF_IE_shift                                                (5)
#define DDC4_DDC_SFIR_FFDONF_IE_mask                                                 (0x00000020)
#define DDC4_DDC_SFIR_FFDONF_IE(data)                                                (0x00000020&((data)<<5))
#define DDC4_DDC_SFIR_FFDONF_IE_src(data)                                            ((0x00000020&(data))>>5)
#define DDC4_DDC_SFIR_get_FFDONF_IE(data)                                            ((0x00000020&(data))>>5)
#define DDC4_DDC_SFIR_FFDOET_IE_shift                                                (4)
#define DDC4_DDC_SFIR_FFDOET_IE_mask                                                 (0x00000010)
#define DDC4_DDC_SFIR_FFDOET_IE(data)                                                (0x00000010&((data)<<4))
#define DDC4_DDC_SFIR_FFDOET_IE_src(data)                                            ((0x00000010&(data))>>4)
#define DDC4_DDC_SFIR_get_FFDOET_IE(data)                                            ((0x00000010&(data))>>4)
#define DDC4_DDC_SFIR_FFDIFU_IE_shift                                                (3)
#define DDC4_DDC_SFIR_FFDIFU_IE_mask                                                 (0x00000008)
#define DDC4_DDC_SFIR_FFDIFU_IE(data)                                                (0x00000008&((data)<<3))
#define DDC4_DDC_SFIR_FFDIFU_IE_src(data)                                            ((0x00000008&(data))>>3)
#define DDC4_DDC_SFIR_get_FFDIFU_IE(data)                                            ((0x00000008&(data))>>3)
#define DDC4_DDC_SFIR_FFDINE_IE_shift                                                (2)
#define DDC4_DDC_SFIR_FFDINE_IE_mask                                                 (0x00000004)
#define DDC4_DDC_SFIR_FFDINE_IE(data)                                                (0x00000004&((data)<<2))
#define DDC4_DDC_SFIR_FFDINE_IE_src(data)                                            ((0x00000004&(data))>>2)
#define DDC4_DDC_SFIR_get_FFDINE_IE(data)                                            ((0x00000004&(data))>>2)
#define DDC4_DDC_SFIR_CIPPT_IE_shift                                                 (1)
#define DDC4_DDC_SFIR_CIPPT_IE_mask                                                  (0x00000002)
#define DDC4_DDC_SFIR_CIPPT_IE(data)                                                 (0x00000002&((data)<<1))
#define DDC4_DDC_SFIR_CIPPT_IE_src(data)                                             ((0x00000002&(data))>>1)
#define DDC4_DDC_SFIR_get_CIPPT_IE(data)                                             ((0x00000002&(data))>>1)
#define DDC4_DDC_SFIR_CISPT_IE_shift                                                 (0)
#define DDC4_DDC_SFIR_CISPT_IE_mask                                                  (0x00000001)
#define DDC4_DDC_SFIR_CISPT_IE(data)                                                 (0x00000001&((data)<<0))
#define DDC4_DDC_SFIR_CISPT_IE_src(data)                                             ((0x00000001&(data))>>0)
#define DDC4_DDC_SFIR_get_CISPT_IE(data)                                             ((0x00000001&(data))>>0)


#define DDC4_DDC_FSMS                                                                0x1801BF64
#define DDC4_DDC_FSMS_reg_addr                                                       "0xB801BF64"
#define DDC4_DDC_FSMS_reg                                                            0xB801BF64
#define set_DDC4_DDC_FSMS_reg(data)   (*((volatile unsigned int*) DDC4_DDC_FSMS_reg)=data)
#define get_DDC4_DDC_FSMS_reg   (*((volatile unsigned int*) DDC4_DDC_FSMS_reg))
#define DDC4_DDC_FSMS_inst_adr                                                       "0x00D9"
#define DDC4_DDC_FSMS_inst                                                           0x00D9
#define DDC4_DDC_FSMS_CMDFSM_ST_shift                                                (0)
#define DDC4_DDC_FSMS_CMDFSM_ST_mask                                                 (0x000000FF)
#define DDC4_DDC_FSMS_CMDFSM_ST(data)                                                (0x000000FF&((data)<<0))
#define DDC4_DDC_FSMS_CMDFSM_ST_src(data)                                            ((0x000000FF&(data))>>0)
#define DDC4_DDC_FSMS_get_CMDFSM_ST(data)                                            ((0x000000FF&(data))>>0)


#define DDC4_DDC_DUMMY                                                               0x1801BF68
#define DDC4_DDC_DUMMY_reg_addr                                                      "0xB801BF68"
#define DDC4_DDC_DUMMY_reg                                                           0xB801BF68
#define set_DDC4_DDC_DUMMY_reg(data)   (*((volatile unsigned int*) DDC4_DDC_DUMMY_reg)=data)
#define get_DDC4_DDC_DUMMY_reg   (*((volatile unsigned int*) DDC4_DDC_DUMMY_reg))
#define DDC4_DDC_DUMMY_inst_adr                                                      "0x00DA"
#define DDC4_DDC_DUMMY_inst                                                          0x00DA
#define DDC4_DDC_DUMMY_Dummy_shift                                                   (0)
#define DDC4_DDC_DUMMY_Dummy_mask                                                    (0x000000FF)
#define DDC4_DDC_DUMMY_Dummy(data)                                                   (0x000000FF&((data)<<0))
#define DDC4_DDC_DUMMY_Dummy_src(data)                                               ((0x000000FF&(data))>>0)
#define DDC4_DDC_DUMMY_get_Dummy(data)                                               ((0x000000FF&(data))>>0)


#define DDC4_DDC_EDID_SRAM_READ_IRQ_EN                                               0x1801BF70
#define DDC4_DDC_EDID_SRAM_READ_IRQ_EN_reg_addr                                      "0xB801BF70"
#define DDC4_DDC_EDID_SRAM_READ_IRQ_EN_reg                                           0xB801BF70
#define set_DDC4_DDC_EDID_SRAM_READ_IRQ_EN_reg(data)   (*((volatile unsigned int*) DDC4_DDC_EDID_SRAM_READ_IRQ_EN_reg)=data)
#define get_DDC4_DDC_EDID_SRAM_READ_IRQ_EN_reg   (*((volatile unsigned int*) DDC4_DDC_EDID_SRAM_READ_IRQ_EN_reg))
#define DDC4_DDC_EDID_SRAM_READ_IRQ_EN_inst_adr                                      "0x00DC"
#define DDC4_DDC_EDID_SRAM_READ_IRQ_EN_inst                                          0x00DC
#define DDC4_DDC_EDID_SRAM_READ_IRQ_EN_START_IRQ_EN_shift                            (1)
#define DDC4_DDC_EDID_SRAM_READ_IRQ_EN_START_IRQ_EN_mask                             (0x00000002)
#define DDC4_DDC_EDID_SRAM_READ_IRQ_EN_START_IRQ_EN(data)                            (0x00000002&((data)<<1))
#define DDC4_DDC_EDID_SRAM_READ_IRQ_EN_START_IRQ_EN_src(data)                        ((0x00000002&(data))>>1)
#define DDC4_DDC_EDID_SRAM_READ_IRQ_EN_get_START_IRQ_EN(data)                        ((0x00000002&(data))>>1)
#define DDC4_DDC_EDID_SRAM_READ_IRQ_EN_STOP_IRQ_EN_shift                             (0)
#define DDC4_DDC_EDID_SRAM_READ_IRQ_EN_STOP_IRQ_EN_mask                              (0x00000001)
#define DDC4_DDC_EDID_SRAM_READ_IRQ_EN_STOP_IRQ_EN(data)                             (0x00000001&((data)<<0))
#define DDC4_DDC_EDID_SRAM_READ_IRQ_EN_STOP_IRQ_EN_src(data)                         ((0x00000001&(data))>>0)
#define DDC4_DDC_EDID_SRAM_READ_IRQ_EN_get_STOP_IRQ_EN(data)                         ((0x00000001&(data))>>0)


#define DDC4_DDC_EDID_SRAM_READ_AUX                                                  0x1801BF74
#define DDC4_DDC_EDID_SRAM_READ_AUX_reg_addr                                         "0xB801BF74"
#define DDC4_DDC_EDID_SRAM_READ_AUX_reg                                              0xB801BF74
#define set_DDC4_DDC_EDID_SRAM_READ_AUX_reg(data)   (*((volatile unsigned int*) DDC4_DDC_EDID_SRAM_READ_AUX_reg)=data)
#define get_DDC4_DDC_EDID_SRAM_READ_AUX_reg   (*((volatile unsigned int*) DDC4_DDC_EDID_SRAM_READ_AUX_reg))
#define DDC4_DDC_EDID_SRAM_READ_AUX_inst_adr                                         "0x00DD"
#define DDC4_DDC_EDID_SRAM_READ_AUX_inst                                             0x00DD
#define DDC4_DDC_EDID_SRAM_READ_AUX_START_shift                                      (1)
#define DDC4_DDC_EDID_SRAM_READ_AUX_START_mask                                       (0x00000002)
#define DDC4_DDC_EDID_SRAM_READ_AUX_START(data)                                      (0x00000002&((data)<<1))
#define DDC4_DDC_EDID_SRAM_READ_AUX_START_src(data)                                  ((0x00000002&(data))>>1)
#define DDC4_DDC_EDID_SRAM_READ_AUX_get_START(data)                                  ((0x00000002&(data))>>1)
#define DDC4_DDC_EDID_SRAM_READ_AUX_STOP_shift                                       (0)
#define DDC4_DDC_EDID_SRAM_READ_AUX_STOP_mask                                        (0x00000001)
#define DDC4_DDC_EDID_SRAM_READ_AUX_STOP(data)                                       (0x00000001&((data)<<0))
#define DDC4_DDC_EDID_SRAM_READ_AUX_STOP_src(data)                                   ((0x00000001&(data))>>0)
#define DDC4_DDC_EDID_SRAM_READ_AUX_get_STOP(data)                                   ((0x00000001&(data))>>0)


#define DDC4_DDC_BIST_MODE                                                           0x1801BF78
#define DDC4_DDC_BIST_MODE_reg_addr                                                  "0xB801BF78"
#define DDC4_DDC_BIST_MODE_reg                                                       0xB801BF78
#define set_DDC4_DDC_BIST_MODE_reg(data)   (*((volatile unsigned int*) DDC4_DDC_BIST_MODE_reg)=data)
#define get_DDC4_DDC_BIST_MODE_reg   (*((volatile unsigned int*) DDC4_DDC_BIST_MODE_reg))
#define DDC4_DDC_BIST_MODE_inst_adr                                                  "0x00DE"
#define DDC4_DDC_BIST_MODE_inst                                                      0x00DE
#define DDC4_DDC_BIST_MODE_DDC_BIST_MODE_shift                                       (0)
#define DDC4_DDC_BIST_MODE_DDC_BIST_MODE_mask                                        (0x00000001)
#define DDC4_DDC_BIST_MODE_DDC_BIST_MODE(data)                                       (0x00000001&((data)<<0))
#define DDC4_DDC_BIST_MODE_DDC_BIST_MODE_src(data)                                   ((0x00000001&(data))>>0)
#define DDC4_DDC_BIST_MODE_get_DDC_BIST_MODE(data)                                   ((0x00000001&(data))>>0)


#define DDC4_DDC_BIST_DONE                                                           0x1801BF7C
#define DDC4_DDC_BIST_DONE_reg_addr                                                  "0xB801BF7C"
#define DDC4_DDC_BIST_DONE_reg                                                       0xB801BF7C
#define set_DDC4_DDC_BIST_DONE_reg(data)   (*((volatile unsigned int*) DDC4_DDC_BIST_DONE_reg)=data)
#define get_DDC4_DDC_BIST_DONE_reg   (*((volatile unsigned int*) DDC4_DDC_BIST_DONE_reg))
#define DDC4_DDC_BIST_DONE_inst_adr                                                  "0x00DF"
#define DDC4_DDC_BIST_DONE_inst                                                      0x00DF
#define DDC4_DDC_BIST_DONE_DDC_BIST_DONE_shift                                       (0)
#define DDC4_DDC_BIST_DONE_DDC_BIST_DONE_mask                                        (0x00000001)
#define DDC4_DDC_BIST_DONE_DDC_BIST_DONE(data)                                       (0x00000001&((data)<<0))
#define DDC4_DDC_BIST_DONE_DDC_BIST_DONE_src(data)                                   ((0x00000001&(data))>>0)
#define DDC4_DDC_BIST_DONE_get_DDC_BIST_DONE(data)                                   ((0x00000001&(data))>>0)


#define DDC4_DDC_BIST_FAIL                                                           0x1801BF80
#define DDC4_DDC_BIST_FAIL_reg_addr                                                  "0xB801BF80"
#define DDC4_DDC_BIST_FAIL_reg                                                       0xB801BF80
#define set_DDC4_DDC_BIST_FAIL_reg(data)   (*((volatile unsigned int*) DDC4_DDC_BIST_FAIL_reg)=data)
#define get_DDC4_DDC_BIST_FAIL_reg   (*((volatile unsigned int*) DDC4_DDC_BIST_FAIL_reg))
#define DDC4_DDC_BIST_FAIL_inst_adr                                                  "0x00E0"
#define DDC4_DDC_BIST_FAIL_inst                                                      0x00E0
#define DDC4_DDC_BIST_FAIL_DDC_BIST_FAIL_shift                                       (0)
#define DDC4_DDC_BIST_FAIL_DDC_BIST_FAIL_mask                                        (0x00000001)
#define DDC4_DDC_BIST_FAIL_DDC_BIST_FAIL(data)                                       (0x00000001&((data)<<0))
#define DDC4_DDC_BIST_FAIL_DDC_BIST_FAIL_src(data)                                   ((0x00000001&(data))>>0)
#define DDC4_DDC_BIST_FAIL_get_DDC_BIST_FAIL(data)                                   ((0x00000001&(data))>>0)


#define DDC4_DDC_DRF_MODE                                                            0x1801BF84
#define DDC4_DDC_DRF_MODE_reg_addr                                                   "0xB801BF84"
#define DDC4_DDC_DRF_MODE_reg                                                        0xB801BF84
#define set_DDC4_DDC_DRF_MODE_reg(data)   (*((volatile unsigned int*) DDC4_DDC_DRF_MODE_reg)=data)
#define get_DDC4_DDC_DRF_MODE_reg   (*((volatile unsigned int*) DDC4_DDC_DRF_MODE_reg))
#define DDC4_DDC_DRF_MODE_inst_adr                                                   "0x00E1"
#define DDC4_DDC_DRF_MODE_inst                                                       0x00E1
#define DDC4_DDC_DRF_MODE_DDC_DRF_MODE_shift                                         (0)
#define DDC4_DDC_DRF_MODE_DDC_DRF_MODE_mask                                          (0x00000001)
#define DDC4_DDC_DRF_MODE_DDC_DRF_MODE(data)                                         (0x00000001&((data)<<0))
#define DDC4_DDC_DRF_MODE_DDC_DRF_MODE_src(data)                                     ((0x00000001&(data))>>0)
#define DDC4_DDC_DRF_MODE_get_DDC_DRF_MODE(data)                                     ((0x00000001&(data))>>0)


#define DDC4_DDC_DRF_RESUME                                                          0x1801BF88
#define DDC4_DDC_DRF_RESUME_reg_addr                                                 "0xB801BF88"
#define DDC4_DDC_DRF_RESUME_reg                                                      0xB801BF88
#define set_DDC4_DDC_DRF_RESUME_reg(data)   (*((volatile unsigned int*) DDC4_DDC_DRF_RESUME_reg)=data)
#define get_DDC4_DDC_DRF_RESUME_reg   (*((volatile unsigned int*) DDC4_DDC_DRF_RESUME_reg))
#define DDC4_DDC_DRF_RESUME_inst_adr                                                 "0x00E2"
#define DDC4_DDC_DRF_RESUME_inst                                                     0x00E2
#define DDC4_DDC_DRF_RESUME_DDC_DRF_RESUME_shift                                     (0)
#define DDC4_DDC_DRF_RESUME_DDC_DRF_RESUME_mask                                      (0x00000001)
#define DDC4_DDC_DRF_RESUME_DDC_DRF_RESUME(data)                                     (0x00000001&((data)<<0))
#define DDC4_DDC_DRF_RESUME_DDC_DRF_RESUME_src(data)                                 ((0x00000001&(data))>>0)
#define DDC4_DDC_DRF_RESUME_get_DDC_DRF_RESUME(data)                                 ((0x00000001&(data))>>0)


#define DDC4_DDC_DRF_DONE                                                            0x1801BF8C
#define DDC4_DDC_DRF_DONE_reg_addr                                                   "0xB801BF8C"
#define DDC4_DDC_DRF_DONE_reg                                                        0xB801BF8C
#define set_DDC4_DDC_DRF_DONE_reg(data)   (*((volatile unsigned int*) DDC4_DDC_DRF_DONE_reg)=data)
#define get_DDC4_DDC_DRF_DONE_reg   (*((volatile unsigned int*) DDC4_DDC_DRF_DONE_reg))
#define DDC4_DDC_DRF_DONE_inst_adr                                                   "0x00E3"
#define DDC4_DDC_DRF_DONE_inst                                                       0x00E3
#define DDC4_DDC_DRF_DONE_DDC_DRF_DONE_shift                                         (0)
#define DDC4_DDC_DRF_DONE_DDC_DRF_DONE_mask                                          (0x00000001)
#define DDC4_DDC_DRF_DONE_DDC_DRF_DONE(data)                                         (0x00000001&((data)<<0))
#define DDC4_DDC_DRF_DONE_DDC_DRF_DONE_src(data)                                     ((0x00000001&(data))>>0)
#define DDC4_DDC_DRF_DONE_get_DDC_DRF_DONE(data)                                     ((0x00000001&(data))>>0)


#define DDC4_DDC_DRF_PAUSE                                                           0x1801BF90
#define DDC4_DDC_DRF_PAUSE_reg_addr                                                  "0xB801BF90"
#define DDC4_DDC_DRF_PAUSE_reg                                                       0xB801BF90
#define set_DDC4_DDC_DRF_PAUSE_reg(data)   (*((volatile unsigned int*) DDC4_DDC_DRF_PAUSE_reg)=data)
#define get_DDC4_DDC_DRF_PAUSE_reg   (*((volatile unsigned int*) DDC4_DDC_DRF_PAUSE_reg))
#define DDC4_DDC_DRF_PAUSE_inst_adr                                                  "0x00E4"
#define DDC4_DDC_DRF_PAUSE_inst                                                      0x00E4
#define DDC4_DDC_DRF_PAUSE_DDC_DRF_PAUSE_shift                                       (0)
#define DDC4_DDC_DRF_PAUSE_DDC_DRF_PAUSE_mask                                        (0x00000001)
#define DDC4_DDC_DRF_PAUSE_DDC_DRF_PAUSE(data)                                       (0x00000001&((data)<<0))
#define DDC4_DDC_DRF_PAUSE_DDC_DRF_PAUSE_src(data)                                   ((0x00000001&(data))>>0)
#define DDC4_DDC_DRF_PAUSE_get_DDC_DRF_PAUSE(data)                                   ((0x00000001&(data))>>0)


#define DDC4_DDC_DRF_FAIL                                                            0x1801BF94
#define DDC4_DDC_DRF_FAIL_reg_addr                                                   "0xB801BF94"
#define DDC4_DDC_DRF_FAIL_reg                                                        0xB801BF94
#define set_DDC4_DDC_DRF_FAIL_reg(data)   (*((volatile unsigned int*) DDC4_DDC_DRF_FAIL_reg)=data)
#define get_DDC4_DDC_DRF_FAIL_reg   (*((volatile unsigned int*) DDC4_DDC_DRF_FAIL_reg))
#define DDC4_DDC_DRF_FAIL_inst_adr                                                   "0x00E5"
#define DDC4_DDC_DRF_FAIL_inst                                                       0x00E5
#define DDC4_DDC_DRF_FAIL_DDC_DRF_FAIL_shift                                         (0)
#define DDC4_DDC_DRF_FAIL_DDC_DRF_FAIL_mask                                          (0x00000001)
#define DDC4_DDC_DRF_FAIL_DDC_DRF_FAIL(data)                                         (0x00000001&((data)<<0))
#define DDC4_DDC_DRF_FAIL_DDC_DRF_FAIL_src(data)                                     ((0x00000001&(data))>>0)
#define DDC4_DDC_DRF_FAIL_get_DDC_DRF_FAIL(data)                                     ((0x00000001&(data))>>0)


#define DDC5_I2C_CR                                                                  0x1801BB00
#define DDC5_I2C_CR_reg_addr                                                         "0xB801BB00"
#define DDC5_I2C_CR_reg                                                              0xB801BB00
#define set_DDC5_I2C_CR_reg(data)   (*((volatile unsigned int*) DDC5_I2C_CR_reg)=data)
#define get_DDC5_I2C_CR_reg   (*((volatile unsigned int*) DDC5_I2C_CR_reg))
#define DDC5_I2C_CR_inst_adr                                                         "0x00C0"
#define DDC5_I2C_CR_inst                                                             0x00C0
#define DDC5_I2C_CR_CMDERR_IE_shift                                                  (7)
#define DDC5_I2C_CR_CMDERR_IE_mask                                                   (0x00000080)
#define DDC5_I2C_CR_CMDERR_IE(data)                                                  (0x00000080&((data)<<7))
#define DDC5_I2C_CR_CMDERR_IE_src(data)                                              ((0x00000080&(data))>>7)
#define DDC5_I2C_CR_get_CMDERR_IE(data)                                              ((0x00000080&(data))>>7)
#define DDC5_I2C_CR_TIMEOUT_EN_shift                                                 (6)
#define DDC5_I2C_CR_TIMEOUT_EN_mask                                                  (0x00000040)
#define DDC5_I2C_CR_TIMEOUT_EN(data)                                                 (0x00000040&((data)<<6))
#define DDC5_I2C_CR_TIMEOUT_EN_src(data)                                             ((0x00000040&(data))>>6)
#define DDC5_I2C_CR_get_TIMEOUT_EN(data)                                             ((0x00000040&(data))>>6)
#define DDC5_I2C_CR_DEBOUNCE_MODE_shift                                              (4)
#define DDC5_I2C_CR_DEBOUNCE_MODE_mask                                               (0x00000030)
#define DDC5_I2C_CR_DEBOUNCE_MODE(data)                                              (0x00000030&((data)<<4))
#define DDC5_I2C_CR_DEBOUNCE_MODE_src(data)                                          ((0x00000030&(data))>>4)
#define DDC5_I2C_CR_get_DEBOUNCE_MODE(data)                                          ((0x00000030&(data))>>4)
#define DDC5_I2C_CR_TIMEOUT_IE_shift                                                 (3)
#define DDC5_I2C_CR_TIMEOUT_IE_mask                                                  (0x00000008)
#define DDC5_I2C_CR_TIMEOUT_IE(data)                                                 (0x00000008&((data)<<3))
#define DDC5_I2C_CR_TIMEOUT_IE_src(data)                                             ((0x00000008&(data))>>3)
#define DDC5_I2C_CR_get_TIMEOUT_IE(data)                                             ((0x00000008&(data))>>3)
#define DDC5_I2C_CR_RETIME_M_shift                                                   (0)
#define DDC5_I2C_CR_RETIME_M_mask                                                    (0x00000007)
#define DDC5_I2C_CR_RETIME_M(data)                                                   (0x00000007&((data)<<0))
#define DDC5_I2C_CR_RETIME_M_src(data)                                               ((0x00000007&(data))>>0)
#define DDC5_I2C_CR_get_RETIME_M(data)                                               ((0x00000007&(data))>>0)


#define DDC5_I2C_SR1                                                                 0x1801BB04
#define DDC5_I2C_SR1_reg_addr                                                        "0xB801BB04"
#define DDC5_I2C_SR1_reg                                                             0xB801BB04
#define set_DDC5_I2C_SR1_reg(data)   (*((volatile unsigned int*) DDC5_I2C_SR1_reg)=data)
#define get_DDC5_I2C_SR1_reg   (*((volatile unsigned int*) DDC5_I2C_SR1_reg))
#define DDC5_I2C_SR1_inst_adr                                                        "0x00C1"
#define DDC5_I2C_SR1_inst                                                            0x00C1
#define DDC5_I2C_SR1_CMDERR_shift                                                    (7)
#define DDC5_I2C_SR1_CMDERR_mask                                                     (0x00000080)
#define DDC5_I2C_SR1_CMDERR(data)                                                    (0x00000080&((data)<<7))
#define DDC5_I2C_SR1_CMDERR_src(data)                                                ((0x00000080&(data))>>7)
#define DDC5_I2C_SR1_get_CMDERR(data)                                                ((0x00000080&(data))>>7)
#define DDC5_I2C_SR1_Finish_shift                                                    (4)
#define DDC5_I2C_SR1_Finish_mask                                                     (0x00000010)
#define DDC5_I2C_SR1_Finish(data)                                                    (0x00000010&((data)<<4))
#define DDC5_I2C_SR1_Finish_src(data)                                                ((0x00000010&(data))>>4)
#define DDC5_I2C_SR1_get_Finish(data)                                                ((0x00000010&(data))>>4)
#define DDC5_I2C_SR1_timeout_shift                                                   (3)
#define DDC5_I2C_SR1_timeout_mask                                                    (0x00000008)
#define DDC5_I2C_SR1_timeout(data)                                                   (0x00000008&((data)<<3))
#define DDC5_I2C_SR1_timeout_src(data)                                               ((0x00000008&(data))>>3)
#define DDC5_I2C_SR1_get_timeout(data)                                               ((0x00000008&(data))>>3)


#define DDC5_I2C_TR                                                                  0x1801BB08
#define DDC5_I2C_TR_reg_addr                                                         "0xB801BB08"
#define DDC5_I2C_TR_reg                                                              0xB801BB08
#define set_DDC5_I2C_TR_reg(data)   (*((volatile unsigned int*) DDC5_I2C_TR_reg)=data)
#define get_DDC5_I2C_TR_reg   (*((volatile unsigned int*) DDC5_I2C_TR_reg))
#define DDC5_I2C_TR_inst_adr                                                         "0x00C2"
#define DDC5_I2C_TR_inst                                                             0x00C2
#define DDC5_I2C_TR_timeout_val_shift                                                (0)
#define DDC5_I2C_TR_timeout_val_mask                                                 (0x000000FF)
#define DDC5_I2C_TR_timeout_val(data)                                                (0x000000FF&((data)<<0))
#define DDC5_I2C_TR_timeout_val_src(data)                                            ((0x000000FF&(data))>>0)
#define DDC5_I2C_TR_get_timeout_val(data)                                            ((0x000000FF&(data))>>0)


#define DDC5_EDID_CR                                                                 0x1801BB0C
#define DDC5_EDID_CR_reg_addr                                                        "0xB801BB0C"
#define DDC5_EDID_CR_reg                                                             0xB801BB0C
#define set_DDC5_EDID_CR_reg(data)   (*((volatile unsigned int*) DDC5_EDID_CR_reg)=data)
#define get_DDC5_EDID_CR_reg   (*((volatile unsigned int*) DDC5_EDID_CR_reg))
#define DDC5_EDID_CR_inst_adr                                                        "0x00C3"
#define DDC5_EDID_CR_inst                                                            0x00C3
#define DDC5_EDID_CR_EDID_ADDRESS_shift                                              (5)
#define DDC5_EDID_CR_EDID_ADDRESS_mask                                               (0x000000E0)
#define DDC5_EDID_CR_EDID_ADDRESS(data)                                              (0x000000E0&((data)<<5))
#define DDC5_EDID_CR_EDID_ADDRESS_src(data)                                          ((0x000000E0&(data))>>5)
#define DDC5_EDID_CR_get_EDID_ADDRESS(data)                                          ((0x000000E0&(data))>>5)
#define DDC5_EDID_CR_FINISH_INT_EN_shift                                             (4)
#define DDC5_EDID_CR_FINISH_INT_EN_mask                                              (0x00000010)
#define DDC5_EDID_CR_FINISH_INT_EN(data)                                             (0x00000010&((data)<<4))
#define DDC5_EDID_CR_FINISH_INT_EN_src(data)                                         ((0x00000010&(data))>>4)
#define DDC5_EDID_CR_get_FINISH_INT_EN(data)                                         ((0x00000010&(data))>>4)
#define DDC5_EDID_CR_DDC1_FORCE_shift                                                (3)
#define DDC5_EDID_CR_DDC1_FORCE_mask                                                 (0x00000008)
#define DDC5_EDID_CR_DDC1_FORCE(data)                                                (0x00000008&((data)<<3))
#define DDC5_EDID_CR_DDC1_FORCE_src(data)                                            ((0x00000008&(data))>>3)
#define DDC5_EDID_CR_get_DDC1_FORCE(data)                                            ((0x00000008&(data))>>3)
#define DDC5_EDID_CR_DDC2B_FORCE_shift                                               (2)
#define DDC5_EDID_CR_DDC2B_FORCE_mask                                                (0x00000004)
#define DDC5_EDID_CR_DDC2B_FORCE(data)                                               (0x00000004&((data)<<2))
#define DDC5_EDID_CR_DDC2B_FORCE_src(data)                                           ((0x00000004&(data))>>2)
#define DDC5_EDID_CR_get_DDC2B_FORCE(data)                                           ((0x00000004&(data))>>2)
#define DDC5_EDID_CR_EDID_SRWEN_shift                                                (1)
#define DDC5_EDID_CR_EDID_SRWEN_mask                                                 (0x00000002)
#define DDC5_EDID_CR_EDID_SRWEN(data)                                                (0x00000002&((data)<<1))
#define DDC5_EDID_CR_EDID_SRWEN_src(data)                                            ((0x00000002&(data))>>1)
#define DDC5_EDID_CR_get_EDID_SRWEN(data)                                            ((0x00000002&(data))>>1)
#define DDC5_EDID_CR_EDID_EN_shift                                                   (0)
#define DDC5_EDID_CR_EDID_EN_mask                                                    (0x00000001)
#define DDC5_EDID_CR_EDID_EN(data)                                                   (0x00000001&((data)<<0))
#define DDC5_EDID_CR_EDID_EN_src(data)                                               ((0x00000001&(data))>>0)
#define DDC5_EDID_CR_get_EDID_EN(data)                                               ((0x00000001&(data))>>0)


#define DDC5_DDC_VCR                                                                 0x1801BB10
#define DDC5_DDC_VCR_reg_addr                                                        "0xB801BB10"
#define DDC5_DDC_VCR_reg                                                             0xB801BB10
#define set_DDC5_DDC_VCR_reg(data)   (*((volatile unsigned int*) DDC5_DDC_VCR_reg)=data)
#define get_DDC5_DDC_VCR_reg   (*((volatile unsigned int*) DDC5_DDC_VCR_reg))
#define DDC5_DDC_VCR_inst_adr                                                        "0x00C4"
#define DDC5_DDC_VCR_inst                                                            0x00C4
#define DDC5_DDC_VCR_DDC1_VCount_shift                                               (0)
#define DDC5_DDC_VCR_DDC1_VCount_mask                                                (0x000000FF)
#define DDC5_DDC_VCR_DDC1_VCount(data)                                               (0x000000FF&((data)<<0))
#define DDC5_DDC_VCR_DDC1_VCount_src(data)                                           ((0x000000FF&(data))>>0)
#define DDC5_DDC_VCR_get_DDC1_VCount(data)                                           ((0x000000FF&(data))>>0)


#define DDC5_EDID_IMSWSAR                                                            0x1801BB14
#define DDC5_EDID_IMSWSAR_reg_addr                                                   "0xB801BB14"
#define DDC5_EDID_IMSWSAR_reg                                                        0xB801BB14
#define set_DDC5_EDID_IMSWSAR_reg(data)   (*((volatile unsigned int*) DDC5_EDID_IMSWSAR_reg)=data)
#define get_DDC5_EDID_IMSWSAR_reg   (*((volatile unsigned int*) DDC5_EDID_IMSWSAR_reg))
#define DDC5_EDID_IMSWSAR_inst_adr                                                   "0x00C5"
#define DDC5_EDID_IMSWSAR_inst                                                       0x00C5
#define DDC5_EDID_IMSWSAR_EDID_SADR_shift                                            (0)
#define DDC5_EDID_IMSWSAR_EDID_SADR_mask                                             (0x000000FF)
#define DDC5_EDID_IMSWSAR_EDID_SADR(data)                                            (0x000000FF&((data)<<0))
#define DDC5_EDID_IMSWSAR_EDID_SADR_src(data)                                        ((0x000000FF&(data))>>0)
#define DDC5_EDID_IMSWSAR_get_EDID_SADR(data)                                        ((0x000000FF&(data))>>0)


#define DDC5_EDID_IMSWEAR                                                            0x1801BB18
#define DDC5_EDID_IMSWEAR_reg_addr                                                   "0xB801BB18"
#define DDC5_EDID_IMSWEAR_reg                                                        0xB801BB18
#define set_DDC5_EDID_IMSWEAR_reg(data)   (*((volatile unsigned int*) DDC5_EDID_IMSWEAR_reg)=data)
#define get_DDC5_EDID_IMSWEAR_reg   (*((volatile unsigned int*) DDC5_EDID_IMSWEAR_reg))
#define DDC5_EDID_IMSWEAR_inst_adr                                                   "0x00C6"
#define DDC5_EDID_IMSWEAR_inst                                                       0x00C6
#define DDC5_EDID_IMSWEAR_EDID_EADR_shift                                            (0)
#define DDC5_EDID_IMSWEAR_EDID_EADR_mask                                             (0x000000FF)
#define DDC5_EDID_IMSWEAR_EDID_EADR(data)                                            (0x000000FF&((data)<<0))
#define DDC5_EDID_IMSWEAR_EDID_EADR_src(data)                                        ((0x000000FF&(data))>>0)
#define DDC5_EDID_IMSWEAR_get_EDID_EADR(data)                                        ((0x000000FF&(data))>>0)


#define DDC5_EDID_IR                                                                 0x1801BB1C
#define DDC5_EDID_IR_reg_addr                                                        "0xB801BB1C"
#define DDC5_EDID_IR_reg                                                             0xB801BB1C
#define set_DDC5_EDID_IR_reg(data)   (*((volatile unsigned int*) DDC5_EDID_IR_reg)=data)
#define get_DDC5_EDID_IR_reg   (*((volatile unsigned int*) DDC5_EDID_IR_reg))
#define DDC5_EDID_IR_inst_adr                                                        "0x00C7"
#define DDC5_EDID_IR_inst                                                            0x00C7
#define DDC5_EDID_IR_EDIDMODE_shift                                                  (6)
#define DDC5_EDID_IR_EDIDMODE_mask                                                   (0x00000040)
#define DDC5_EDID_IR_EDIDMODE(data)                                                  (0x00000040&((data)<<6))
#define DDC5_EDID_IR_EDIDMODE_src(data)                                              ((0x00000040&(data))>>6)
#define DDC5_EDID_IR_get_EDIDMODE(data)                                              ((0x00000040&(data))>>6)
#define DDC5_EDID_IR_EDIDSUBADDRESS_shift                                            (5)
#define DDC5_EDID_IR_EDIDSUBADDRESS_mask                                             (0x00000020)
#define DDC5_EDID_IR_EDIDSUBADDRESS(data)                                            (0x00000020&((data)<<5))
#define DDC5_EDID_IR_EDIDSUBADDRESS_src(data)                                        ((0x00000020&(data))>>5)
#define DDC5_EDID_IR_get_EDIDSUBADDRESS(data)                                        ((0x00000020&(data))>>5)
#define DDC5_EDID_IR_EDIDSTOP_shift                                                  (4)
#define DDC5_EDID_IR_EDIDSTOP_mask                                                   (0x00000010)
#define DDC5_EDID_IR_EDIDSTOP(data)                                                  (0x00000010&((data)<<4))
#define DDC5_EDID_IR_EDIDSTOP_src(data)                                              ((0x00000010&(data))>>4)
#define DDC5_EDID_IR_get_EDIDSTOP(data)                                              ((0x00000010&(data))>>4)
#define DDC5_EDID_IR_I2C_M_RD_ST_IE_shift                                            (3)
#define DDC5_EDID_IR_I2C_M_RD_ST_IE_mask                                             (0x00000008)
#define DDC5_EDID_IR_I2C_M_RD_ST_IE(data)                                            (0x00000008&((data)<<3))
#define DDC5_EDID_IR_I2C_M_RD_ST_IE_src(data)                                        ((0x00000008&(data))>>3)
#define DDC5_EDID_IR_get_I2C_M_RD_ST_IE(data)                                        ((0x00000008&(data))>>3)
#define DDC5_EDID_IR_I2C_M_RD_SP_IE_shift                                            (2)
#define DDC5_EDID_IR_I2C_M_RD_SP_IE_mask                                             (0x00000004)
#define DDC5_EDID_IR_I2C_M_RD_SP_IE(data)                                            (0x00000004&((data)<<2))
#define DDC5_EDID_IR_I2C_M_RD_SP_IE_src(data)                                        ((0x00000004&(data))>>2)
#define DDC5_EDID_IR_get_I2C_M_RD_SP_IE(data)                                        ((0x00000004&(data))>>2)
#define DDC5_EDID_IR_EDIDSUBADDRESS_IE_shift                                         (1)
#define DDC5_EDID_IR_EDIDSUBADDRESS_IE_mask                                          (0x00000002)
#define DDC5_EDID_IR_EDIDSUBADDRESS_IE(data)                                         (0x00000002&((data)<<1))
#define DDC5_EDID_IR_EDIDSUBADDRESS_IE_src(data)                                     ((0x00000002&(data))>>1)
#define DDC5_EDID_IR_get_EDIDSUBADDRESS_IE(data)                                     ((0x00000002&(data))>>1)
#define DDC5_EDID_IR_EDIDSTOP_IE_shift                                               (0)
#define DDC5_EDID_IR_EDIDSTOP_IE_mask                                                (0x00000001)
#define DDC5_EDID_IR_EDIDSTOP_IE(data)                                               (0x00000001&((data)<<0))
#define DDC5_EDID_IR_EDIDSTOP_IE_src(data)                                           ((0x00000001&(data))>>0)
#define DDC5_EDID_IR_get_EDIDSTOP_IE(data)                                           ((0x00000001&(data))>>0)


#define DDC5_DDC_SIR                                                                 0x1801BB20
#define DDC5_DDC_SIR_reg_addr                                                        "0xB801BB20"
#define DDC5_DDC_SIR_reg                                                             0xB801BB20
#define set_DDC5_DDC_SIR_reg(data)   (*((volatile unsigned int*) DDC5_DDC_SIR_reg)=data)
#define get_DDC5_DDC_SIR_reg   (*((volatile unsigned int*) DDC5_DDC_SIR_reg))
#define DDC5_DDC_SIR_inst_adr                                                        "0x00C8"
#define DDC5_DDC_SIR_inst                                                            0x00C8
#define DDC5_DDC_SIR_EDIDAP_shift                                                    (0)
#define DDC5_DDC_SIR_EDIDAP_mask                                                     (0x000000FF)
#define DDC5_DDC_SIR_EDIDAP(data)                                                    (0x000000FF&((data)<<0))
#define DDC5_DDC_SIR_EDIDAP_src(data)                                                ((0x000000FF&(data))>>0)
#define DDC5_DDC_SIR_get_EDIDAP(data)                                                ((0x000000FF&(data))>>0)


#define DDC5_DDC_SAP                                                                 0x1801BB24
#define DDC5_DDC_SAP_reg_addr                                                        "0xB801BB24"
#define DDC5_DDC_SAP_reg                                                             0xB801BB24
#define set_DDC5_DDC_SAP_reg(data)   (*((volatile unsigned int*) DDC5_DDC_SAP_reg)=data)
#define get_DDC5_DDC_SAP_reg   (*((volatile unsigned int*) DDC5_DDC_SAP_reg))
#define DDC5_DDC_SAP_inst_adr                                                        "0x00C9"
#define DDC5_DDC_SAP_inst                                                            0x00C9
#define DDC5_DDC_SAP_EDIDDP_shift                                                    (0)
#define DDC5_DDC_SAP_EDIDDP_mask                                                     (0x000000FF)
#define DDC5_DDC_SAP_EDIDDP(data)                                                    (0x000000FF&((data)<<0))
#define DDC5_DDC_SAP_EDIDDP_src(data)                                                ((0x000000FF&(data))>>0)
#define DDC5_DDC_SAP_get_EDIDDP(data)                                                ((0x000000FF&(data))>>0)


#define DDC5_DDC_BISTCR                                                              0x1801BB28
#define DDC5_DDC_BISTCR_reg_addr                                                     "0xB801BB28"
#define DDC5_DDC_BISTCR_reg                                                          0xB801BB28
#define set_DDC5_DDC_BISTCR_reg(data)   (*((volatile unsigned int*) DDC5_DDC_BISTCR_reg)=data)
#define get_DDC5_DDC_BISTCR_reg   (*((volatile unsigned int*) DDC5_DDC_BISTCR_reg))
#define DDC5_DDC_BISTCR_inst_adr                                                     "0x00CA"
#define DDC5_DDC_BISTCR_inst                                                         0x00CA
#define DDC5_DDC_BISTCR_DDC_BIST_RME_shift                                           (4)
#define DDC5_DDC_BISTCR_DDC_BIST_RME_mask                                            (0x00000010)
#define DDC5_DDC_BISTCR_DDC_BIST_RME(data)                                           (0x00000010&((data)<<4))
#define DDC5_DDC_BISTCR_DDC_BIST_RME_src(data)                                       ((0x00000010&(data))>>4)
#define DDC5_DDC_BISTCR_get_DDC_BIST_RME(data)                                       ((0x00000010&(data))>>4)
#define DDC5_DDC_BISTCR_DDC_BIST_RM_shift                                            (0)
#define DDC5_DDC_BISTCR_DDC_BIST_RM_mask                                             (0x0000000F)
#define DDC5_DDC_BISTCR_DDC_BIST_RM(data)                                            (0x0000000F&((data)<<0))
#define DDC5_DDC_BISTCR_DDC_BIST_RM_src(data)                                        ((0x0000000F&(data))>>0)
#define DDC5_DDC_BISTCR_get_DDC_BIST_RM(data)                                        ((0x0000000F&(data))>>0)


#define DDC5_DDC_SCR                                                                 0x1801BB2C
#define DDC5_DDC_SCR_reg_addr                                                        "0xB801BB2C"
#define DDC5_DDC_SCR_reg                                                             0xB801BB2C
#define set_DDC5_DDC_SCR_reg(data)   (*((volatile unsigned int*) DDC5_DDC_SCR_reg)=data)
#define get_DDC5_DDC_SCR_reg   (*((volatile unsigned int*) DDC5_DDC_SCR_reg))
#define DDC5_DDC_SCR_inst_adr                                                        "0x00CB"
#define DDC5_DDC_SCR_inst                                                            0x00CB
#define DDC5_DDC_SCR_SEGPT_LATIE_shift                                               (7)
#define DDC5_DDC_SCR_SEGPT_LATIE_mask                                                (0x00000080)
#define DDC5_DDC_SCR_SEGPT_LATIE(data)                                               (0x00000080&((data)<<7))
#define DDC5_DDC_SCR_SEGPT_LATIE_src(data)                                           ((0x00000080&(data))>>7)
#define DDC5_DDC_SCR_get_SEGPT_LATIE(data)                                           ((0x00000080&(data))>>7)
#define DDC5_DDC_SCR_Dataoutputdelay_sel_shift                                       (4)
#define DDC5_DDC_SCR_Dataoutputdelay_sel_mask                                        (0x00000070)
#define DDC5_DDC_SCR_Dataoutputdelay_sel(data)                                       (0x00000070&((data)<<4))
#define DDC5_DDC_SCR_Dataoutputdelay_sel_src(data)                                   ((0x00000070&(data))>>4)
#define DDC5_DDC_SCR_get_Dataoutputdelay_sel(data)                                   ((0x00000070&(data))>>4)
#define DDC5_DDC_SCR_I2C_M_RD_ST_STS_shift                                           (2)
#define DDC5_DDC_SCR_I2C_M_RD_ST_STS_mask                                            (0x00000004)
#define DDC5_DDC_SCR_I2C_M_RD_ST_STS(data)                                           (0x00000004&((data)<<2))
#define DDC5_DDC_SCR_I2C_M_RD_ST_STS_src(data)                                       ((0x00000004&(data))>>2)
#define DDC5_DDC_SCR_get_I2C_M_RD_ST_STS(data)                                       ((0x00000004&(data))>>2)
#define DDC5_DDC_SCR_I2C_M_RD_SP_STS_shift                                           (1)
#define DDC5_DDC_SCR_I2C_M_RD_SP_STS_mask                                            (0x00000002)
#define DDC5_DDC_SCR_I2C_M_RD_SP_STS(data)                                           (0x00000002&((data)<<1))
#define DDC5_DDC_SCR_I2C_M_RD_SP_STS_src(data)                                       ((0x00000002&(data))>>1)
#define DDC5_DDC_SCR_get_I2C_M_RD_SP_STS(data)                                       ((0x00000002&(data))>>1)
#define DDC5_DDC_SCR_SGID_EN_shift                                                   (0)
#define DDC5_DDC_SCR_SGID_EN_mask                                                    (0x00000001)
#define DDC5_DDC_SCR_SGID_EN(data)                                                   (0x00000001&((data)<<0))
#define DDC5_DDC_SCR_SGID_EN_src(data)                                               ((0x00000001&(data))>>0)
#define DDC5_DDC_SCR_get_SGID_EN(data)                                               ((0x00000001&(data))>>0)


#define DDC5_DDC_SSAR                                                                0x1801BB30
#define DDC5_DDC_SSAR_reg_addr                                                       "0xB801BB30"
#define DDC5_DDC_SSAR_reg                                                            0xB801BB30
#define set_DDC5_DDC_SSAR_reg(data)   (*((volatile unsigned int*) DDC5_DDC_SSAR_reg)=data)
#define get_DDC5_DDC_SSAR_reg   (*((volatile unsigned int*) DDC5_DDC_SSAR_reg))
#define DDC5_DDC_SSAR_inst_adr                                                       "0x00CC"
#define DDC5_DDC_SSAR_inst                                                           0x00CC
#define DDC5_DDC_SSAR_SGID_ADDRESS_shift                                             (1)
#define DDC5_DDC_SSAR_SGID_ADDRESS_mask                                              (0x000000FE)
#define DDC5_DDC_SSAR_SGID_ADDRESS(data)                                             (0x000000FE&((data)<<1))
#define DDC5_DDC_SSAR_SGID_ADDRESS_src(data)                                         ((0x000000FE&(data))>>1)
#define DDC5_DDC_SSAR_get_SGID_ADDRESS(data)                                         ((0x000000FE&(data))>>1)
#define DDC5_DDC_SSAR_SGID_DTRDEN_shift                                              (0)
#define DDC5_DDC_SSAR_SGID_DTRDEN_mask                                               (0x00000001)
#define DDC5_DDC_SSAR_SGID_DTRDEN(data)                                              (0x00000001&((data)<<0))
#define DDC5_DDC_SSAR_SGID_DTRDEN_src(data)                                          ((0x00000001&(data))>>0)
#define DDC5_DDC_SSAR_get_SGID_DTRDEN(data)                                          ((0x00000001&(data))>>0)


#define DDC5_DDC_SPR                                                                 0x1801BB34
#define DDC5_DDC_SPR_reg_addr                                                        "0xB801BB34"
#define DDC5_DDC_SPR_reg                                                             0xB801BB34
#define set_DDC5_DDC_SPR_reg(data)   (*((volatile unsigned int*) DDC5_DDC_SPR_reg)=data)
#define get_DDC5_DDC_SPR_reg   (*((volatile unsigned int*) DDC5_DDC_SPR_reg))
#define DDC5_DDC_SPR_inst_adr                                                        "0x00CD"
#define DDC5_DDC_SPR_inst                                                            0x00CD
#define DDC5_DDC_SPR_SEGPT_LATCHED_shift                                             (7)
#define DDC5_DDC_SPR_SEGPT_LATCHED_mask                                              (0x00000080)
#define DDC5_DDC_SPR_SEGPT_LATCHED(data)                                             (0x00000080&((data)<<7))
#define DDC5_DDC_SPR_SEGPT_LATCHED_src(data)                                         ((0x00000080&(data))>>7)
#define DDC5_DDC_SPR_get_SEGPT_LATCHED(data)                                         ((0x00000080&(data))>>7)
#define DDC5_DDC_SPR_SEG_PT_shift                                                    (0)
#define DDC5_DDC_SPR_SEG_PT_mask                                                     (0x0000007F)
#define DDC5_DDC_SPR_SEG_PT(data)                                                    (0x0000007F&((data)<<0))
#define DDC5_DDC_SPR_SEG_PT_src(data)                                                ((0x0000007F&(data))>>0)
#define DDC5_DDC_SPR_get_SEG_PT(data)                                                ((0x0000007F&(data))>>0)


#define DDC5_DDC_SFCR                                                                0x1801BB38
#define DDC5_DDC_SFCR_reg_addr                                                       "0xB801BB38"
#define DDC5_DDC_SFCR_reg                                                            0xB801BB38
#define set_DDC5_DDC_SFCR_reg(data)   (*((volatile unsigned int*) DDC5_DDC_SFCR_reg)=data)
#define get_DDC5_DDC_SFCR_reg   (*((volatile unsigned int*) DDC5_DDC_SFCR_reg))
#define DDC5_DDC_SFCR_inst_adr                                                       "0x00CE"
#define DDC5_DDC_SFCR_inst                                                           0x00CE
#define DDC5_DDC_SFCR_SPECIAL_MODE_shift                                             (3)
#define DDC5_DDC_SFCR_SPECIAL_MODE_mask                                              (0x00000008)
#define DDC5_DDC_SFCR_SPECIAL_MODE(data)                                             (0x00000008&((data)<<3))
#define DDC5_DDC_SFCR_SPECIAL_MODE_src(data)                                         ((0x00000008&(data))>>3)
#define DDC5_DDC_SFCR_get_SPECIAL_MODE(data)                                         ((0x00000008&(data))>>3)
#define DDC5_DDC_SFCR_DOFFPT_RESET_shift                                             (2)
#define DDC5_DDC_SFCR_DOFFPT_RESET_mask                                              (0x00000004)
#define DDC5_DDC_SFCR_DOFFPT_RESET(data)                                             (0x00000004&((data)<<2))
#define DDC5_DDC_SFCR_DOFFPT_RESET_src(data)                                         ((0x00000004&(data))>>2)
#define DDC5_DDC_SFCR_get_DOFFPT_RESET(data)                                         ((0x00000004&(data))>>2)
#define DDC5_DDC_SFCR_DIFFPT_RESET_shift                                             (1)
#define DDC5_DDC_SFCR_DIFFPT_RESET_mask                                              (0x00000002)
#define DDC5_DDC_SFCR_DIFFPT_RESET(data)                                             (0x00000002&((data)<<1))
#define DDC5_DDC_SFCR_DIFFPT_RESET_src(data)                                         ((0x00000002&(data))>>1)
#define DDC5_DDC_SFCR_get_DIFFPT_RESET(data)                                         ((0x00000002&(data))>>1)
#define DDC5_DDC_SFCR_CIID_EN_shift                                                  (0)
#define DDC5_DDC_SFCR_CIID_EN_mask                                                   (0x00000001)
#define DDC5_DDC_SFCR_CIID_EN(data)                                                  (0x00000001&((data)<<0))
#define DDC5_DDC_SFCR_CIID_EN_src(data)                                              ((0x00000001&(data))>>0)
#define DDC5_DDC_SFCR_get_CIID_EN(data)                                              ((0x00000001&(data))>>0)


#define DDC5_DDC_SFSAR                                                               0x1801BB3C
#define DDC5_DDC_SFSAR_reg_addr                                                      "0xB801BB3C"
#define DDC5_DDC_SFSAR_reg                                                           0xB801BB3C
#define set_DDC5_DDC_SFSAR_reg(data)   (*((volatile unsigned int*) DDC5_DDC_SFSAR_reg)=data)
#define get_DDC5_DDC_SFSAR_reg   (*((volatile unsigned int*) DDC5_DDC_SFSAR_reg))
#define DDC5_DDC_SFSAR_inst_adr                                                      "0x00CF"
#define DDC5_DDC_SFSAR_inst                                                          0x00CF
#define DDC5_DDC_SFSAR_CIID_ADDRESS_shift                                            (1)
#define DDC5_DDC_SFSAR_CIID_ADDRESS_mask                                             (0x000000FE)
#define DDC5_DDC_SFSAR_CIID_ADDRESS(data)                                            (0x000000FE&((data)<<1))
#define DDC5_DDC_SFSAR_CIID_ADDRESS_src(data)                                        ((0x000000FE&(data))>>1)
#define DDC5_DDC_SFSAR_get_CIID_ADDRESS(data)                                        ((0x000000FE&(data))>>1)
#define DDC5_DDC_SFSAR_CIRWS_CURRENT_shift                                           (0)
#define DDC5_DDC_SFSAR_CIRWS_CURRENT_mask                                            (0x00000001)
#define DDC5_DDC_SFSAR_CIRWS_CURRENT(data)                                           (0x00000001&((data)<<0))
#define DDC5_DDC_SFSAR_CIRWS_CURRENT_src(data)                                       ((0x00000001&(data))>>0)
#define DDC5_DDC_SFSAR_get_CIRWS_CURRENT(data)                                       ((0x00000001&(data))>>0)


#define DDC5_DDC_SFDR                                                                0x1801BB40
#define DDC5_DDC_SFDR_reg_addr                                                       "0xB801BB40"
#define DDC5_DDC_SFDR_reg                                                            0xB801BB40
#define set_DDC5_DDC_SFDR_reg(data)   (*((volatile unsigned int*) DDC5_DDC_SFDR_reg)=data)
#define get_DDC5_DDC_SFDR_reg   (*((volatile unsigned int*) DDC5_DDC_SFDR_reg))
#define DDC5_DDC_SFDR_inst_adr                                                       "0x00D0"
#define DDC5_DDC_SFDR_inst                                                           0x00D0
#define DDC5_DDC_SFDR_CIIDDP_shift                                                   (0)
#define DDC5_DDC_SFDR_CIIDDP_mask                                                    (0x000000FF)
#define DDC5_DDC_SFDR_CIIDDP(data)                                                   (0x000000FF&((data)<<0))
#define DDC5_DDC_SFDR_CIIDDP_src(data)                                               ((0x000000FF&(data))>>0)
#define DDC5_DDC_SFDR_get_CIIDDP(data)                                               ((0x000000FF&(data))>>0)


#define DDC5_DDC_SFBSR                                                               0x1801BB44
#define DDC5_DDC_SFBSR_reg_addr                                                      "0xB801BB44"
#define DDC5_DDC_SFBSR_reg                                                           0xB801BB44
#define set_DDC5_DDC_SFBSR_reg(data)   (*((volatile unsigned int*) DDC5_DDC_SFBSR_reg)=data)
#define get_DDC5_DDC_SFBSR_reg   (*((volatile unsigned int*) DDC5_DDC_SFBSR_reg))
#define DDC5_DDC_SFBSR_inst_adr                                                      "0x00D1"
#define DDC5_DDC_SFBSR_inst                                                          0x00D1
#define DDC5_DDC_SFBSR_CIRWS_2ND_shift                                               (5)
#define DDC5_DDC_SFBSR_CIRWS_2ND_mask                                                (0x00000020)
#define DDC5_DDC_SFBSR_CIRWS_2ND(data)                                               (0x00000020&((data)<<5))
#define DDC5_DDC_SFBSR_CIRWS_2ND_src(data)                                           ((0x00000020&(data))>>5)
#define DDC5_DDC_SFBSR_get_CIRWS_2ND(data)                                           ((0x00000020&(data))>>5)
#define DDC5_DDC_SFBSR_CIRWS_1ST_shift                                               (4)
#define DDC5_DDC_SFBSR_CIRWS_1ST_mask                                                (0x00000010)
#define DDC5_DDC_SFBSR_CIRWS_1ST(data)                                               (0x00000010&((data)<<4))
#define DDC5_DDC_SFBSR_CIRWS_1ST_src(data)                                           ((0x00000010&(data))>>4)
#define DDC5_DDC_SFBSR_get_CIRWS_1ST(data)                                           ((0x00000010&(data))>>4)
#define DDC5_DDC_SFBSR_CIPPT_2ND_shift                                               (3)
#define DDC5_DDC_SFBSR_CIPPT_2ND_mask                                                (0x00000008)
#define DDC5_DDC_SFBSR_CIPPT_2ND(data)                                               (0x00000008&((data)<<3))
#define DDC5_DDC_SFBSR_CIPPT_2ND_src(data)                                           ((0x00000008&(data))>>3)
#define DDC5_DDC_SFBSR_get_CIPPT_2ND(data)                                           ((0x00000008&(data))>>3)
#define DDC5_DDC_SFBSR_CISPT_2ND_shift                                               (2)
#define DDC5_DDC_SFBSR_CISPT_2ND_mask                                                (0x00000004)
#define DDC5_DDC_SFBSR_CISPT_2ND(data)                                               (0x00000004&((data)<<2))
#define DDC5_DDC_SFBSR_CISPT_2ND_src(data)                                           ((0x00000004&(data))>>2)
#define DDC5_DDC_SFBSR_get_CISPT_2ND(data)                                           ((0x00000004&(data))>>2)
#define DDC5_DDC_SFBSR_CIPPT_1ST_shift                                               (1)
#define DDC5_DDC_SFBSR_CIPPT_1ST_mask                                                (0x00000002)
#define DDC5_DDC_SFBSR_CIPPT_1ST(data)                                               (0x00000002&((data)<<1))
#define DDC5_DDC_SFBSR_CIPPT_1ST_src(data)                                           ((0x00000002&(data))>>1)
#define DDC5_DDC_SFBSR_get_CIPPT_1ST(data)                                           ((0x00000002&(data))>>1)
#define DDC5_DDC_SFBSR_CISPT_1ST_shift                                               (0)
#define DDC5_DDC_SFBSR_CISPT_1ST_mask                                                (0x00000001)
#define DDC5_DDC_SFBSR_CISPT_1ST(data)                                               (0x00000001&((data)<<0))
#define DDC5_DDC_SFBSR_CISPT_1ST_src(data)                                           ((0x00000001&(data))>>0)
#define DDC5_DDC_SFBSR_get_CISPT_1ST(data)                                           ((0x00000001&(data))>>0)


#define DDC5_DDC_SFIBLR                                                              0x1801BB48
#define DDC5_DDC_SFIBLR_reg_addr                                                     "0xB801BB48"
#define DDC5_DDC_SFIBLR_reg                                                          0xB801BB48
#define set_DDC5_DDC_SFIBLR_reg(data)   (*((volatile unsigned int*) DDC5_DDC_SFIBLR_reg)=data)
#define get_DDC5_DDC_SFIBLR_reg   (*((volatile unsigned int*) DDC5_DDC_SFIBLR_reg))
#define DDC5_DDC_SFIBLR_inst_adr                                                     "0x00D2"
#define DDC5_DDC_SFIBLR_inst                                                         0x00D2
#define DDC5_DDC_SFIBLR_FFDI_DLEN_shift                                              (0)
#define DDC5_DDC_SFIBLR_FFDI_DLEN_mask                                               (0x0000001F)
#define DDC5_DDC_SFIBLR_FFDI_DLEN(data)                                              (0x0000001F&((data)<<0))
#define DDC5_DDC_SFIBLR_FFDI_DLEN_src(data)                                          ((0x0000001F&(data))>>0)
#define DDC5_DDC_SFIBLR_get_FFDI_DLEN(data)                                          ((0x0000001F&(data))>>0)


#define DDC5_DDC_SFIBRWPR                                                            0x1801BB4C
#define DDC5_DDC_SFIBRWPR_reg_addr                                                   "0xB801BB4C"
#define DDC5_DDC_SFIBRWPR_reg                                                        0xB801BB4C
#define set_DDC5_DDC_SFIBRWPR_reg(data)   (*((volatile unsigned int*) DDC5_DDC_SFIBRWPR_reg)=data)
#define get_DDC5_DDC_SFIBRWPR_reg   (*((volatile unsigned int*) DDC5_DDC_SFIBRWPR_reg))
#define DDC5_DDC_SFIBRWPR_inst_adr                                                   "0x00D3"
#define DDC5_DDC_SFIBRWPR_inst                                                       0x00D3
#define DDC5_DDC_SFIBRWPR_DIFF_WPT_shift                                             (4)
#define DDC5_DDC_SFIBRWPR_DIFF_WPT_mask                                              (0x000000F0)
#define DDC5_DDC_SFIBRWPR_DIFF_WPT(data)                                             (0x000000F0&((data)<<4))
#define DDC5_DDC_SFIBRWPR_DIFF_WPT_src(data)                                         ((0x000000F0&(data))>>4)
#define DDC5_DDC_SFIBRWPR_get_DIFF_WPT(data)                                         ((0x000000F0&(data))>>4)
#define DDC5_DDC_SFIBRWPR_DIFF_RPT_shift                                             (0)
#define DDC5_DDC_SFIBRWPR_DIFF_RPT_mask                                              (0x0000000F)
#define DDC5_DDC_SFIBRWPR_DIFF_RPT(data)                                             (0x0000000F&((data)<<0))
#define DDC5_DDC_SFIBRWPR_DIFF_RPT_src(data)                                         ((0x0000000F&(data))>>0)
#define DDC5_DDC_SFIBRWPR_get_DIFF_RPT(data)                                         ((0x0000000F&(data))>>0)


#define DDC5_DDC_SFIBSWPR                                                            0x1801BB50
#define DDC5_DDC_SFIBSWPR_reg_addr                                                   "0xB801BB50"
#define DDC5_DDC_SFIBSWPR_reg                                                        0xB801BB50
#define set_DDC5_DDC_SFIBSWPR_reg(data)   (*((volatile unsigned int*) DDC5_DDC_SFIBSWPR_reg)=data)
#define get_DDC5_DDC_SFIBSWPR_reg   (*((volatile unsigned int*) DDC5_DDC_SFIBSWPR_reg))
#define DDC5_DDC_SFIBSWPR_inst_adr                                                   "0x00D4"
#define DDC5_DDC_SFIBSWPR_inst                                                       0x00D4
#define DDC5_DDC_SFIBSWPR_DIFFSTOP_PT_shift                                          (0)
#define DDC5_DDC_SFIBSWPR_DIFFSTOP_PT_mask                                           (0x0000000F)
#define DDC5_DDC_SFIBSWPR_DIFFSTOP_PT(data)                                          (0x0000000F&((data)<<0))
#define DDC5_DDC_SFIBSWPR_DIFFSTOP_PT_src(data)                                      ((0x0000000F&(data))>>0)
#define DDC5_DDC_SFIBSWPR_get_DIFFSTOP_PT(data)                                      ((0x0000000F&(data))>>0)


#define DDC5_DDC_SFOBSR                                                              0x1801BB54
#define DDC5_DDC_SFOBSR_reg_addr                                                     "0xB801BB54"
#define DDC5_DDC_SFOBSR_reg                                                          0xB801BB54
#define set_DDC5_DDC_SFOBSR_reg(data)   (*((volatile unsigned int*) DDC5_DDC_SFOBSR_reg)=data)
#define get_DDC5_DDC_SFOBSR_reg   (*((volatile unsigned int*) DDC5_DDC_SFOBSR_reg))
#define DDC5_DDC_SFOBSR_inst_adr                                                     "0x00D5"
#define DDC5_DDC_SFOBSR_inst                                                         0x00D5
#define DDC5_DDC_SFOBSR_FFDO_DLEN_shift                                              (0)
#define DDC5_DDC_SFOBSR_FFDO_DLEN_mask                                               (0x0000001F)
#define DDC5_DDC_SFOBSR_FFDO_DLEN(data)                                              (0x0000001F&((data)<<0))
#define DDC5_DDC_SFOBSR_FFDO_DLEN_src(data)                                          ((0x0000001F&(data))>>0)
#define DDC5_DDC_SFOBSR_get_FFDO_DLEN(data)                                          ((0x0000001F&(data))>>0)


#define DDC5_DDC_SFOBRWPR                                                            0x1801BB58
#define DDC5_DDC_SFOBRWPR_reg_addr                                                   "0xB801BB58"
#define DDC5_DDC_SFOBRWPR_reg                                                        0xB801BB58
#define set_DDC5_DDC_SFOBRWPR_reg(data)   (*((volatile unsigned int*) DDC5_DDC_SFOBRWPR_reg)=data)
#define get_DDC5_DDC_SFOBRWPR_reg   (*((volatile unsigned int*) DDC5_DDC_SFOBRWPR_reg))
#define DDC5_DDC_SFOBRWPR_inst_adr                                                   "0x00D6"
#define DDC5_DDC_SFOBRWPR_inst                                                       0x00D6
#define DDC5_DDC_SFOBRWPR_DOFF_WPT_shift                                             (4)
#define DDC5_DDC_SFOBRWPR_DOFF_WPT_mask                                              (0x000000F0)
#define DDC5_DDC_SFOBRWPR_DOFF_WPT(data)                                             (0x000000F0&((data)<<4))
#define DDC5_DDC_SFOBRWPR_DOFF_WPT_src(data)                                         ((0x000000F0&(data))>>4)
#define DDC5_DDC_SFOBRWPR_get_DOFF_WPT(data)                                         ((0x000000F0&(data))>>4)
#define DDC5_DDC_SFOBRWPR_DOFF_RPT_shift                                             (0)
#define DDC5_DDC_SFOBRWPR_DOFF_RPT_mask                                              (0x0000000F)
#define DDC5_DDC_SFOBRWPR_DOFF_RPT(data)                                             (0x0000000F&((data)<<0))
#define DDC5_DDC_SFOBRWPR_DOFF_RPT_src(data)                                         ((0x0000000F&(data))>>0)
#define DDC5_DDC_SFOBRWPR_get_DOFF_RPT(data)                                         ((0x0000000F&(data))>>0)


#define DDC5_DDC_SFSR                                                                0x1801BB5C
#define DDC5_DDC_SFSR_reg_addr                                                       "0xB801BB5C"
#define DDC5_DDC_SFSR_reg                                                            0xB801BB5C
#define set_DDC5_DDC_SFSR_reg(data)   (*((volatile unsigned int*) DDC5_DDC_SFSR_reg)=data)
#define get_DDC5_DDC_SFSR_reg   (*((volatile unsigned int*) DDC5_DDC_SFSR_reg))
#define DDC5_DDC_SFSR_inst_adr                                                       "0x00D7"
#define DDC5_DDC_SFSR_inst                                                           0x00D7
#define DDC5_DDC_SFSR_FFDOUF_ST_shift                                                (7)
#define DDC5_DDC_SFSR_FFDOUF_ST_mask                                                 (0x00000080)
#define DDC5_DDC_SFSR_FFDOUF_ST(data)                                                (0x00000080&((data)<<7))
#define DDC5_DDC_SFSR_FFDOUF_ST_src(data)                                            ((0x00000080&(data))>>7)
#define DDC5_DDC_SFSR_get_FFDOUF_ST(data)                                            ((0x00000080&(data))>>7)
#define DDC5_DDC_SFSR_FFDIOF_ST_shift                                                (6)
#define DDC5_DDC_SFSR_FFDIOF_ST_mask                                                 (0x00000040)
#define DDC5_DDC_SFSR_FFDIOF_ST(data)                                                (0x00000040&((data)<<6))
#define DDC5_DDC_SFSR_FFDIOF_ST_src(data)                                            ((0x00000040&(data))>>6)
#define DDC5_DDC_SFSR_get_FFDIOF_ST(data)                                            ((0x00000040&(data))>>6)
#define DDC5_DDC_SFSR_FFDONF_ST_shift                                                (5)
#define DDC5_DDC_SFSR_FFDONF_ST_mask                                                 (0x00000020)
#define DDC5_DDC_SFSR_FFDONF_ST(data)                                                (0x00000020&((data)<<5))
#define DDC5_DDC_SFSR_FFDONF_ST_src(data)                                            ((0x00000020&(data))>>5)
#define DDC5_DDC_SFSR_get_FFDONF_ST(data)                                            ((0x00000020&(data))>>5)
#define DDC5_DDC_SFSR_FFDOET_ST_shift                                                (4)
#define DDC5_DDC_SFSR_FFDOET_ST_mask                                                 (0x00000010)
#define DDC5_DDC_SFSR_FFDOET_ST(data)                                                (0x00000010&((data)<<4))
#define DDC5_DDC_SFSR_FFDOET_ST_src(data)                                            ((0x00000010&(data))>>4)
#define DDC5_DDC_SFSR_get_FFDOET_ST(data)                                            ((0x00000010&(data))>>4)
#define DDC5_DDC_SFSR_FFDIFU_ST_shift                                                (3)
#define DDC5_DDC_SFSR_FFDIFU_ST_mask                                                 (0x00000008)
#define DDC5_DDC_SFSR_FFDIFU_ST(data)                                                (0x00000008&((data)<<3))
#define DDC5_DDC_SFSR_FFDIFU_ST_src(data)                                            ((0x00000008&(data))>>3)
#define DDC5_DDC_SFSR_get_FFDIFU_ST(data)                                            ((0x00000008&(data))>>3)
#define DDC5_DDC_SFSR_FFDINE_ST_shift                                                (2)
#define DDC5_DDC_SFSR_FFDINE_ST_mask                                                 (0x00000004)
#define DDC5_DDC_SFSR_FFDINE_ST(data)                                                (0x00000004&((data)<<2))
#define DDC5_DDC_SFSR_FFDINE_ST_src(data)                                            ((0x00000004&(data))>>2)
#define DDC5_DDC_SFSR_get_FFDINE_ST(data)                                            ((0x00000004&(data))>>2)


#define DDC5_DDC_SFIR                                                                0x1801BB60
#define DDC5_DDC_SFIR_reg_addr                                                       "0xB801BB60"
#define DDC5_DDC_SFIR_reg                                                            0xB801BB60
#define set_DDC5_DDC_SFIR_reg(data)   (*((volatile unsigned int*) DDC5_DDC_SFIR_reg)=data)
#define get_DDC5_DDC_SFIR_reg   (*((volatile unsigned int*) DDC5_DDC_SFIR_reg))
#define DDC5_DDC_SFIR_inst_adr                                                       "0x00D8"
#define DDC5_DDC_SFIR_inst                                                           0x00D8
#define DDC5_DDC_SFIR_FFDOUF_IE_shift                                                (7)
#define DDC5_DDC_SFIR_FFDOUF_IE_mask                                                 (0x00000080)
#define DDC5_DDC_SFIR_FFDOUF_IE(data)                                                (0x00000080&((data)<<7))
#define DDC5_DDC_SFIR_FFDOUF_IE_src(data)                                            ((0x00000080&(data))>>7)
#define DDC5_DDC_SFIR_get_FFDOUF_IE(data)                                            ((0x00000080&(data))>>7)
#define DDC5_DDC_SFIR_FFDIOF_IE_shift                                                (6)
#define DDC5_DDC_SFIR_FFDIOF_IE_mask                                                 (0x00000040)
#define DDC5_DDC_SFIR_FFDIOF_IE(data)                                                (0x00000040&((data)<<6))
#define DDC5_DDC_SFIR_FFDIOF_IE_src(data)                                            ((0x00000040&(data))>>6)
#define DDC5_DDC_SFIR_get_FFDIOF_IE(data)                                            ((0x00000040&(data))>>6)
#define DDC5_DDC_SFIR_FFDONF_IE_shift                                                (5)
#define DDC5_DDC_SFIR_FFDONF_IE_mask                                                 (0x00000020)
#define DDC5_DDC_SFIR_FFDONF_IE(data)                                                (0x00000020&((data)<<5))
#define DDC5_DDC_SFIR_FFDONF_IE_src(data)                                            ((0x00000020&(data))>>5)
#define DDC5_DDC_SFIR_get_FFDONF_IE(data)                                            ((0x00000020&(data))>>5)
#define DDC5_DDC_SFIR_FFDOET_IE_shift                                                (4)
#define DDC5_DDC_SFIR_FFDOET_IE_mask                                                 (0x00000010)
#define DDC5_DDC_SFIR_FFDOET_IE(data)                                                (0x00000010&((data)<<4))
#define DDC5_DDC_SFIR_FFDOET_IE_src(data)                                            ((0x00000010&(data))>>4)
#define DDC5_DDC_SFIR_get_FFDOET_IE(data)                                            ((0x00000010&(data))>>4)
#define DDC5_DDC_SFIR_FFDIFU_IE_shift                                                (3)
#define DDC5_DDC_SFIR_FFDIFU_IE_mask                                                 (0x00000008)
#define DDC5_DDC_SFIR_FFDIFU_IE(data)                                                (0x00000008&((data)<<3))
#define DDC5_DDC_SFIR_FFDIFU_IE_src(data)                                            ((0x00000008&(data))>>3)
#define DDC5_DDC_SFIR_get_FFDIFU_IE(data)                                            ((0x00000008&(data))>>3)
#define DDC5_DDC_SFIR_FFDINE_IE_shift                                                (2)
#define DDC5_DDC_SFIR_FFDINE_IE_mask                                                 (0x00000004)
#define DDC5_DDC_SFIR_FFDINE_IE(data)                                                (0x00000004&((data)<<2))
#define DDC5_DDC_SFIR_FFDINE_IE_src(data)                                            ((0x00000004&(data))>>2)
#define DDC5_DDC_SFIR_get_FFDINE_IE(data)                                            ((0x00000004&(data))>>2)
#define DDC5_DDC_SFIR_CIPPT_IE_shift                                                 (1)
#define DDC5_DDC_SFIR_CIPPT_IE_mask                                                  (0x00000002)
#define DDC5_DDC_SFIR_CIPPT_IE(data)                                                 (0x00000002&((data)<<1))
#define DDC5_DDC_SFIR_CIPPT_IE_src(data)                                             ((0x00000002&(data))>>1)
#define DDC5_DDC_SFIR_get_CIPPT_IE(data)                                             ((0x00000002&(data))>>1)
#define DDC5_DDC_SFIR_CISPT_IE_shift                                                 (0)
#define DDC5_DDC_SFIR_CISPT_IE_mask                                                  (0x00000001)
#define DDC5_DDC_SFIR_CISPT_IE(data)                                                 (0x00000001&((data)<<0))
#define DDC5_DDC_SFIR_CISPT_IE_src(data)                                             ((0x00000001&(data))>>0)
#define DDC5_DDC_SFIR_get_CISPT_IE(data)                                             ((0x00000001&(data))>>0)


#define DDC5_DDC_FSMS                                                                0x1801BB64
#define DDC5_DDC_FSMS_reg_addr                                                       "0xB801BB64"
#define DDC5_DDC_FSMS_reg                                                            0xB801BB64
#define set_DDC5_DDC_FSMS_reg(data)   (*((volatile unsigned int*) DDC5_DDC_FSMS_reg)=data)
#define get_DDC5_DDC_FSMS_reg   (*((volatile unsigned int*) DDC5_DDC_FSMS_reg))
#define DDC5_DDC_FSMS_inst_adr                                                       "0x00D9"
#define DDC5_DDC_FSMS_inst                                                           0x00D9
#define DDC5_DDC_FSMS_CMDFSM_ST_shift                                                (0)
#define DDC5_DDC_FSMS_CMDFSM_ST_mask                                                 (0x000000FF)
#define DDC5_DDC_FSMS_CMDFSM_ST(data)                                                (0x000000FF&((data)<<0))
#define DDC5_DDC_FSMS_CMDFSM_ST_src(data)                                            ((0x000000FF&(data))>>0)
#define DDC5_DDC_FSMS_get_CMDFSM_ST(data)                                            ((0x000000FF&(data))>>0)


#define DDC5_DDC_DUMMY                                                               0x1801BB68
#define DDC5_DDC_DUMMY_reg_addr                                                      "0xB801BB68"
#define DDC5_DDC_DUMMY_reg                                                           0xB801BB68
#define set_DDC5_DDC_DUMMY_reg(data)   (*((volatile unsigned int*) DDC5_DDC_DUMMY_reg)=data)
#define get_DDC5_DDC_DUMMY_reg   (*((volatile unsigned int*) DDC5_DDC_DUMMY_reg))
#define DDC5_DDC_DUMMY_inst_adr                                                      "0x00DA"
#define DDC5_DDC_DUMMY_inst                                                          0x00DA
#define DDC5_DDC_DUMMY_Dummy_shift                                                   (0)
#define DDC5_DDC_DUMMY_Dummy_mask                                                    (0x000000FF)
#define DDC5_DDC_DUMMY_Dummy(data)                                                   (0x000000FF&((data)<<0))
#define DDC5_DDC_DUMMY_Dummy_src(data)                                               ((0x000000FF&(data))>>0)
#define DDC5_DDC_DUMMY_get_Dummy(data)                                               ((0x000000FF&(data))>>0)


#define DDC5_DDC_EDID_SRAM_READ_IRQ_EN                                               0x1801BB70
#define DDC5_DDC_EDID_SRAM_READ_IRQ_EN_reg_addr                                      "0xB801BB70"
#define DDC5_DDC_EDID_SRAM_READ_IRQ_EN_reg                                           0xB801BB70
#define set_DDC5_DDC_EDID_SRAM_READ_IRQ_EN_reg(data)   (*((volatile unsigned int*) DDC5_DDC_EDID_SRAM_READ_IRQ_EN_reg)=data)
#define get_DDC5_DDC_EDID_SRAM_READ_IRQ_EN_reg   (*((volatile unsigned int*) DDC5_DDC_EDID_SRAM_READ_IRQ_EN_reg))
#define DDC5_DDC_EDID_SRAM_READ_IRQ_EN_inst_adr                                      "0x00DC"
#define DDC5_DDC_EDID_SRAM_READ_IRQ_EN_inst                                          0x00DC
#define DDC5_DDC_EDID_SRAM_READ_IRQ_EN_START_IRQ_EN_shift                            (1)
#define DDC5_DDC_EDID_SRAM_READ_IRQ_EN_START_IRQ_EN_mask                             (0x00000002)
#define DDC5_DDC_EDID_SRAM_READ_IRQ_EN_START_IRQ_EN(data)                            (0x00000002&((data)<<1))
#define DDC5_DDC_EDID_SRAM_READ_IRQ_EN_START_IRQ_EN_src(data)                        ((0x00000002&(data))>>1)
#define DDC5_DDC_EDID_SRAM_READ_IRQ_EN_get_START_IRQ_EN(data)                        ((0x00000002&(data))>>1)
#define DDC5_DDC_EDID_SRAM_READ_IRQ_EN_STOP_IRQ_EN_shift                             (0)
#define DDC5_DDC_EDID_SRAM_READ_IRQ_EN_STOP_IRQ_EN_mask                              (0x00000001)
#define DDC5_DDC_EDID_SRAM_READ_IRQ_EN_STOP_IRQ_EN(data)                             (0x00000001&((data)<<0))
#define DDC5_DDC_EDID_SRAM_READ_IRQ_EN_STOP_IRQ_EN_src(data)                         ((0x00000001&(data))>>0)
#define DDC5_DDC_EDID_SRAM_READ_IRQ_EN_get_STOP_IRQ_EN(data)                         ((0x00000001&(data))>>0)


#define DDC5_DDC_EDID_SRAM_READ_AUX                                                  0x1801BB74
#define DDC5_DDC_EDID_SRAM_READ_AUX_reg_addr                                         "0xB801BB74"
#define DDC5_DDC_EDID_SRAM_READ_AUX_reg                                              0xB801BB74
#define set_DDC5_DDC_EDID_SRAM_READ_AUX_reg(data)   (*((volatile unsigned int*) DDC5_DDC_EDID_SRAM_READ_AUX_reg)=data)
#define get_DDC5_DDC_EDID_SRAM_READ_AUX_reg   (*((volatile unsigned int*) DDC5_DDC_EDID_SRAM_READ_AUX_reg))
#define DDC5_DDC_EDID_SRAM_READ_AUX_inst_adr                                         "0x00DD"
#define DDC5_DDC_EDID_SRAM_READ_AUX_inst                                             0x00DD
#define DDC5_DDC_EDID_SRAM_READ_AUX_START_shift                                      (1)
#define DDC5_DDC_EDID_SRAM_READ_AUX_START_mask                                       (0x00000002)
#define DDC5_DDC_EDID_SRAM_READ_AUX_START(data)                                      (0x00000002&((data)<<1))
#define DDC5_DDC_EDID_SRAM_READ_AUX_START_src(data)                                  ((0x00000002&(data))>>1)
#define DDC5_DDC_EDID_SRAM_READ_AUX_get_START(data)                                  ((0x00000002&(data))>>1)
#define DDC5_DDC_EDID_SRAM_READ_AUX_STOP_shift                                       (0)
#define DDC5_DDC_EDID_SRAM_READ_AUX_STOP_mask                                        (0x00000001)
#define DDC5_DDC_EDID_SRAM_READ_AUX_STOP(data)                                       (0x00000001&((data)<<0))
#define DDC5_DDC_EDID_SRAM_READ_AUX_STOP_src(data)                                   ((0x00000001&(data))>>0)
#define DDC5_DDC_EDID_SRAM_READ_AUX_get_STOP(data)                                   ((0x00000001&(data))>>0)


#define DDC5_DDC_BIST_MODE                                                           0x1801BB78
#define DDC5_DDC_BIST_MODE_reg_addr                                                  "0xB801BB78"
#define DDC5_DDC_BIST_MODE_reg                                                       0xB801BB78
#define set_DDC5_DDC_BIST_MODE_reg(data)   (*((volatile unsigned int*) DDC5_DDC_BIST_MODE_reg)=data)
#define get_DDC5_DDC_BIST_MODE_reg   (*((volatile unsigned int*) DDC5_DDC_BIST_MODE_reg))
#define DDC5_DDC_BIST_MODE_inst_adr                                                  "0x00DE"
#define DDC5_DDC_BIST_MODE_inst                                                      0x00DE
#define DDC5_DDC_BIST_MODE_DDC_BIST_MODE_shift                                       (0)
#define DDC5_DDC_BIST_MODE_DDC_BIST_MODE_mask                                        (0x00000001)
#define DDC5_DDC_BIST_MODE_DDC_BIST_MODE(data)                                       (0x00000001&((data)<<0))
#define DDC5_DDC_BIST_MODE_DDC_BIST_MODE_src(data)                                   ((0x00000001&(data))>>0)
#define DDC5_DDC_BIST_MODE_get_DDC_BIST_MODE(data)                                   ((0x00000001&(data))>>0)


#define DDC5_DDC_BIST_DONE                                                           0x1801BB7C
#define DDC5_DDC_BIST_DONE_reg_addr                                                  "0xB801BB7C"
#define DDC5_DDC_BIST_DONE_reg                                                       0xB801BB7C
#define set_DDC5_DDC_BIST_DONE_reg(data)   (*((volatile unsigned int*) DDC5_DDC_BIST_DONE_reg)=data)
#define get_DDC5_DDC_BIST_DONE_reg   (*((volatile unsigned int*) DDC5_DDC_BIST_DONE_reg))
#define DDC5_DDC_BIST_DONE_inst_adr                                                  "0x00DF"
#define DDC5_DDC_BIST_DONE_inst                                                      0x00DF
#define DDC5_DDC_BIST_DONE_DDC_BIST_DONE_shift                                       (0)
#define DDC5_DDC_BIST_DONE_DDC_BIST_DONE_mask                                        (0x00000001)
#define DDC5_DDC_BIST_DONE_DDC_BIST_DONE(data)                                       (0x00000001&((data)<<0))
#define DDC5_DDC_BIST_DONE_DDC_BIST_DONE_src(data)                                   ((0x00000001&(data))>>0)
#define DDC5_DDC_BIST_DONE_get_DDC_BIST_DONE(data)                                   ((0x00000001&(data))>>0)


#define DDC5_DDC_BIST_FAIL                                                           0x1801BB80
#define DDC5_DDC_BIST_FAIL_reg_addr                                                  "0xB801BB80"
#define DDC5_DDC_BIST_FAIL_reg                                                       0xB801BB80
#define set_DDC5_DDC_BIST_FAIL_reg(data)   (*((volatile unsigned int*) DDC5_DDC_BIST_FAIL_reg)=data)
#define get_DDC5_DDC_BIST_FAIL_reg   (*((volatile unsigned int*) DDC5_DDC_BIST_FAIL_reg))
#define DDC5_DDC_BIST_FAIL_inst_adr                                                  "0x00E0"
#define DDC5_DDC_BIST_FAIL_inst                                                      0x00E0
#define DDC5_DDC_BIST_FAIL_DDC_BIST_FAIL_shift                                       (0)
#define DDC5_DDC_BIST_FAIL_DDC_BIST_FAIL_mask                                        (0x00000001)
#define DDC5_DDC_BIST_FAIL_DDC_BIST_FAIL(data)                                       (0x00000001&((data)<<0))
#define DDC5_DDC_BIST_FAIL_DDC_BIST_FAIL_src(data)                                   ((0x00000001&(data))>>0)
#define DDC5_DDC_BIST_FAIL_get_DDC_BIST_FAIL(data)                                   ((0x00000001&(data))>>0)


#define DDC5_DDC_DRF_MODE                                                            0x1801BB84
#define DDC5_DDC_DRF_MODE_reg_addr                                                   "0xB801BB84"
#define DDC5_DDC_DRF_MODE_reg                                                        0xB801BB84
#define set_DDC5_DDC_DRF_MODE_reg(data)   (*((volatile unsigned int*) DDC5_DDC_DRF_MODE_reg)=data)
#define get_DDC5_DDC_DRF_MODE_reg   (*((volatile unsigned int*) DDC5_DDC_DRF_MODE_reg))
#define DDC5_DDC_DRF_MODE_inst_adr                                                   "0x00E1"
#define DDC5_DDC_DRF_MODE_inst                                                       0x00E1
#define DDC5_DDC_DRF_MODE_DDC_DRF_MODE_shift                                         (0)
#define DDC5_DDC_DRF_MODE_DDC_DRF_MODE_mask                                          (0x00000001)
#define DDC5_DDC_DRF_MODE_DDC_DRF_MODE(data)                                         (0x00000001&((data)<<0))
#define DDC5_DDC_DRF_MODE_DDC_DRF_MODE_src(data)                                     ((0x00000001&(data))>>0)
#define DDC5_DDC_DRF_MODE_get_DDC_DRF_MODE(data)                                     ((0x00000001&(data))>>0)


#define DDC5_DDC_DRF_RESUME                                                          0x1801BB88
#define DDC5_DDC_DRF_RESUME_reg_addr                                                 "0xB801BB88"
#define DDC5_DDC_DRF_RESUME_reg                                                      0xB801BB88
#define set_DDC5_DDC_DRF_RESUME_reg(data)   (*((volatile unsigned int*) DDC5_DDC_DRF_RESUME_reg)=data)
#define get_DDC5_DDC_DRF_RESUME_reg   (*((volatile unsigned int*) DDC5_DDC_DRF_RESUME_reg))
#define DDC5_DDC_DRF_RESUME_inst_adr                                                 "0x00E2"
#define DDC5_DDC_DRF_RESUME_inst                                                     0x00E2
#define DDC5_DDC_DRF_RESUME_DDC_DRF_RESUME_shift                                     (0)
#define DDC5_DDC_DRF_RESUME_DDC_DRF_RESUME_mask                                      (0x00000001)
#define DDC5_DDC_DRF_RESUME_DDC_DRF_RESUME(data)                                     (0x00000001&((data)<<0))
#define DDC5_DDC_DRF_RESUME_DDC_DRF_RESUME_src(data)                                 ((0x00000001&(data))>>0)
#define DDC5_DDC_DRF_RESUME_get_DDC_DRF_RESUME(data)                                 ((0x00000001&(data))>>0)


#define DDC5_DDC_DRF_DONE                                                            0x1801BB8C
#define DDC5_DDC_DRF_DONE_reg_addr                                                   "0xB801BB8C"
#define DDC5_DDC_DRF_DONE_reg                                                        0xB801BB8C
#define set_DDC5_DDC_DRF_DONE_reg(data)   (*((volatile unsigned int*) DDC5_DDC_DRF_DONE_reg)=data)
#define get_DDC5_DDC_DRF_DONE_reg   (*((volatile unsigned int*) DDC5_DDC_DRF_DONE_reg))
#define DDC5_DDC_DRF_DONE_inst_adr                                                   "0x00E3"
#define DDC5_DDC_DRF_DONE_inst                                                       0x00E3
#define DDC5_DDC_DRF_DONE_DDC_DRF_DONE_shift                                         (0)
#define DDC5_DDC_DRF_DONE_DDC_DRF_DONE_mask                                          (0x00000001)
#define DDC5_DDC_DRF_DONE_DDC_DRF_DONE(data)                                         (0x00000001&((data)<<0))
#define DDC5_DDC_DRF_DONE_DDC_DRF_DONE_src(data)                                     ((0x00000001&(data))>>0)
#define DDC5_DDC_DRF_DONE_get_DDC_DRF_DONE(data)                                     ((0x00000001&(data))>>0)


#define DDC5_DDC_DRF_PAUSE                                                           0x1801BB90
#define DDC5_DDC_DRF_PAUSE_reg_addr                                                  "0xB801BB90"
#define DDC5_DDC_DRF_PAUSE_reg                                                       0xB801BB90
#define set_DDC5_DDC_DRF_PAUSE_reg(data)   (*((volatile unsigned int*) DDC5_DDC_DRF_PAUSE_reg)=data)
#define get_DDC5_DDC_DRF_PAUSE_reg   (*((volatile unsigned int*) DDC5_DDC_DRF_PAUSE_reg))
#define DDC5_DDC_DRF_PAUSE_inst_adr                                                  "0x00E4"
#define DDC5_DDC_DRF_PAUSE_inst                                                      0x00E4
#define DDC5_DDC_DRF_PAUSE_DDC_DRF_PAUSE_shift                                       (0)
#define DDC5_DDC_DRF_PAUSE_DDC_DRF_PAUSE_mask                                        (0x00000001)
#define DDC5_DDC_DRF_PAUSE_DDC_DRF_PAUSE(data)                                       (0x00000001&((data)<<0))
#define DDC5_DDC_DRF_PAUSE_DDC_DRF_PAUSE_src(data)                                   ((0x00000001&(data))>>0)
#define DDC5_DDC_DRF_PAUSE_get_DDC_DRF_PAUSE(data)                                   ((0x00000001&(data))>>0)


#define DDC5_DDC_DRF_FAIL                                                            0x1801BB94
#define DDC5_DDC_DRF_FAIL_reg_addr                                                   "0xB801BB94"
#define DDC5_DDC_DRF_FAIL_reg                                                        0xB801BB94
#define set_DDC5_DDC_DRF_FAIL_reg(data)   (*((volatile unsigned int*) DDC5_DDC_DRF_FAIL_reg)=data)
#define get_DDC5_DDC_DRF_FAIL_reg   (*((volatile unsigned int*) DDC5_DDC_DRF_FAIL_reg))
#define DDC5_DDC_DRF_FAIL_inst_adr                                                   "0x00E5"
#define DDC5_DDC_DRF_FAIL_inst                                                       0x00E5
#define DDC5_DDC_DRF_FAIL_DDC_DRF_FAIL_shift                                         (0)
#define DDC5_DDC_DRF_FAIL_DDC_DRF_FAIL_mask                                          (0x00000001)
#define DDC5_DDC_DRF_FAIL_DDC_DRF_FAIL(data)                                         (0x00000001&((data)<<0))
#define DDC5_DDC_DRF_FAIL_DDC_DRF_FAIL_src(data)                                     ((0x00000001&(data))>>0)
#define DDC5_DDC_DRF_FAIL_get_DDC_DRF_FAIL(data)                                     ((0x00000001&(data))>>0)


#define PCMCIA_CMDFF                                                                 0x1801B700
#define PCMCIA_CMDFF_reg_addr                                                        "0xB801B700"
#define PCMCIA_CMDFF_reg                                                             0xB801B700
#define set_PCMCIA_CMDFF_reg(data)   (*((volatile unsigned int*) PCMCIA_CMDFF_reg)=data)
#define get_PCMCIA_CMDFF_reg   (*((volatile unsigned int*) PCMCIA_CMDFF_reg))
#define PCMCIA_CMDFF_inst_adr                                                        "0x00C0"
#define PCMCIA_CMDFF_inst                                                            0x00C0
#define PCMCIA_CMDFF_CT_shift                                                        (24)
#define PCMCIA_CMDFF_CT_mask                                                         (0x01000000)
#define PCMCIA_CMDFF_CT(data)                                                        (0x01000000&((data)<<24))
#define PCMCIA_CMDFF_CT_src(data)                                                    ((0x01000000&(data))>>24)
#define PCMCIA_CMDFF_get_CT(data)                                                    ((0x01000000&(data))>>24)
#define PCMCIA_CMDFF_AT_shift                                                        (23)
#define PCMCIA_CMDFF_AT_mask                                                         (0x00800000)
#define PCMCIA_CMDFF_AT(data)                                                        (0x00800000&((data)<<23))
#define PCMCIA_CMDFF_AT_src(data)                                                    ((0x00800000&(data))>>23)
#define PCMCIA_CMDFF_get_AT(data)                                                    ((0x00800000&(data))>>23)
#define PCMCIA_CMDFF_PA_shift                                                        (8)
#define PCMCIA_CMDFF_PA_mask                                                         (0x007FFF00)
#define PCMCIA_CMDFF_PA(data)                                                        (0x007FFF00&((data)<<8))
#define PCMCIA_CMDFF_PA_src(data)                                                    ((0x007FFF00&(data))>>8)
#define PCMCIA_CMDFF_get_PA(data)                                                    ((0x007FFF00&(data))>>8)
#define PCMCIA_CMDFF_DF_shift                                                        (0)
#define PCMCIA_CMDFF_DF_mask                                                         (0x000000FF)
#define PCMCIA_CMDFF_DF(data)                                                        (0x000000FF&((data)<<0))
#define PCMCIA_CMDFF_DF_src(data)                                                    ((0x000000FF&(data))>>0)
#define PCMCIA_CMDFF_get_DF(data)                                                    ((0x000000FF&(data))>>0)


#define PCMCIA_CR                                                                    0x1801B704
#define PCMCIA_CR_reg_addr                                                           "0xB801B704"
#define PCMCIA_CR_reg                                                                0xB801B704
#define set_PCMCIA_CR_reg(data)   (*((volatile unsigned int*) PCMCIA_CR_reg)=data)
#define get_PCMCIA_CR_reg   (*((volatile unsigned int*) PCMCIA_CR_reg))
#define PCMCIA_CR_inst_adr                                                           "0x00C1"
#define PCMCIA_CR_inst                                                               0x00C1
#define PCMCIA_CR_PSR_shift                                                          (31)
#define PCMCIA_CR_PSR_mask                                                           (0x80000000)
#define PCMCIA_CR_PSR(data)                                                          (0x80000000&((data)<<31))
#define PCMCIA_CR_PSR_src(data)                                                      ((0x80000000&(data))>>31)
#define PCMCIA_CR_get_PSR(data)                                                      ((0x80000000&(data))>>31)
#define PCMCIA_CR_CE1_card1_shift                                                    (30)
#define PCMCIA_CR_CE1_card1_mask                                                     (0x40000000)
#define PCMCIA_CR_CE1_card1(data)                                                    (0x40000000&((data)<<30))
#define PCMCIA_CR_CE1_card1_src(data)                                                ((0x40000000&(data))>>30)
#define PCMCIA_CR_get_CE1_card1(data)                                                ((0x40000000&(data))>>30)
#define PCMCIA_CR_CE1_card2_shift                                                    (29)
#define PCMCIA_CR_CE1_card2_mask                                                     (0x20000000)
#define PCMCIA_CR_CE1_card2(data)                                                    (0x20000000&((data)<<29))
#define PCMCIA_CR_CE1_card2_src(data)                                                ((0x20000000&(data))>>29)
#define PCMCIA_CR_get_CE1_card2(data)                                                ((0x20000000&(data))>>29)
#define PCMCIA_CR_CE2_card1_shift                                                    (28)
#define PCMCIA_CR_CE2_card1_mask                                                     (0x10000000)
#define PCMCIA_CR_CE2_card1(data)                                                    (0x10000000&((data)<<28))
#define PCMCIA_CR_CE2_card1_src(data)                                                ((0x10000000&(data))>>28)
#define PCMCIA_CR_get_CE2_card1(data)                                                ((0x10000000&(data))>>28)
#define PCMCIA_CR_CE2_card2_shift                                                    (27)
#define PCMCIA_CR_CE2_card2_mask                                                     (0x08000000)
#define PCMCIA_CR_CE2_card2(data)                                                    (0x08000000&((data)<<27))
#define PCMCIA_CR_CE2_card2_src(data)                                                ((0x08000000&(data))>>27)
#define PCMCIA_CR_get_CE2_card2(data)                                                ((0x08000000&(data))>>27)
#define PCMCIA_CR_PCR1_shift                                                         (26)
#define PCMCIA_CR_PCR1_mask                                                          (0x04000000)
#define PCMCIA_CR_PCR1(data)                                                         (0x04000000&((data)<<26))
#define PCMCIA_CR_PCR1_src(data)                                                     ((0x04000000&(data))>>26)
#define PCMCIA_CR_get_PCR1(data)                                                     ((0x04000000&(data))>>26)
#define PCMCIA_CR_PCR2_shift                                                         (25)
#define PCMCIA_CR_PCR2_mask                                                          (0x02000000)
#define PCMCIA_CR_PCR2(data)                                                         (0x02000000&((data)<<25))
#define PCMCIA_CR_PCR2_src(data)                                                     ((0x02000000&(data))>>25)
#define PCMCIA_CR_get_PCR2(data)                                                     ((0x02000000&(data))>>25)
#define PCMCIA_CR_PCR1_OE_shift                                                      (24)
#define PCMCIA_CR_PCR1_OE_mask                                                       (0x01000000)
#define PCMCIA_CR_PCR1_OE(data)                                                      (0x01000000&((data)<<24))
#define PCMCIA_CR_PCR1_OE_src(data)                                                  ((0x01000000&(data))>>24)
#define PCMCIA_CR_get_PCR1_OE(data)                                                  ((0x01000000&(data))>>24)
#define PCMCIA_CR_PCR2_OE_shift                                                      (23)
#define PCMCIA_CR_PCR2_OE_mask                                                       (0x00800000)
#define PCMCIA_CR_PCR2_OE(data)                                                      (0x00800000&((data)<<23))
#define PCMCIA_CR_PCR2_OE_src(data)                                                  ((0x00800000&(data))>>23)
#define PCMCIA_CR_get_PCR2_OE(data)                                                  ((0x00800000&(data))>>23)
#define PCMCIA_CR_PIIE1_shift                                                        (7)
#define PCMCIA_CR_PIIE1_mask                                                         (0x00000080)
#define PCMCIA_CR_PIIE1(data)                                                        (0x00000080&((data)<<7))
#define PCMCIA_CR_PIIE1_src(data)                                                    ((0x00000080&(data))>>7)
#define PCMCIA_CR_get_PIIE1(data)                                                    ((0x00000080&(data))>>7)
#define PCMCIA_CR_PCIIE1_shift                                                       (6)
#define PCMCIA_CR_PCIIE1_mask                                                        (0x00000040)
#define PCMCIA_CR_PCIIE1(data)                                                       (0x00000040&((data)<<6))
#define PCMCIA_CR_PCIIE1_src(data)                                                   ((0x00000040&(data))>>6)
#define PCMCIA_CR_get_PCIIE1(data)                                                   ((0x00000040&(data))>>6)
#define PCMCIA_CR_PCRIE1_shift                                                       (5)
#define PCMCIA_CR_PCRIE1_mask                                                        (0x00000020)
#define PCMCIA_CR_PCRIE1(data)                                                       (0x00000020&((data)<<5))
#define PCMCIA_CR_PCRIE1_src(data)                                                   ((0x00000020&(data))>>5)
#define PCMCIA_CR_get_PCRIE1(data)                                                   ((0x00000020&(data))>>5)
#define PCMCIA_CR_PIIE2_shift                                                        (4)
#define PCMCIA_CR_PIIE2_mask                                                         (0x00000010)
#define PCMCIA_CR_PIIE2(data)                                                        (0x00000010&((data)<<4))
#define PCMCIA_CR_PIIE2_src(data)                                                    ((0x00000010&(data))>>4)
#define PCMCIA_CR_get_PIIE2(data)                                                    ((0x00000010&(data))>>4)
#define PCMCIA_CR_PCIIE2_shift                                                       (3)
#define PCMCIA_CR_PCIIE2_mask                                                        (0x00000008)
#define PCMCIA_CR_PCIIE2(data)                                                       (0x00000008&((data)<<3))
#define PCMCIA_CR_PCIIE2_src(data)                                                   ((0x00000008&(data))>>3)
#define PCMCIA_CR_get_PCIIE2(data)                                                   ((0x00000008&(data))>>3)
#define PCMCIA_CR_PCRIE2_shift                                                       (2)
#define PCMCIA_CR_PCRIE2_mask                                                        (0x00000004)
#define PCMCIA_CR_PCRIE2(data)                                                       (0x00000004&((data)<<2))
#define PCMCIA_CR_PCRIE2_src(data)                                                   ((0x00000004&(data))>>2)
#define PCMCIA_CR_get_PCRIE2(data)                                                   ((0x00000004&(data))>>2)
#define PCMCIA_CR_AFIE_shift                                                         (1)
#define PCMCIA_CR_AFIE_mask                                                          (0x00000002)
#define PCMCIA_CR_AFIE(data)                                                         (0x00000002&((data)<<1))
#define PCMCIA_CR_AFIE_src(data)                                                     ((0x00000002&(data))>>1)
#define PCMCIA_CR_get_AFIE(data)                                                     ((0x00000002&(data))>>1)
#define PCMCIA_CR_APFIE_shift                                                        (0)
#define PCMCIA_CR_APFIE_mask                                                         (0x00000001)
#define PCMCIA_CR_APFIE(data)                                                        (0x00000001&((data)<<0))
#define PCMCIA_CR_APFIE_src(data)                                                    ((0x00000001&(data))>>0)
#define PCMCIA_CR_get_APFIE(data)                                                    ((0x00000001&(data))>>0)


#define PCMCIA_STS                                                                   0x1801B708
#define PCMCIA_STS_reg_addr                                                          "0xB801B708"
#define PCMCIA_STS_reg                                                               0xB801B708
#define set_PCMCIA_STS_reg(data)   (*((volatile unsigned int*) PCMCIA_STS_reg)=data)
#define get_PCMCIA_STS_reg   (*((volatile unsigned int*) PCMCIA_STS_reg))
#define PCMCIA_STS_inst_adr                                                          "0x00C2"
#define PCMCIA_STS_inst                                                              0x00C2
#define PCMCIA_STS_PRES1_shift                                                       (9)
#define PCMCIA_STS_PRES1_mask                                                        (0x00000200)
#define PCMCIA_STS_PRES1(data)                                                       (0x00000200&((data)<<9))
#define PCMCIA_STS_PRES1_src(data)                                                   ((0x00000200&(data))>>9)
#define PCMCIA_STS_get_PRES1(data)                                                   ((0x00000200&(data))>>9)
#define PCMCIA_STS_PRES2_shift                                                       (8)
#define PCMCIA_STS_PRES2_mask                                                        (0x00000100)
#define PCMCIA_STS_PRES2(data)                                                       (0x00000100&((data)<<8))
#define PCMCIA_STS_PRES2_src(data)                                                   ((0x00000100&(data))>>8)
#define PCMCIA_STS_get_PRES2(data)                                                   ((0x00000100&(data))>>8)
#define PCMCIA_STS_PII1_shift                                                        (7)
#define PCMCIA_STS_PII1_mask                                                         (0x00000080)
#define PCMCIA_STS_PII1(data)                                                        (0x00000080&((data)<<7))
#define PCMCIA_STS_PII1_src(data)                                                    ((0x00000080&(data))>>7)
#define PCMCIA_STS_get_PII1(data)                                                    ((0x00000080&(data))>>7)
#define PCMCIA_STS_PCII1_shift                                                       (6)
#define PCMCIA_STS_PCII1_mask                                                        (0x00000040)
#define PCMCIA_STS_PCII1(data)                                                       (0x00000040&((data)<<6))
#define PCMCIA_STS_PCII1_src(data)                                                   ((0x00000040&(data))>>6)
#define PCMCIA_STS_get_PCII1(data)                                                   ((0x00000040&(data))>>6)
#define PCMCIA_STS_PCRI1_shift                                                       (5)
#define PCMCIA_STS_PCRI1_mask                                                        (0x00000020)
#define PCMCIA_STS_PCRI1(data)                                                       (0x00000020&((data)<<5))
#define PCMCIA_STS_PCRI1_src(data)                                                   ((0x00000020&(data))>>5)
#define PCMCIA_STS_get_PCRI1(data)                                                   ((0x00000020&(data))>>5)
#define PCMCIA_STS_PII2_shift                                                        (4)
#define PCMCIA_STS_PII2_mask                                                         (0x00000010)
#define PCMCIA_STS_PII2(data)                                                        (0x00000010&((data)<<4))
#define PCMCIA_STS_PII2_src(data)                                                    ((0x00000010&(data))>>4)
#define PCMCIA_STS_get_PII2(data)                                                    ((0x00000010&(data))>>4)
#define PCMCIA_STS_PCII2_shift                                                       (3)
#define PCMCIA_STS_PCII2_mask                                                        (0x00000008)
#define PCMCIA_STS_PCII2(data)                                                       (0x00000008&((data)<<3))
#define PCMCIA_STS_PCII2_src(data)                                                   ((0x00000008&(data))>>3)
#define PCMCIA_STS_get_PCII2(data)                                                   ((0x00000008&(data))>>3)
#define PCMCIA_STS_PCRI2_shift                                                       (2)
#define PCMCIA_STS_PCRI2_mask                                                        (0x00000004)
#define PCMCIA_STS_PCRI2(data)                                                       (0x00000004&((data)<<2))
#define PCMCIA_STS_PCRI2_src(data)                                                   ((0x00000004&(data))>>2)
#define PCMCIA_STS_get_PCRI2(data)                                                   ((0x00000004&(data))>>2)
#define PCMCIA_STS_AFI_shift                                                         (1)
#define PCMCIA_STS_AFI_mask                                                          (0x00000002)
#define PCMCIA_STS_AFI(data)                                                         (0x00000002&((data)<<1))
#define PCMCIA_STS_AFI_src(data)                                                     ((0x00000002&(data))>>1)
#define PCMCIA_STS_get_AFI(data)                                                     ((0x00000002&(data))>>1)
#define PCMCIA_STS_APFI_shift                                                        (0)
#define PCMCIA_STS_APFI_mask                                                         (0x00000001)
#define PCMCIA_STS_APFI(data)                                                        (0x00000001&((data)<<0))
#define PCMCIA_STS_APFI_src(data)                                                    ((0x00000001&(data))>>0)
#define PCMCIA_STS_get_APFI(data)                                                    ((0x00000001&(data))>>0)


#define PCMCIA_AMTC                                                                  0x1801B70C
#define PCMCIA_AMTC_reg_addr                                                         "0xB801B70C"
#define PCMCIA_AMTC_reg                                                              0xB801B70C
#define set_PCMCIA_AMTC_reg(data)   (*((volatile unsigned int*) PCMCIA_AMTC_reg)=data)
#define get_PCMCIA_AMTC_reg   (*((volatile unsigned int*) PCMCIA_AMTC_reg))
#define PCMCIA_AMTC_inst_adr                                                         "0x00C3"
#define PCMCIA_AMTC_inst                                                             0x00C3
#define PCMCIA_AMTC_TWE_shift                                                        (26)
#define PCMCIA_AMTC_TWE_mask                                                         (0xFC000000)
#define PCMCIA_AMTC_TWE(data)                                                        (0xFC000000&((data)<<26))
#define PCMCIA_AMTC_TWE_src(data)                                                    ((0xFC000000&(data))>>26)
#define PCMCIA_AMTC_get_TWE(data)                                                    ((0xFC000000&(data))>>26)
#define PCMCIA_AMTC_THD_shift                                                        (22)
#define PCMCIA_AMTC_THD_mask                                                         (0x03C00000)
#define PCMCIA_AMTC_THD(data)                                                        (0x03C00000&((data)<<22))
#define PCMCIA_AMTC_THD_src(data)                                                    ((0x03C00000&(data))>>22)
#define PCMCIA_AMTC_get_THD(data)                                                    ((0x03C00000&(data))>>22)
#define PCMCIA_AMTC_TAOE_shift                                                       (17)
#define PCMCIA_AMTC_TAOE_mask                                                        (0x003E0000)
#define PCMCIA_AMTC_TAOE(data)                                                       (0x003E0000&((data)<<17))
#define PCMCIA_AMTC_TAOE_src(data)                                                   ((0x003E0000&(data))>>17)
#define PCMCIA_AMTC_get_TAOE(data)                                                   ((0x003E0000&(data))>>17)
#define PCMCIA_AMTC_THCE_shift                                                       (8)
#define PCMCIA_AMTC_THCE_mask                                                        (0x00001F00)
#define PCMCIA_AMTC_THCE(data)                                                       (0x00001F00&((data)<<8))
#define PCMCIA_AMTC_THCE_src(data)                                                   ((0x00001F00&(data))>>8)
#define PCMCIA_AMTC_get_THCE(data)                                                   ((0x00001F00&(data))>>8)
#define PCMCIA_AMTC_TSU_shift                                                        (0)
#define PCMCIA_AMTC_TSU_mask                                                         (0x0000001F)
#define PCMCIA_AMTC_TSU(data)                                                        (0x0000001F&((data)<<0))
#define PCMCIA_AMTC_TSU_src(data)                                                    ((0x0000001F&(data))>>0)
#define PCMCIA_AMTC_get_TSU(data)                                                    ((0x0000001F&(data))>>0)


#define PCMCIA_IOMTC                                                                 0x1801B710
#define PCMCIA_IOMTC_reg_addr                                                        "0xB801B710"
#define PCMCIA_IOMTC_reg                                                             0xB801B710
#define set_PCMCIA_IOMTC_reg(data)   (*((volatile unsigned int*) PCMCIA_IOMTC_reg)=data)
#define get_PCMCIA_IOMTC_reg   (*((volatile unsigned int*) PCMCIA_IOMTC_reg))
#define PCMCIA_IOMTC_inst_adr                                                        "0x00C4"
#define PCMCIA_IOMTC_inst                                                            0x00C4
#define PCMCIA_IOMTC_TDIORD_shift                                                    (16)
#define PCMCIA_IOMTC_TDIORD_mask                                                     (0x001F0000)
#define PCMCIA_IOMTC_TDIORD(data)                                                    (0x001F0000&((data)<<16))
#define PCMCIA_IOMTC_TDIORD_src(data)                                                ((0x001F0000&(data))>>16)
#define PCMCIA_IOMTC_get_TDIORD(data)                                                ((0x001F0000&(data))>>16)
#define PCMCIA_IOMTC_TSUIO_shift                                                     (8)
#define PCMCIA_IOMTC_TSUIO_mask                                                      (0x00001F00)
#define PCMCIA_IOMTC_TSUIO(data)                                                     (0x00001F00&((data)<<8))
#define PCMCIA_IOMTC_TSUIO_src(data)                                                 ((0x00001F00&(data))>>8)
#define PCMCIA_IOMTC_get_TSUIO(data)                                                 ((0x00001F00&(data))>>8)
#define PCMCIA_IOMTC_TDINPACK_shift                                                  (4)
#define PCMCIA_IOMTC_TDINPACK_mask                                                   (0x000000F0)
#define PCMCIA_IOMTC_TDINPACK(data)                                                  (0x000000F0&((data)<<4))
#define PCMCIA_IOMTC_TDINPACK_src(data)                                              ((0x000000F0&(data))>>4)
#define PCMCIA_IOMTC_get_TDINPACK(data)                                              ((0x000000F0&(data))>>4)
#define PCMCIA_IOMTC_TDWT_shift                                                      (0)
#define PCMCIA_IOMTC_TDWT_mask                                                       (0x0000000F)
#define PCMCIA_IOMTC_TDWT(data)                                                      (0x0000000F&((data)<<0))
#define PCMCIA_IOMTC_TDWT_src(data)                                                  ((0x0000000F&(data))>>0)
#define PCMCIA_IOMTC_get_TDWT(data)                                                  ((0x0000000F&(data))>>0)


#define PCMCIA_MATC                                                                  0x1801B714
#define PCMCIA_MATC_reg_addr                                                         "0xB801B714"
#define PCMCIA_MATC_reg                                                              0xB801B714
#define set_PCMCIA_MATC_reg(data)   (*((volatile unsigned int*) PCMCIA_MATC_reg)=data)
#define get_PCMCIA_MATC_reg   (*((volatile unsigned int*) PCMCIA_MATC_reg))
#define PCMCIA_MATC_inst_adr                                                         "0x00C5"
#define PCMCIA_MATC_inst                                                             0x00C5
#define PCMCIA_MATC_TC_shift                                                         (24)
#define PCMCIA_MATC_TC_mask                                                          (0xFF000000)
#define PCMCIA_MATC_TC(data)                                                         (0xFF000000&((data)<<24))
#define PCMCIA_MATC_TC_src(data)                                                     ((0xFF000000&(data))>>24)
#define PCMCIA_MATC_get_TC(data)                                                     ((0xFF000000&(data))>>24)
#define PCMCIA_MATC_THDIO_shift                                                      (20)
#define PCMCIA_MATC_THDIO_mask                                                       (0x00F00000)
#define PCMCIA_MATC_THDIO(data)                                                      (0x00F00000&((data)<<20))
#define PCMCIA_MATC_THDIO_src(data)                                                  ((0x00F00000&(data))>>20)
#define PCMCIA_MATC_get_THDIO(data)                                                  ((0x00F00000&(data))>>20)
#define PCMCIA_MATC_TCIO_shift                                                       (8)
#define PCMCIA_MATC_TCIO_mask                                                        (0x0001FF00)
#define PCMCIA_MATC_TCIO(data)                                                       (0x0001FF00&((data)<<8))
#define PCMCIA_MATC_TCIO_src(data)                                                   ((0x0001FF00&(data))>>8)
#define PCMCIA_MATC_get_TCIO(data)                                                   ((0x0001FF00&(data))>>8)
#define PCMCIA_MATC_TWIOWR_shift                                                     (0)
#define PCMCIA_MATC_TWIOWR_mask                                                      (0x0000003F)
#define PCMCIA_MATC_TWIOWR(data)                                                     (0x0000003F&((data)<<0))
#define PCMCIA_MATC_TWIOWR_src(data)                                                 ((0x0000003F&(data))>>0)
#define PCMCIA_MATC_get_TWIOWR(data)                                                 ((0x0000003F&(data))>>0)


#define PCMCIA_ACTRL                                                                 0x1801B718
#define PCMCIA_ACTRL_reg_addr                                                        "0xB801B718"
#define PCMCIA_ACTRL_reg                                                             0xB801B718
#define set_PCMCIA_ACTRL_reg(data)   (*((volatile unsigned int*) PCMCIA_ACTRL_reg)=data)
#define get_PCMCIA_ACTRL_reg   (*((volatile unsigned int*) PCMCIA_ACTRL_reg))
#define PCMCIA_ACTRL_inst_adr                                                        "0x00C6"
#define PCMCIA_ACTRL_inst                                                            0x00C6
#define PCMCIA_ACTRL_OE_shift                                                        (0)
#define PCMCIA_ACTRL_OE_mask                                                         (0x00007FFF)
#define PCMCIA_ACTRL_OE(data)                                                        (0x00007FFF&((data)<<0))
#define PCMCIA_ACTRL_OE_src(data)                                                    ((0x00007FFF&(data))>>0)
#define PCMCIA_ACTRL_get_OE(data)                                                    ((0x00007FFF&(data))>>0)


#define SC0_FP                                                                       0x1801B800
#define SC0_FP_reg_addr                                                              "0xB801B800"
#define SC0_FP_reg                                                                   0xB801B800
#define set_SC0_FP_reg(data)   (*((volatile unsigned int*) SC0_FP_reg)=data)
#define get_SC0_FP_reg   (*((volatile unsigned int*) SC0_FP_reg))
#define SC0_FP_inst_adr                                                              "0x0000"
#define SC0_FP_inst                                                                  0x0000
#define SC0_FP_CLK_EN_shift                                                          (24)
#define SC0_FP_CLK_EN_mask                                                           (0x01000000)
#define SC0_FP_CLK_EN(data)                                                          (0x01000000&((data)<<24))
#define SC0_FP_CLK_EN_src(data)                                                      ((0x01000000&(data))>>24)
#define SC0_FP_get_CLK_EN(data)                                                      ((0x01000000&(data))>>24)
#define SC0_FP_SC_CLKDIV_shift                                                       (18)
#define SC0_FP_SC_CLKDIV_mask                                                        (0x00FC0000)
#define SC0_FP_SC_CLKDIV(data)                                                       (0x00FC0000&((data)<<18))
#define SC0_FP_SC_CLKDIV_src(data)                                                   ((0x00FC0000&(data))>>18)
#define SC0_FP_get_SC_CLKDIV(data)                                                   ((0x00FC0000&(data))>>18)
#define SC0_FP_BAUDDIV2_shift                                                        (16)
#define SC0_FP_BAUDDIV2_mask                                                         (0x00030000)
#define SC0_FP_BAUDDIV2(data)                                                        (0x00030000&((data)<<16))
#define SC0_FP_BAUDDIV2_src(data)                                                    ((0x00030000&(data))>>16)
#define SC0_FP_get_BAUDDIV2(data)                                                    ((0x00030000&(data))>>16)
#define SC0_FP_BAUDDIV1_shift                                                        (8)
#define SC0_FP_BAUDDIV1_mask                                                         (0x0000FF00)
#define SC0_FP_BAUDDIV1(data)                                                        (0x0000FF00&((data)<<8))
#define SC0_FP_BAUDDIV1_src(data)                                                    ((0x0000FF00&(data))>>8)
#define SC0_FP_get_BAUDDIV1(data)                                                    ((0x0000FF00&(data))>>8)
#define SC0_FP_PRE_CLKDIV_shift                                                      (0)
#define SC0_FP_PRE_CLKDIV_mask                                                       (0x000000FF)
#define SC0_FP_PRE_CLKDIV(data)                                                      (0x000000FF&((data)<<0))
#define SC0_FP_PRE_CLKDIV_src(data)                                                  ((0x000000FF&(data))>>0)
#define SC0_FP_get_PRE_CLKDIV(data)                                                  ((0x000000FF&(data))>>0)


#define SC0_CR                                                                       0x1801B804
#define SC0_CR_reg_addr                                                              "0xB801B804"
#define SC0_CR_reg                                                                   0xB801B804
#define set_SC0_CR_reg(data)   (*((volatile unsigned int*) SC0_CR_reg)=data)
#define get_SC0_CR_reg   (*((volatile unsigned int*) SC0_CR_reg))
#define SC0_CR_inst_adr                                                              "0x0001"
#define SC0_CR_inst                                                                  0x0001
#define SC0_CR_FIFO_RST_shift                                                        (31)
#define SC0_CR_FIFO_RST_mask                                                         (0x80000000)
#define SC0_CR_FIFO_RST(data)                                                        (0x80000000&((data)<<31))
#define SC0_CR_FIFO_RST_src(data)                                                    ((0x80000000&(data))>>31)
#define SC0_CR_get_FIFO_RST(data)                                                    ((0x80000000&(data))>>31)
#define SC0_CR_RST_shift                                                             (30)
#define SC0_CR_RST_mask                                                              (0x40000000)
#define SC0_CR_RST(data)                                                             (0x40000000&((data)<<30))
#define SC0_CR_RST_src(data)                                                         ((0x40000000&(data))>>30)
#define SC0_CR_get_RST(data)                                                         ((0x40000000&(data))>>30)
#define SC0_CR_SCEN_shift                                                            (29)
#define SC0_CR_SCEN_mask                                                             (0x20000000)
#define SC0_CR_SCEN(data)                                                            (0x20000000&((data)<<29))
#define SC0_CR_SCEN_src(data)                                                        ((0x20000000&(data))>>29)
#define SC0_CR_get_SCEN(data)                                                        ((0x20000000&(data))>>29)
#define SC0_CR_TX_GO_shift                                                           (28)
#define SC0_CR_TX_GO_mask                                                            (0x10000000)
#define SC0_CR_TX_GO(data)                                                           (0x10000000&((data)<<28))
#define SC0_CR_TX_GO_src(data)                                                       ((0x10000000&(data))>>28)
#define SC0_CR_get_TX_GO(data)                                                       ((0x10000000&(data))>>28)
#define SC0_CR_AUTO_ATR_shift                                                        (27)
#define SC0_CR_AUTO_ATR_mask                                                         (0x08000000)
#define SC0_CR_AUTO_ATR(data)                                                        (0x08000000&((data)<<27))
#define SC0_CR_AUTO_ATR_src(data)                                                    ((0x08000000&(data))>>27)
#define SC0_CR_get_AUTO_ATR(data)                                                    ((0x08000000&(data))>>27)
#define SC0_CR_CONV_shift                                                            (26)
#define SC0_CR_CONV_mask                                                             (0x04000000)
#define SC0_CR_CONV(data)                                                            (0x04000000&((data)<<26))
#define SC0_CR_CONV_src(data)                                                        ((0x04000000&(data))>>26)
#define SC0_CR_get_CONV(data)                                                        ((0x04000000&(data))>>26)
#define SC0_CR_CLK_STOP_shift                                                        (25)
#define SC0_CR_CLK_STOP_mask                                                         (0x02000000)
#define SC0_CR_CLK_STOP(data)                                                        (0x02000000&((data)<<25))
#define SC0_CR_CLK_STOP_src(data)                                                    ((0x02000000&(data))>>25)
#define SC0_CR_get_CLK_STOP(data)                                                    ((0x02000000&(data))>>25)
#define SC0_CR_PS_shift                                                              (24)
#define SC0_CR_PS_mask                                                               (0x01000000)
#define SC0_CR_PS(data)                                                              (0x01000000&((data)<<24))
#define SC0_CR_PS_src(data)                                                          ((0x01000000&(data))>>24)
#define SC0_CR_get_PS(data)                                                          ((0x01000000&(data))>>24)
#define SC0_CR_mask_sc_pres_shift                                                    (23)
#define SC0_CR_mask_sc_pres_mask                                                     (0x00800000)
#define SC0_CR_mask_sc_pres(data)                                                    (0x00800000&((data)<<23))
#define SC0_CR_mask_sc_pres_src(data)                                                ((0x00800000&(data))>>23)
#define SC0_CR_get_mask_sc_pres(data)                                                ((0x00800000&(data))>>23)
#define SC0_CR_rst_waitmode_shift                                                    (22)
#define SC0_CR_rst_waitmode_mask                                                     (0x00400000)
#define SC0_CR_rst_waitmode(data)                                                    (0x00400000&((data)<<22))
#define SC0_CR_rst_waitmode_src(data)                                                ((0x00400000&(data))>>22)
#define SC0_CR_get_rst_waitmode(data)                                                ((0x00400000&(data))>>22)
#define SC0_CR_act_seq_shift                                                         (19)
#define SC0_CR_act_seq_mask                                                          (0x00080000)
#define SC0_CR_act_seq(data)                                                         (0x00080000&((data)<<19))
#define SC0_CR_act_seq_src(data)                                                     ((0x00080000&(data))>>19)
#define SC0_CR_get_act_seq(data)                                                     ((0x00080000&(data))>>19)


#define SC0_PCR                                                                      0x1801B808
#define SC0_PCR_reg_addr                                                             "0xB801B808"
#define SC0_PCR_reg                                                                  0xB801B808
#define set_SC0_PCR_reg(data)   (*((volatile unsigned int*) SC0_PCR_reg)=data)
#define get_SC0_PCR_reg   (*((volatile unsigned int*) SC0_PCR_reg))
#define SC0_PCR_inst_adr                                                             "0x0002"
#define SC0_PCR_inst                                                                 0x0002
#define SC0_PCR_TXGRDT_shift                                                         (24)
#define SC0_PCR_TXGRDT_mask                                                          (0xFF000000)
#define SC0_PCR_TXGRDT(data)                                                         (0xFF000000&((data)<<24))
#define SC0_PCR_TXGRDT_src(data)                                                     ((0xFF000000&(data))>>24)
#define SC0_PCR_get_TXGRDT(data)                                                     ((0xFF000000&(data))>>24)
#define SC0_PCR_CWI_shift                                                            (20)
#define SC0_PCR_CWI_mask                                                             (0x00F00000)
#define SC0_PCR_CWI(data)                                                            (0x00F00000&((data)<<20))
#define SC0_PCR_CWI_src(data)                                                        ((0x00F00000&(data))>>20)
#define SC0_PCR_get_CWI(data)                                                        ((0x00F00000&(data))>>20)
#define SC0_PCR_BWI_shift                                                            (16)
#define SC0_PCR_BWI_mask                                                             (0x000F0000)
#define SC0_PCR_BWI(data)                                                            (0x000F0000&((data)<<16))
#define SC0_PCR_BWI_src(data)                                                        ((0x000F0000&(data))>>16)
#define SC0_PCR_get_BWI(data)                                                        ((0x000F0000&(data))>>16)
#define SC0_PCR_WWI_shift                                                            (12)
#define SC0_PCR_WWI_mask                                                             (0x0000F000)
#define SC0_PCR_WWI(data)                                                            (0x0000F000&((data)<<12))
#define SC0_PCR_WWI_src(data)                                                        ((0x0000F000&(data))>>12)
#define SC0_PCR_get_WWI(data)                                                        ((0x0000F000&(data))>>12)
#define SC0_PCR_BGT_shift                                                            (7)
#define SC0_PCR_BGT_mask                                                             (0x00000F80)
#define SC0_PCR_BGT(data)                                                            (0x00000F80&((data)<<7))
#define SC0_PCR_BGT_src(data)                                                        ((0x00000F80&(data))>>7)
#define SC0_PCR_get_BGT(data)                                                        ((0x00000F80&(data))>>7)
#define SC0_PCR_EDC_EN_shift                                                         (6)
#define SC0_PCR_EDC_EN_mask                                                          (0x00000040)
#define SC0_PCR_EDC_EN(data)                                                         (0x00000040&((data)<<6))
#define SC0_PCR_EDC_EN_src(data)                                                     ((0x00000040&(data))>>6)
#define SC0_PCR_get_EDC_EN(data)                                                     ((0x00000040&(data))>>6)
#define SC0_PCR_CRC_shift                                                            (5)
#define SC0_PCR_CRC_mask                                                             (0x00000020)
#define SC0_PCR_CRC(data)                                                            (0x00000020&((data)<<5))
#define SC0_PCR_CRC_src(data)                                                        ((0x00000020&(data))>>5)
#define SC0_PCR_get_CRC(data)                                                        ((0x00000020&(data))>>5)
#define SC0_PCR_PROTOCOL_T_shift                                                     (4)
#define SC0_PCR_PROTOCOL_T_mask                                                      (0x00000010)
#define SC0_PCR_PROTOCOL_T(data)                                                     (0x00000010&((data)<<4))
#define SC0_PCR_PROTOCOL_T_src(data)                                                 ((0x00000010&(data))>>4)
#define SC0_PCR_get_PROTOCOL_T(data)                                                 ((0x00000010&(data))>>4)
#define SC0_PCR_T0RTY_shift                                                          (3)
#define SC0_PCR_T0RTY_mask                                                           (0x00000008)
#define SC0_PCR_T0RTY(data)                                                          (0x00000008&((data)<<3))
#define SC0_PCR_T0RTY_src(data)                                                      ((0x00000008&(data))>>3)
#define SC0_PCR_get_T0RTY(data)                                                      ((0x00000008&(data))>>3)
#define SC0_PCR_T0RTY_CNT_shift                                                      (0)
#define SC0_PCR_T0RTY_CNT_mask                                                       (0x00000007)
#define SC0_PCR_T0RTY_CNT(data)                                                      (0x00000007&((data)<<0))
#define SC0_PCR_T0RTY_CNT_src(data)                                                  ((0x00000007&(data))>>0)
#define SC0_PCR_get_T0RTY_CNT(data)                                                  ((0x00000007&(data))>>0)


#define SC0_TXFIFO                                                                   0x1801B80C
#define SC0_TXFIFO_reg_addr                                                          "0xB801B80C"
#define SC0_TXFIFO_reg                                                               0xB801B80C
#define set_SC0_TXFIFO_reg(data)   (*((volatile unsigned int*) SC0_TXFIFO_reg)=data)
#define get_SC0_TXFIFO_reg   (*((volatile unsigned int*) SC0_TXFIFO_reg))
#define SC0_TXFIFO_inst_adr                                                          "0x0003"
#define SC0_TXFIFO_inst                                                              0x0003
#define SC0_TXFIFO_tx_fifo_full_shift                                                (8)
#define SC0_TXFIFO_tx_fifo_full_mask                                                 (0x00000100)
#define SC0_TXFIFO_tx_fifo_full(data)                                                (0x00000100&((data)<<8))
#define SC0_TXFIFO_tx_fifo_full_src(data)                                            ((0x00000100&(data))>>8)
#define SC0_TXFIFO_get_tx_fifo_full(data)                                            ((0x00000100&(data))>>8)
#define SC0_TXFIFO_DAT_shift                                                         (0)
#define SC0_TXFIFO_DAT_mask                                                          (0x000000FF)
#define SC0_TXFIFO_DAT(data)                                                         (0x000000FF&((data)<<0))
#define SC0_TXFIFO_DAT_src(data)                                                     ((0x000000FF&(data))>>0)
#define SC0_TXFIFO_get_DAT(data)                                                     ((0x000000FF&(data))>>0)


#define SC0_RXFIFO                                                                   0x1801B814
#define SC0_RXFIFO_reg_addr                                                          "0xB801B814"
#define SC0_RXFIFO_reg                                                               0xB801B814
#define set_SC0_RXFIFO_reg(data)   (*((volatile unsigned int*) SC0_RXFIFO_reg)=data)
#define get_SC0_RXFIFO_reg   (*((volatile unsigned int*) SC0_RXFIFO_reg))
#define SC0_RXFIFO_inst_adr                                                          "0x0005"
#define SC0_RXFIFO_inst                                                              0x0005
#define SC0_RXFIFO_DAT_shift                                                         (0)
#define SC0_RXFIFO_DAT_mask                                                          (0x000000FF)
#define SC0_RXFIFO_DAT(data)                                                         (0x000000FF&((data)<<0))
#define SC0_RXFIFO_DAT_src(data)                                                     ((0x000000FF&(data))>>0)
#define SC0_RXFIFO_get_DAT(data)                                                     ((0x000000FF&(data))>>0)


#define SC0_RXLENR                                                                   0x1801B818
#define SC0_RXLENR_reg_addr                                                          "0xB801B818"
#define SC0_RXLENR_reg                                                               0xB801B818
#define set_SC0_RXLENR_reg(data)   (*((volatile unsigned int*) SC0_RXLENR_reg)=data)
#define get_SC0_RXLENR_reg   (*((volatile unsigned int*) SC0_RXLENR_reg))
#define SC0_RXLENR_inst_adr                                                          "0x0006"
#define SC0_RXLENR_inst                                                              0x0006
#define SC0_RXLENR_RXLEN_shift                                                       (0)
#define SC0_RXLENR_RXLEN_mask                                                        (0x000000FF)
#define SC0_RXLENR_RXLEN(data)                                                       (0x000000FF&((data)<<0))
#define SC0_RXLENR_RXLEN_src(data)                                                   ((0x000000FF&(data))>>0)
#define SC0_RXLENR_get_RXLEN(data)                                                   ((0x000000FF&(data))>>0)


#define SC0_FCR                                                                      0x1801B81C
#define SC0_FCR_reg_addr                                                             "0xB801B81C"
#define SC0_FCR_reg                                                                  0xB801B81C
#define set_SC0_FCR_reg(data)   (*((volatile unsigned int*) SC0_FCR_reg)=data)
#define get_SC0_FCR_reg   (*((volatile unsigned int*) SC0_FCR_reg))
#define SC0_FCR_inst_adr                                                             "0x0007"
#define SC0_FCR_inst                                                                 0x0007
#define SC0_FCR_RXFLOW_shift                                                         (1)
#define SC0_FCR_RXFLOW_mask                                                          (0x00000002)
#define SC0_FCR_RXFLOW(data)                                                         (0x00000002&((data)<<1))
#define SC0_FCR_RXFLOW_src(data)                                                     ((0x00000002&(data))>>1)
#define SC0_FCR_get_RXFLOW(data)                                                     ((0x00000002&(data))>>1)
#define SC0_FCR_FLOW_EN_shift                                                        (0)
#define SC0_FCR_FLOW_EN_mask                                                         (0x00000001)
#define SC0_FCR_FLOW_EN(data)                                                        (0x00000001&((data)<<0))
#define SC0_FCR_FLOW_EN_src(data)                                                    ((0x00000001&(data))>>0)
#define SC0_FCR_get_FLOW_EN(data)                                                    ((0x00000001&(data))>>0)


#define SC0_IRSR                                                                     0x1801B820
#define SC0_IRSR_reg_addr                                                            "0xB801B820"
#define SC0_IRSR_reg                                                                 0xB801B820
#define set_SC0_IRSR_reg(data)   (*((volatile unsigned int*) SC0_IRSR_reg)=data)
#define get_SC0_IRSR_reg   (*((volatile unsigned int*) SC0_IRSR_reg))
#define SC0_IRSR_inst_adr                                                            "0x0008"
#define SC0_IRSR_inst                                                                0x0008
#define SC0_IRSR_PRES_shift                                                          (16)
#define SC0_IRSR_PRES_mask                                                           (0x00010000)
#define SC0_IRSR_PRES(data)                                                          (0x00010000&((data)<<16))
#define SC0_IRSR_PRES_src(data)                                                      ((0x00010000&(data))>>16)
#define SC0_IRSR_get_PRES(data)                                                      ((0x00010000&(data))>>16)
#define SC0_IRSR_CPRES_INT_shift                                                     (15)
#define SC0_IRSR_CPRES_INT_mask                                                      (0x00008000)
#define SC0_IRSR_CPRES_INT(data)                                                     (0x00008000&((data)<<15))
#define SC0_IRSR_CPRES_INT_src(data)                                                 ((0x00008000&(data))>>15)
#define SC0_IRSR_get_CPRES_INT(data)                                                 ((0x00008000&(data))>>15)
#define SC0_IRSR_TX_FLOW_INT_shift                                                   (14)
#define SC0_IRSR_TX_FLOW_INT_mask                                                    (0x00004000)
#define SC0_IRSR_TX_FLOW_INT(data)                                                   (0x00004000&((data)<<14))
#define SC0_IRSR_TX_FLOW_INT_src(data)                                               ((0x00004000&(data))>>14)
#define SC0_IRSR_get_TX_FLOW_INT(data)                                               ((0x00004000&(data))>>14)
#define SC0_IRSR_TXP_INT_shift                                                       (13)
#define SC0_IRSR_TXP_INT_mask                                                        (0x00002000)
#define SC0_IRSR_TXP_INT(data)                                                       (0x00002000&((data)<<13))
#define SC0_IRSR_TXP_INT_src(data)                                                   ((0x00002000&(data))>>13)
#define SC0_IRSR_get_TXP_INT(data)                                                   ((0x00002000&(data))>>13)
#define SC0_IRSR_TXDONE_INT_shift                                                    (12)
#define SC0_IRSR_TXDONE_INT_mask                                                     (0x00001000)
#define SC0_IRSR_TXDONE_INT(data)                                                    (0x00001000&((data)<<12))
#define SC0_IRSR_TXDONE_INT_src(data)                                                ((0x00001000&(data))>>12)
#define SC0_IRSR_get_TXDONE_INT(data)                                                ((0x00001000&(data))>>12)
#define SC0_IRSR_TXEMPTY_INT_shift                                                   (11)
#define SC0_IRSR_TXEMPTY_INT_mask                                                    (0x00000800)
#define SC0_IRSR_TXEMPTY_INT(data)                                                   (0x00000800&((data)<<11))
#define SC0_IRSR_TXEMPTY_INT_src(data)                                               ((0x00000800&(data))>>11)
#define SC0_IRSR_get_TXEMPTY_INT(data)                                               ((0x00000800&(data))>>11)
#define SC0_IRSR_EDCERR_INT_shift                                                    (10)
#define SC0_IRSR_EDCERR_INT_mask                                                     (0x00000400)
#define SC0_IRSR_EDCERR_INT(data)                                                    (0x00000400&((data)<<10))
#define SC0_IRSR_EDCERR_INT_src(data)                                                ((0x00000400&(data))>>10)
#define SC0_IRSR_get_EDCERR_INT(data)                                                ((0x00000400&(data))>>10)
#define SC0_IRSR_RX_FOVER_shift                                                      (9)
#define SC0_IRSR_RX_FOVER_mask                                                       (0x00000200)
#define SC0_IRSR_RX_FOVER(data)                                                      (0x00000200&((data)<<9))
#define SC0_IRSR_RX_FOVER_src(data)                                                  ((0x00000200&(data))>>9)
#define SC0_IRSR_get_RX_FOVER(data)                                                  ((0x00000200&(data))>>9)
#define SC0_IRSR_RXP_INT_shift                                                       (8)
#define SC0_IRSR_RXP_INT_mask                                                        (0x00000100)
#define SC0_IRSR_RXP_INT(data)                                                       (0x00000100&((data)<<8))
#define SC0_IRSR_RXP_INT_src(data)                                                   ((0x00000100&(data))>>8)
#define SC0_IRSR_get_RXP_INT(data)                                                   ((0x00000100&(data))>>8)
#define SC0_IRSR_ATRS_INT_shift                                                      (7)
#define SC0_IRSR_ATRS_INT_mask                                                       (0x00000080)
#define SC0_IRSR_ATRS_INT(data)                                                      (0x00000080&((data)<<7))
#define SC0_IRSR_ATRS_INT_src(data)                                                  ((0x00000080&(data))>>7)
#define SC0_IRSR_get_ATRS_INT(data)                                                  ((0x00000080&(data))>>7)
#define SC0_IRSR_BGT_INT_shift                                                       (6)
#define SC0_IRSR_BGT_INT_mask                                                        (0x00000040)
#define SC0_IRSR_BGT_INT(data)                                                       (0x00000040&((data)<<6))
#define SC0_IRSR_BGT_INT_src(data)                                                   ((0x00000040&(data))>>6)
#define SC0_IRSR_get_BGT_INT(data)                                                   ((0x00000040&(data))>>6)
#define SC0_IRSR_CWT_INT_shift                                                       (5)
#define SC0_IRSR_CWT_INT_mask                                                        (0x00000020)
#define SC0_IRSR_CWT_INT(data)                                                       (0x00000020&((data)<<5))
#define SC0_IRSR_CWT_INT_src(data)                                                   ((0x00000020&(data))>>5)
#define SC0_IRSR_get_CWT_INT(data)                                                   ((0x00000020&(data))>>5)
#define SC0_IRSR_RLEN_INT_shift                                                      (4)
#define SC0_IRSR_RLEN_INT_mask                                                       (0x00000010)
#define SC0_IRSR_RLEN_INT(data)                                                      (0x00000010&((data)<<4))
#define SC0_IRSR_RLEN_INT_src(data)                                                  ((0x00000010&(data))>>4)
#define SC0_IRSR_get_RLEN_INT(data)                                                  ((0x00000010&(data))>>4)
#define SC0_IRSR_WWT_INT_shift                                                       (3)
#define SC0_IRSR_WWT_INT_mask                                                        (0x00000008)
#define SC0_IRSR_WWT_INT(data)                                                       (0x00000008&((data)<<3))
#define SC0_IRSR_WWT_INT_src(data)                                                   ((0x00000008&(data))>>3)
#define SC0_IRSR_get_WWT_INT(data)                                                   ((0x00000008&(data))>>3)
#define SC0_IRSR_BWT_INT_shift                                                       (2)
#define SC0_IRSR_BWT_INT_mask                                                        (0x00000004)
#define SC0_IRSR_BWT_INT(data)                                                       (0x00000004&((data)<<2))
#define SC0_IRSR_BWT_INT_src(data)                                                   ((0x00000004&(data))>>2)
#define SC0_IRSR_get_BWT_INT(data)                                                   ((0x00000004&(data))>>2)
#define SC0_IRSR_RCV_INT_shift                                                       (1)
#define SC0_IRSR_RCV_INT_mask                                                        (0x00000002)
#define SC0_IRSR_RCV_INT(data)                                                       (0x00000002&((data)<<1))
#define SC0_IRSR_RCV_INT_src(data)                                                   ((0x00000002&(data))>>1)
#define SC0_IRSR_get_RCV_INT(data)                                                   ((0x00000002&(data))>>1)
#define SC0_IRSR_DRDY_INT_shift                                                      (0)
#define SC0_IRSR_DRDY_INT_mask                                                       (0x00000001)
#define SC0_IRSR_DRDY_INT(data)                                                      (0x00000001&((data)<<0))
#define SC0_IRSR_DRDY_INT_src(data)                                                  ((0x00000001&(data))>>0)
#define SC0_IRSR_get_DRDY_INT(data)                                                  ((0x00000001&(data))>>0)


#define SC0_IRER                                                                     0x1801B824
#define SC0_IRER_reg_addr                                                            "0xB801B824"
#define SC0_IRER_reg                                                                 0xB801B824
#define set_SC0_IRER_reg(data)   (*((volatile unsigned int*) SC0_IRER_reg)=data)
#define get_SC0_IRER_reg   (*((volatile unsigned int*) SC0_IRER_reg))
#define SC0_IRER_inst_adr                                                            "0x0009"
#define SC0_IRER_inst                                                                0x0009
#define SC0_IRER_CPRES_EN_shift                                                      (15)
#define SC0_IRER_CPRES_EN_mask                                                       (0x00008000)
#define SC0_IRER_CPRES_EN(data)                                                      (0x00008000&((data)<<15))
#define SC0_IRER_CPRES_EN_src(data)                                                  ((0x00008000&(data))>>15)
#define SC0_IRER_get_CPRES_EN(data)                                                  ((0x00008000&(data))>>15)
#define SC0_IRER_TXFLOW_INT_EN_shift                                                 (14)
#define SC0_IRER_TXFLOW_INT_EN_mask                                                  (0x00004000)
#define SC0_IRER_TXFLOW_INT_EN(data)                                                 (0x00004000&((data)<<14))
#define SC0_IRER_TXFLOW_INT_EN_src(data)                                             ((0x00004000&(data))>>14)
#define SC0_IRER_get_TXFLOW_INT_EN(data)                                             ((0x00004000&(data))>>14)
#define SC0_IRER_TXP_EN_shift                                                        (13)
#define SC0_IRER_TXP_EN_mask                                                         (0x00002000)
#define SC0_IRER_TXP_EN(data)                                                        (0x00002000&((data)<<13))
#define SC0_IRER_TXP_EN_src(data)                                                    ((0x00002000&(data))>>13)
#define SC0_IRER_get_TXP_EN(data)                                                    ((0x00002000&(data))>>13)
#define SC0_IRER_TXDONE_EN_shift                                                     (12)
#define SC0_IRER_TXDONE_EN_mask                                                      (0x00001000)
#define SC0_IRER_TXDONE_EN(data)                                                     (0x00001000&((data)<<12))
#define SC0_IRER_TXDONE_EN_src(data)                                                 ((0x00001000&(data))>>12)
#define SC0_IRER_get_TXDONE_EN(data)                                                 ((0x00001000&(data))>>12)
#define SC0_IRER_TXEMPTY_EN_shift                                                    (11)
#define SC0_IRER_TXEMPTY_EN_mask                                                     (0x00000800)
#define SC0_IRER_TXEMPTY_EN(data)                                                    (0x00000800&((data)<<11))
#define SC0_IRER_TXEMPTY_EN_src(data)                                                ((0x00000800&(data))>>11)
#define SC0_IRER_get_TXEMPTY_EN(data)                                                ((0x00000800&(data))>>11)
#define SC0_IRER_EDCERR_EN_shift                                                     (10)
#define SC0_IRER_EDCERR_EN_mask                                                      (0x00000400)
#define SC0_IRER_EDCERR_EN(data)                                                     (0x00000400&((data)<<10))
#define SC0_IRER_EDCERR_EN_src(data)                                                 ((0x00000400&(data))>>10)
#define SC0_IRER_get_EDCERR_EN(data)                                                 ((0x00000400&(data))>>10)
#define SC0_IRER_RX_FOVER_EN_shift                                                   (9)
#define SC0_IRER_RX_FOVER_EN_mask                                                    (0x00000200)
#define SC0_IRER_RX_FOVER_EN(data)                                                   (0x00000200&((data)<<9))
#define SC0_IRER_RX_FOVER_EN_src(data)                                               ((0x00000200&(data))>>9)
#define SC0_IRER_get_RX_FOVER_EN(data)                                               ((0x00000200&(data))>>9)
#define SC0_IRER_RXP_EN_shift                                                        (8)
#define SC0_IRER_RXP_EN_mask                                                         (0x00000100)
#define SC0_IRER_RXP_EN(data)                                                        (0x00000100&((data)<<8))
#define SC0_IRER_RXP_EN_src(data)                                                    ((0x00000100&(data))>>8)
#define SC0_IRER_get_RXP_EN(data)                                                    ((0x00000100&(data))>>8)
#define SC0_IRER_ATRS_EN_shift                                                       (7)
#define SC0_IRER_ATRS_EN_mask                                                        (0x00000080)
#define SC0_IRER_ATRS_EN(data)                                                       (0x00000080&((data)<<7))
#define SC0_IRER_ATRS_EN_src(data)                                                   ((0x00000080&(data))>>7)
#define SC0_IRER_get_ATRS_EN(data)                                                   ((0x00000080&(data))>>7)
#define SC0_IRER_BGT_EN_shift                                                        (6)
#define SC0_IRER_BGT_EN_mask                                                         (0x00000040)
#define SC0_IRER_BGT_EN(data)                                                        (0x00000040&((data)<<6))
#define SC0_IRER_BGT_EN_src(data)                                                    ((0x00000040&(data))>>6)
#define SC0_IRER_get_BGT_EN(data)                                                    ((0x00000040&(data))>>6)
#define SC0_IRER_CWT_EN_shift                                                        (5)
#define SC0_IRER_CWT_EN_mask                                                         (0x00000020)
#define SC0_IRER_CWT_EN(data)                                                        (0x00000020&((data)<<5))
#define SC0_IRER_CWT_EN_src(data)                                                    ((0x00000020&(data))>>5)
#define SC0_IRER_get_CWT_EN(data)                                                    ((0x00000020&(data))>>5)
#define SC0_IRER_RLEN_EN_shift                                                       (4)
#define SC0_IRER_RLEN_EN_mask                                                        (0x00000010)
#define SC0_IRER_RLEN_EN(data)                                                       (0x00000010&((data)<<4))
#define SC0_IRER_RLEN_EN_src(data)                                                   ((0x00000010&(data))>>4)
#define SC0_IRER_get_RLEN_EN(data)                                                   ((0x00000010&(data))>>4)
#define SC0_IRER_WWT_EN_shift                                                        (3)
#define SC0_IRER_WWT_EN_mask                                                         (0x00000008)
#define SC0_IRER_WWT_EN(data)                                                        (0x00000008&((data)<<3))
#define SC0_IRER_WWT_EN_src(data)                                                    ((0x00000008&(data))>>3)
#define SC0_IRER_get_WWT_EN(data)                                                    ((0x00000008&(data))>>3)
#define SC0_IRER_BWT_EN_shift                                                        (2)
#define SC0_IRER_BWT_EN_mask                                                         (0x00000004)
#define SC0_IRER_BWT_EN(data)                                                        (0x00000004&((data)<<2))
#define SC0_IRER_BWT_EN_src(data)                                                    ((0x00000004&(data))>>2)
#define SC0_IRER_get_BWT_EN(data)                                                    ((0x00000004&(data))>>2)
#define SC0_IRER_RCV_EN_shift                                                        (1)
#define SC0_IRER_RCV_EN_mask                                                         (0x00000002)
#define SC0_IRER_RCV_EN(data)                                                        (0x00000002&((data)<<1))
#define SC0_IRER_RCV_EN_src(data)                                                    ((0x00000002&(data))>>1)
#define SC0_IRER_get_RCV_EN(data)                                                    ((0x00000002&(data))>>1)
#define SC0_IRER_DRDY_EN_shift                                                       (0)
#define SC0_IRER_DRDY_EN_mask                                                        (0x00000001)
#define SC0_IRER_DRDY_EN(data)                                                       (0x00000001&((data)<<0))
#define SC0_IRER_DRDY_EN_src(data)                                                   ((0x00000001&(data))>>0)
#define SC0_IRER_get_DRDY_EN(data)                                                   ((0x00000001&(data))>>0)


#endif
